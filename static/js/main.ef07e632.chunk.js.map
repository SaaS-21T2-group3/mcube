{"version":3,"sources":["redux/Authenticate/actions.js","components/LoginPage.js","components/RegisterPage.js","logo.svg","components/Navigation/NavBar.js","components/Dashboard.js","components/Users.js","App.js","reportWebVitals.js","redux/Authenticate/reducer.js","redux/rootReducers.js","Config/constants.js","Config/axiosClient.js","redux/Authenticate/saga.js","redux/rootSaga.js","index.js","redux/store.js"],"names":["actions","LOGIN","LOGOUT","LOGIN_SUCCESS","LOGIN_FAILURE","LoginPage","history","useHistory","loader","useSelector","state","authenticateReducer","dispatch","useDispatch","className","title","subTitle","name","initialValues","remember","onFinish","type","payload","email","password","Item","rules","required","message","size","prefix","UserOutlined","placeholder","autoComplete","LockOutlined","valuePropName","noStyle","loading","htmlType","onClick","push","RegisterPage","SubMenu","Menu","NavBar","useState","mail","setMail","e","key","selectedKeys","mode","src","logo","alt","icon","MailOutlined","SettingOutlined","ItemGroup","LogoutOutlined","Header","Layout","Footer","Content","Dashboard","Users","PrivateRoute","children","isAuthenticated","rest","render","location","to","pathname","from","PublicRoute","ProtectedRoutes","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","Reducer","action","response","data","token","constants","HOST_URL","process","headers","Accept","axiosClient","axios","create","defaults","baseURL","withCredentials","login","rootSaga","call","URL","post","put","all","takeLatest","authenticateSaga","ReactDOM","StrictMode","store","preloadedState","sagaMiddleware","createSagaMiddleware","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","run","document","getElementById"],"mappings":"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","file":"static/js/main.ef07e632.chunk.js","sourcesContent":["const actions = {\n  LOGIN: 'LOGIN',\n  LOGOUT: 'LOGOUT',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n};\n\nexport default actions;\n","import { useDispatch } from 'react-redux';\nimport actions from 'redux/Authenticate/actions';\nimport { useSelector } from 'react-redux';\nimport { Form, Input, Button, Checkbox, PageHeader } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { useHistory } from 'react-router-dom';\nfunction LoginPage() {\n  const history = useHistory();\n  const { loader } = useSelector((state) => state.authenticateReducer);\n\n  const dispatch = useDispatch();\n\n  let onFinish = () => {\n    dispatch({\n      type: actions.LOGIN,\n      payload: { email: 'eve.holt@reqres.in', password: 'cityslicka' },\n    });\n  };\n  const toRegisterPage = () => {\n    history.push('/register');\n  };\n\n  return (\n    <>\n      <PageHeader\n        className='site-page-header'\n        title='Login'\n        subTitle='Welcome back'\n      />\n      <div className='container-login'>\n        <Form\n          name='normal_login'\n          className='form'\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={onFinish}\n        >\n          <Form.Item\n            name='username'\n            rules={[\n              {\n                required: true,\n                message: 'Please input your Username!',\n              },\n            ]}\n          >\n            <Input\n              size='large'\n              prefix={<UserOutlined className='site-form-item-icon' />}\n              placeholder='Username'\n              autoComplete='username'\n            />\n          </Form.Item>\n          <Form.Item\n            name='password'\n            rules={[\n              {\n                required: true,\n                message: 'Please input your Password!',\n              },\n            ]}\n          >\n            <Input\n              prefix={<LockOutlined className='site-form-item-icon' />}\n              type='password'\n              placeholder='Password'\n              size='large'\n              autoComplete='current-password'\n            />\n          </Form.Item>\n          <Form.Item>\n            <Form.Item name='remember' valuePropName='checked' noStyle>\n              <Checkbox>Remember me</Checkbox>\n            </Form.Item>\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              loading={loader}\n              type='primary'\n              htmlType='submit'\n              className='login-form-button'\n              size='large'\n            >\n              Log in\n            </Button>\n          </Form.Item>\n          <Form.Item>\n            <Button\n              type='secondary'\n              className='login-form-button'\n              size='large'\n              onClick={() => toRegisterPage()}\n            >\n              Sign Up\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </>\n  );\n}\n\nexport default LoginPage;\n","import { useDispatch } from 'react-redux';\nimport actions from 'redux/Authenticate/actions';\nimport { useSelector } from 'react-redux';\nimport { Form, Input, Button, Checkbox, PageHeader } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { useHistory } from 'react-router-dom';\nfunction RegisterPage() {\n  const history = useHistory();\n  const { loader } = useSelector((state) => state.authenticateReducer);\n\n  const dispatch = useDispatch();\n\n  let onFinish = () => {\n    dispatch({\n      type: actions.LOGIN,\n      payload: { email: 'eve.holt@reqres.in', password: 'cityslicka' },\n    });\n  };\n  const toLoginPage = () => {\n    history.push('/login');\n  };\n\n  return (\n    <>\n      <PageHeader\n        className='site-page-header'\n        title='Registration'\n        subTitle='Welcome Onboard'\n      />\n      <div className='container-login'>\n        <Form\n          name='normal_login'\n          className='form'\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={onFinish}\n        >\n          <Form.Item\n            name='username'\n            rules={[\n              {\n                required: true,\n                message: 'Please input your Username!',\n              },\n            ]}\n          >\n            <Input\n              size='large'\n              prefix={<UserOutlined className='site-form-item-icon' />}\n              placeholder='Username'\n              autoComplete='username'\n            />\n          </Form.Item>\n          <Form.Item\n            name='password'\n            rules={[\n              {\n                required: true,\n                message: 'Please input your Password!',\n              },\n            ]}\n          >\n            <Input\n              prefix={<LockOutlined className='site-form-item-icon' />}\n              type='password'\n              placeholder='Password'\n              size='large'\n              autoComplete='current-password'\n            />\n          </Form.Item>\n          <Form.Item>\n            <Form.Item name='remember' valuePropName='checked' noStyle>\n              <Checkbox>Remember me</Checkbox>\n            </Form.Item>\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              type='secondary'\n              onClick={() => toLoginPage()}\n              className='login-form-button'\n              size='large'\n            >\n              Sign in\n            </Button>\n          </Form.Item>\n          <Form.Item>\n            <Button\n              loading={loader}\n              type='primary'\n              className='login-form-button'\n              size='large'\n              htmlType='submit'\n            >\n              Register\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </>\n  );\n}\n\nexport default RegisterPage;\n","export default __webpack_public_path__ + \"static/media/logo.b709ff81.svg\";","import React from 'react';\nimport { Menu } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport actions from 'redux/Authenticate/actions';\nimport { useState } from 'react';\nimport {\n  MailOutlined,\n  SettingOutlined,\n  LogoutOutlined,\n  UserOutlined,\n} from '@ant-design/icons';\nimport logo from 'logo.svg';\n// import logocube from 'logocube.svg';\nimport { useHistory } from 'react-router-dom';\n\nconst { SubMenu } = Menu;\nexport default function NavBar() {\n  //Variables\n  const history = useHistory();\n  const [mail, setMail] = useState('');\n  const dispatch = useDispatch();\n\n  //Functions\n  const handleClick = (e) => {\n    setMail(e.key);\n  };\n  const logout = () => {\n    dispatch({\n      type: actions.LOGOUT,\n    });\n    history.push('/login');\n  };\n\n  //Render\n  return (\n    <>\n      <Menu onClick={handleClick} selectedKeys={[mail]} mode='horizontal'>\n        <Menu.Item className='App-logo' key='applogo'>\n          <div>\n            {/* <img src={logocube} className='logo' alt='logo' key='logo' /> */}\n            <img src={logo} className='logo' alt='logo' key='logo' />\n          </div>\n        </Menu.Item>\n        <Menu.Item key='messages' icon={<MailOutlined />}>\n          Messages\n        </Menu.Item>\n        {/* <Menu.Item key=\"app\" disabled icon={<AppstoreOutlined />}>\n              Navigation Two\n            </Menu.Item> */}\n\n        <SubMenu key='SubMenu' icon={<SettingOutlined />} title='Settings'>\n          <Menu.ItemGroup>\n            <Menu.Item key='Profile' icon={<UserOutlined />}>\n              Profile\n            </Menu.Item>\n          </Menu.ItemGroup>\n          <Menu.ItemGroup>\n            <Menu.Item\n              key='LogOut'\n              icon={<LogoutOutlined />}\n              onClick={() => logout()}\n            >\n              Logout\n            </Menu.Item>\n          </Menu.ItemGroup>\n        </SubMenu>\n      </Menu>\n    </>\n  );\n}\n","import { Layout } from 'antd';\nimport NavBar from './Navigation/NavBar';\n\nconst { Header, Footer, Content } = Layout;\nfunction Dashboard() {\n  return (\n    <div className='container'>\n      <Layout>\n        <Header>\n          <NavBar></NavBar>\n        </Header>\n        <Layout className='App-header'>\n          {/* <Sider className='primary-color'>Sider</Sider> */}\n          <Content>Content</Content>\n        </Layout>\n        <Footer>fOOOOTER</Footer>\n      </Layout>\n    </div>\n    // <Menu onClick={handleClick} selectedKeys={[mail]} mode=\"horizontal\">\n    //   <Menu.Item key=\"mail\" icon={<MailOutlined />}>\n    //     Navigation One\n    //   </Menu.Item>\n    //   <Menu.Item key=\"app\" disabled icon={<AppstoreOutlined />}>\n    //     Navigation Two\n    //   </Menu.Item>\n    //   <SubMenu\n    //     key=\"SubMenu\"\n    //     icon={<SettingOutlined />}\n    //     title=\"Navigation Three - Submenu\"\n    //   >\n    //     <Menu.ItemGroup title=\"Item 1\">\n    //       <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\n    //       <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\n    //     </Menu.ItemGroup>\n    //     <Menu.ItemGroup title=\"Item 2\">\n    //       <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\n    //       <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\n    //     </Menu.ItemGroup>\n    //   </SubMenu>\n    //   <Menu.Item key=\"alipay\">\n    //     <a href=\"https://ant.design\" target=\"_blank\" rel=\"noopener noreferrer\">\n    //       Navigation Four - Link\n    //     </a>\n    //   </Menu.Item>\n    // </Menu>\n  );\n}\n\nexport default Dashboard;\n","function Users() {\n  return <h1>Users</h1>;\n}\n\nexport default Users;\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport './App.scss';\nimport LoginPage from 'components/LoginPage';\nimport RegisterPage from 'components/RegisterPage';\nimport Dashboard from 'components/Dashboard';\nimport Users from 'components/Users';\n\nfunction App() {\n  //Getting isAuthenticated store value from Authentication reducer.\n  const { isAuthenticated } = useSelector((state) => state.authenticateReducer);\n  return (\n    <Router>\n      <Switch>\n        <PublicRoute path='/login' isAuthenticated={isAuthenticated}>\n          <LoginPage />\n        </PublicRoute>\n        <PublicRoute path='/register' isAuthenticated={isAuthenticated}>\n          <RegisterPage />\n        </PublicRoute>\n        <PrivateRoute path='/' isAuthenticated={isAuthenticated}>\n          <ProtectedRoutes />\n        </PrivateRoute>\n      </Switch>\n    </Router>\n  );\n}\n\n// Private route restrict to access public pages after login.\nfunction PrivateRoute({ children, isAuthenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\n// Public route restrict to access authenticated pages before login.\nfunction PublicRoute({ children, isAuthenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        !isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/dashboard',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\n// Here we include the components which need to be accesses after successful login.\nfunction ProtectedRoutes() {\n  return (\n    <Switch>\n      <Route path='/dashboard'>\n        <Dashboard />\n      </Route>\n      <Route path='/users'>\n        <Users />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import actions from 'redux/Authenticate/actions';\n\nconst initialState = {\n  isAuthenticated: false,\n  loader: false,\n};\n\nfunction Reducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.LOGIN:\n      return { ...state, loader: true };\n    case actions.LOGOUT:\n      return { ...state, isAuthenticated: false, loader: false };\n    case actions.LOGIN_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: !!action.response.data.token,\n        loader: false,\n      };\n    case actions.LOGIN_FAILURE:\n      return { ...state, isAuthenticated: false, loader: false };\n    default:\n      return state;\n  }\n}\n\nexport default Reducer;\n","import authenticateReducer from 'redux/Authenticate/reducer';\n\n//Include all the reducer to combine and provide to configure store.\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  authenticateReducer,\n}\n","const constants = {\n  HOST_URL: process.env.REACT_APP_HOST_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n  },\n};\n\nexport default constants;\n","import axios from 'axios';\nimport constants from 'Config/constants';\n\nconst axiosClient = axios.create();\n\naxiosClient.defaults.baseURL = constants.HOST_URL;\n\naxiosClient.defaults.headers = constants.headers;\n\n// To share cookies to cross site domain, change to true.\naxiosClient.defaults.withCredentials = false;\n\nexport function getRequest(URL) {\n  return axiosClient.get(`/${URL}`).then(response => response);\n}\n\nexport function postRequest(URL, payload) {\n  return axiosClient.post(`/${URL}`, payload).then(response => response);\n}\n\nexport function patchRequest(URL, payload) {\n  return axiosClient.patch(`/${URL}`, payload).then(response => response);\n}\n\nexport function deleteRequest(URL) {\n  return axiosClient.delete(`/${URL}`).then(response => response);\n}\n","import {all, call, put, takeLatest} from 'redux-saga/effects'\nimport actions from 'redux/Authenticate/actions';\nimport {postRequest} from 'Config/axiosClient'\n\n\nfunction* login(action) {\n  try {\n    const response = yield call(() => postRequest('login', action.payload));\n    yield put({type: actions.LOGIN_SUCCESS, response});\n  } catch (e) {\n    yield put({type: actions.LOGIN_FAILURE});\n  }\n}\n\n\nexport default function* rootSaga() {\n  yield all([takeLatest(actions.LOGIN, login)]);\n}\n","import { all } from 'redux-saga/effects';\nimport authenticateSaga from 'redux/Authenticate/saga';\n\n// Here you can include all the saga which you write for components\nexport default function* rootSaga(){\n  yield all([\n    authenticateSaga(),\n  ]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport store from 'redux/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/*Redux Provider is included access the store values from anywhere inside the child components.*/}\n    <Provider store={store()}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './rootReducers'\nimport rootSaga from './rootSaga';\n\nexport default function configureAppStore(preloadedState) {\n\n  const sagaMiddleware = createSagaMiddleware();\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware: [...getDefaultMiddleware(), sagaMiddleware],\n    preloadedState,\n  })\n  sagaMiddleware.run(rootSaga)\n\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('redux/rootReducers', () => store.replaceReducer(rootReducer))\n  }\n  return store\n}\n"],"sourceRoot":""}