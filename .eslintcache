[{"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\index.js":"1","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\reportWebVitals.js":"2","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\App.js":"3","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Users.js":"4","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\HomePage\\Home.js":"5","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Layouts\\DashboardLayout.js":"6","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Layouts\\PublicLayout.js":"7","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Profile.js":"8","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\store.js":"9","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\AppTabs.js":"10","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\ContentWrapper.js":"11","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\Forum.js":"12","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\rootReducers.js":"13","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\rootSaga.js":"14","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Navigation\\NavBarPublic.js":"15","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Navigation\\NavBar.js":"16","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Projects.js":"17","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Skills.js":"18","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Reviews.js":"19","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\HomePage\\HomeFeature.js":"20","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\ForumLayout.js":"21","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\AppTitles.js":"22","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\HomePage\\HomeBanner.js":"23","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\SectionDivider.js":"24","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\ForumPageHeaderSelections.js":"25","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Authenticate\\actions.js":"26","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Authenticate\\reducer.js":"27","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Authenticate\\saga.js":"28","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Forum\\saga.js":"29","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Forum\\reducer.js":"30","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Forum\\actions.js":"31","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\AppTexts.js":"32","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\useWindowSize.js":"33","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\Buttons.js":"34","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\Config\\axiosClient.js":"35","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\MultipleSelects.js":"36","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\Config\\constants.js":"37","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\LoginPage.js":"38","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\RegisterPage.js":"39","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\RegisterForm.js":"40","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\LoginForm.js":"41","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\Message.js":"42","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\MessagesLayout.js":"43","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\ForumPage.js":"44","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\MessagesPage.js":"45","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\Search.js":"46","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\Recommendations.js":"47","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\Feeds.js":"48","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPageHeaderExtras.js":"49","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\UserDetails.js":"50","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\ViewWrapper.js":"51","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\UserMessager.js":"52","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\ViewWrapper.js":"53","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\Feed.js":"54","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPhRecomExtras.js":"55","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPhFeedsExtras.js":"56","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPhSearchExtras.js":"57","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\getTruncatedName.js":"58","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\MessagePreview.js":"59","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\Editor.js":"60","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\CommentsWrapper.js":"61","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\SingleSelect.js":"62","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\CommentsContainer.js":"63","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\EditProfileModal.js":"64","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\ProjectCard.js":"65","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\ProjectModal.js":"66","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\colorGenerator.js":"67","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\RecommProjects.js":"68","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\RecommM&M.js":"69","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\UserModal.js":"70","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\UserCard.js":"71","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\ProjectCard.js":"72","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Profile\\reducer.js":"73","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Profile\\saga.js":"74","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Profile\\actions.js":"75","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\utils\\ViewWrapper.js":"76","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\SearchSelector.js":"77"},{"size":747,"mtime":1627100394196,"results":"78","hashOfConfig":"79"},{"size":362,"mtime":1624955552165,"results":"80","hashOfConfig":"79"},{"size":3251,"mtime":1627705033300,"results":"81","hashOfConfig":"79"},{"size":69,"mtime":1624955552165,"results":"82","hashOfConfig":"79"},{"size":3098,"mtime":1627699156335,"results":"83","hashOfConfig":"79"},{"size":1718,"mtime":1625324642421,"results":"84","hashOfConfig":"79"},{"size":1752,"mtime":1625324642423,"results":"85","hashOfConfig":"79"},{"size":6214,"mtime":1627543424731,"results":"86","hashOfConfig":"79"},{"size":647,"mtime":1624955552165,"results":"87","hashOfConfig":"79"},{"size":731,"mtime":1627481443178,"results":"88","hashOfConfig":"79"},{"size":154,"mtime":1625324642415,"results":"89","hashOfConfig":"79"},{"size":262,"mtime":1627703996277,"results":"90","hashOfConfig":"79"},{"size":383,"mtime":1627477454546,"results":"91","hashOfConfig":"79"},{"size":367,"mtime":1627477454547,"results":"92","hashOfConfig":"79"},{"size":1417,"mtime":1627464459340,"results":"93","hashOfConfig":"79"},{"size":2306,"mtime":1627703769722,"results":"94","hashOfConfig":"79"},{"size":2370,"mtime":1627538571021,"results":"95","hashOfConfig":"79"},{"size":4461,"mtime":1627538847173,"results":"96","hashOfConfig":"79"},{"size":4067,"mtime":1627538948950,"results":"97","hashOfConfig":"79"},{"size":2895,"mtime":1627699618376,"results":"98","hashOfConfig":"79"},{"size":2646,"mtime":1627704318693,"results":"99","hashOfConfig":"79"},{"size":370,"mtime":1627544375425,"results":"100","hashOfConfig":"79"},{"size":2309,"mtime":1627543625867,"results":"101","hashOfConfig":"79"},{"size":180,"mtime":1625324642426,"results":"102","hashOfConfig":"79"},{"size":9237,"mtime":1627544375420,"results":"103","hashOfConfig":"79"},{"size":257,"mtime":1627104723051,"results":"104","hashOfConfig":"79"},{"size":1059,"mtime":1627703038992,"results":"105","hashOfConfig":"79"},{"size":1861,"mtime":1627706708950,"results":"106","hashOfConfig":"79"},{"size":3268,"mtime":1627544375447,"results":"107","hashOfConfig":"79"},{"size":4307,"mtime":1627545887457,"results":"108","hashOfConfig":"79"},{"size":1321,"mtime":1627544375428,"results":"109","hashOfConfig":"79"},{"size":370,"mtime":1627100394193,"results":"110","hashOfConfig":"79"},{"size":1001,"mtime":1625386171079,"results":"111","hashOfConfig":"79"},{"size":445,"mtime":1625386171080,"results":"112","hashOfConfig":"79"},{"size":926,"mtime":1627537869367,"results":"113","hashOfConfig":"79"},{"size":459,"mtime":1625403819675,"results":"114","hashOfConfig":"79"},{"size":280,"mtime":1627100394123,"results":"115","hashOfConfig":"79"},{"size":696,"mtime":1627706262340,"results":"116","hashOfConfig":"79"},{"size":753,"mtime":1627706253387,"results":"117","hashOfConfig":"79"},{"size":3866,"mtime":1627704832648,"results":"118","hashOfConfig":"79"},{"size":2745,"mtime":1627104723046,"results":"119","hashOfConfig":"79"},{"size":164,"mtime":1627100394177,"results":"120","hashOfConfig":"79"},{"size":266,"mtime":1627100394177,"results":"121","hashOfConfig":"79"},{"size":576,"mtime":1627705026470,"results":"122","hashOfConfig":"79"},{"size":3014,"mtime":1627488090088,"results":"123","hashOfConfig":"79"},{"size":5795,"mtime":1627540667128,"results":"124","hashOfConfig":"79"},{"size":6258,"mtime":1627464459327,"results":"125","hashOfConfig":"79"},{"size":4435,"mtime":1627545261039,"results":"126","hashOfConfig":"79"},{"size":541,"mtime":1626937356601,"results":"127","hashOfConfig":"79"},{"size":800,"mtime":1627488090089,"results":"128","hashOfConfig":"79"},{"size":592,"mtime":1627474702284,"results":"129","hashOfConfig":"79"},{"size":1170,"mtime":1627100394182,"results":"130","hashOfConfig":"79"},{"size":637,"mtime":1627100394172,"results":"131","hashOfConfig":"79"},{"size":2922,"mtime":1627545651628,"results":"132","hashOfConfig":"79"},{"size":1800,"mtime":1627464459322,"results":"133","hashOfConfig":"79"},{"size":835,"mtime":1626937356602,"results":"134","hashOfConfig":"79"},{"size":2331,"mtime":1627464459324,"results":"135","hashOfConfig":"79"},{"size":294,"mtime":1627464459343,"results":"136","hashOfConfig":"79"},{"size":952,"mtime":1627100394181,"results":"137","hashOfConfig":"79"},{"size":986,"mtime":1627100394180,"results":"138","hashOfConfig":"79"},{"size":277,"mtime":1627464459345,"results":"139","hashOfConfig":"79"},{"size":353,"mtime":1627100394195,"results":"140","hashOfConfig":"79"},{"size":4466,"mtime":1627488090094,"results":"141","hashOfConfig":"79"},{"size":6214,"mtime":1627538263691,"results":"142","hashOfConfig":"79"},{"size":934,"mtime":1627536601481,"results":"143","hashOfConfig":"79"},{"size":3723,"mtime":1627539255221,"results":"144","hashOfConfig":"79"},{"size":595,"mtime":1627477454535,"results":"145","hashOfConfig":"79"},{"size":1591,"mtime":1627464459335,"results":"146","hashOfConfig":"79"},{"size":2006,"mtime":1627542902971,"results":"147","hashOfConfig":"79"},{"size":800,"mtime":1627488090095,"results":"148","hashOfConfig":"79"},{"size":1752,"mtime":1627488090087,"results":"149","hashOfConfig":"79"},{"size":1669,"mtime":1627540452592,"results":"150","hashOfConfig":"79"},{"size":1413,"mtime":1627536601486,"results":"151","hashOfConfig":"79"},{"size":3522,"mtime":1627536601488,"results":"152","hashOfConfig":"79"},{"size":1028,"mtime":1627536601485,"results":"153","hashOfConfig":"79"},{"size":637,"mtime":1627481443183,"results":"154","hashOfConfig":"79"},{"size":1019,"mtime":1627544375426,"results":"155","hashOfConfig":"79"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},"acq9kx",{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"158"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"158"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"158"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"158"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"158"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"158"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"158"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"158"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"158"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"158"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"158"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"158"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"158"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"158"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"158"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"158"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\index.js",[],["327","328"],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\reportWebVitals.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\App.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Users.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\HomePage\\Home.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Layouts\\DashboardLayout.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Layouts\\PublicLayout.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Profile.js",["329","330"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from 'redux/Profile/actions';\r\nimport { Row, Col, Tag, Button, Typography, Avatar } from 'antd';\r\nimport AppTitles from 'components/utils/AppTitles';\r\nimport AppTabs from './AppTabs.js';\r\nimport {\r\n  UserOutlined,\r\n  WechatOutlined,\r\n  MailOutlined,\r\n  LinkedinOutlined,\r\n  EditOutlined,\r\n  HomeTwoTone,\r\n  PhoneOutlined,\r\n  PhoneFilled,\r\n} from '@ant-design/icons';\r\nimport EditProfileModal from './EditProfileModal.js';\r\nimport { getRandomColor } from '../tools/colorGenerator';\r\nimport ViewWrapper from './utils/ViewWrapper.js';\r\nimport AppTexts from 'components/utils/AppTexts.js';\r\nimport { useHistory } from 'react-router-dom';\r\nimport avatarImg from 'assets/avatar.jpg';\r\nfunction Profile({ user_id }) {\r\n  const { Paragraph } = Typography;\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n\r\n  // const [userId, setUserId] = useState('');\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const { profileData } = useSelector((state) => state.profileReducer);\r\n  const { userId } = useSelector((state) => state.authenticateReducer);\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: actions.GETUSERDETAILS,\r\n      payload: {\r\n        user_id: user_id ? user_id : userId,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  var interestsList = profileData?.interest?.topic\r\n    .substring(1, profileData?.interest?.topic.length - 1)\r\n    .split(',')\r\n    .map(function (interest) {\r\n      return (\r\n        <Tag color={getRandomColor(interest)}>\r\n          {interest.substring(1, interest.length - 1)}\r\n        </Tag>\r\n      );\r\n    });\r\n\r\n  // const handleClick = () => {\r\n  //   openEditUsertModel('userId');\r\n  // };\r\n\r\n  const openEditUsertModel = () => {\r\n    // setUserId(UserId);\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  function openChatModule() {\r\n    history.push('/messages');\r\n  }\r\n\r\n  const openLinkedinInNewTab = (url) => {\r\n    window.open(url, '_blank');\r\n  };\r\n\r\n  const openMailInNewTab = (url) => {\r\n    window.open(`mailto: ${url}`, '_blank');\r\n  };\r\n\r\n  return profileData ? (\r\n    <ViewWrapper grid={true}>\r\n      <EditProfileModal\r\n        isModalVisible={isModalVisible}\r\n        userId={userId}\r\n        handleCancel={handleCancel}\r\n      />\r\n      <Row className='profile-wrapper-header'>\r\n        <div className='profile-wrapper-header-div'>\r\n          <Avatar\r\n            src={avatarImg}\r\n            style={{\r\n              // backgroundColor: 'rgb(154 160 164)',\r\n              backgroundColor: getRandomColor('Navya'),\r\n              margin: 'auto',\r\n            }}\r\n            size={{\r\n              xs: 50,\r\n              sm: 50,\r\n              md: 80,\r\n              lg: 80,\r\n              xl: 100,\r\n              xxl: 100,\r\n            }}\r\n            // icon={<UserOutlined />}\r\n          />\r\n        </div>\r\n\r\n        <Col lg={15} md={15} sm={24} xs={24}>\r\n          <div>\r\n            <AppTitles\r\n              className='large'\r\n              content={`${profileData?.profile?.first_name}\r\n                ${profileData?.profile?.last_name}`}\r\n              style={{\r\n                fontWeight: 'bold',\r\n              }}\r\n            />\r\n            <AppTexts\r\n              className='medium italics'\r\n              content={`Title: ${profileData?.profile?.title}`}\r\n            />\r\n            <div className='italics' style={{ marginLeft: '1%' }}>\r\n              Interests: {interestsList}\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          lg={6}\r\n          md={12}\r\n          sm={24}\r\n          xs={24}\r\n          style={{\r\n            justifyContent: 'flex-end',\r\n            display: 'flex',\r\n            flexFlow: 'column',\r\n            alignItems: 'flex-end',\r\n          }}\r\n        >\r\n          <Row justify='start' align='start'>\r\n            <AppTitles\r\n              content={<HomeTwoTone style={{ fontSize: '25px' }} size='30px' />}\r\n              style={{ fontWeight: 'bold' }}\r\n            />\r\n            <AppTitles\r\n              size='small'\r\n              content={`\r\n              ${profileData?.profile?.city} ,\r\n              ${profileData?.profile?.state},\r\n              ${profileData?.profile?.country},\r\n              ${profileData?.profile?.zipcode}`}\r\n            />\r\n          </Row>\r\n\r\n          <div>\r\n            <Button\r\n              type='dashed'\r\n              shape='round'\r\n              icon={<WechatOutlined />}\r\n              size={20}\r\n              style={{ margin: '4px' }}\r\n              onClick={openChatModule}\r\n            />\r\n            <Button\r\n              type='dashed'\r\n              shape='round'\r\n              icon={<MailOutlined />}\r\n              size={20}\r\n              style={{ margin: '4px' }}\r\n              onClick={() => openMailInNewTab(profileData?.profile?.email)}\r\n            />\r\n            <Button\r\n              type='dashed'\r\n              shape='round'\r\n              icon={<LinkedinOutlined />}\r\n              size={20}\r\n              style={{ margin: '4px' }}\r\n              onClick={() => openLinkedinInNewTab(profileData?.profile?.links)}\r\n            />\r\n            <Button\r\n              type='dashed'\r\n              shape='round'\r\n              size={20}\r\n              style={{ margin: '4px' }}\r\n            >\r\n              <Paragraph\r\n                copyable={{\r\n                  text: profileData?.profile?.mobile_no,\r\n                  icon: [\r\n                    <PhoneOutlined key='copy-icon' />,\r\n                    <PhoneFilled key='copied-icon' />,\r\n                  ],\r\n                  tooltips: ['Copy Contact info!', 'Copied!'],\r\n                }}\r\n              ></Paragraph>\r\n            </Button>\r\n          </div>\r\n          <Button\r\n            type='primary'\r\n            shape='round'\r\n            icon={<EditOutlined />}\r\n            onClick={() => openEditUsertModel()}\r\n            style={{ position: 'absolute', top: '0px', right: '0px' }}\r\n          >\r\n            Edit\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <AppTabs />\r\n    </ViewWrapper>\r\n  ) : null;\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\store.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\AppTabs.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\ContentWrapper.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\Forum.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\rootReducers.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\rootSaga.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Navigation\\NavBarPublic.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Navigation\\NavBar.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Projects.js",["331","332"],"import React, { useEffect, useState } from 'react';\r\nimport { Row } from 'antd';\r\nimport ProjectCard from './ProjectCard';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport Buttons from 'components/utils/Buttons';\r\nimport ProjectModal from './ProjectModal';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from 'redux/Profile/actions';\r\n\r\nfunction Projects() {\r\n  const dispatch = useDispatch();\r\n  const [projectId, setProjectId] = useState('');\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [itemsArray, setItemsArray] = useState([1, 2, 3]);\r\n  const [hasMoreContents, setHasMoreContents] = useState(true);\r\n\r\n  const { userProjectList } = useSelector((state) => state.profileReducer);\r\n  const { userId } = useSelector((state) => state.authenticateReducer);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: actions.GETUSERPROJECTS,\r\n      payload: {\r\n        user_id: userId,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const openProjectModel = (projectId) => {\r\n    setProjectId(projectId);\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const fetchMoreProjects = () => {\r\n    let temp_arr;\r\n    temp_arr = [...itemsArray, 1];\r\n    setItemsArray(temp_arr);\r\n    if (temp_arr.length === 15) {\r\n      setHasMoreContents(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ProjectModal\r\n        isModalVisible={isModalVisible}\r\n        projectId={projectId}\r\n        handleCancel={handleCancel}\r\n      />\r\n      <InfiniteScroll\r\n        hasMore={hasMoreContents}\r\n        initialLoad={false}\r\n        pageStart={1}\r\n        loadMore={() => fetchMoreProjects()}\r\n        threshold={1}\r\n        loader={\r\n          <div className='feed-loader-wrapper'>\r\n            {/* <Buttons\r\n              type='primary'\r\n              // loading={projectsLoading}\r\n              handleClick={() => fetchMoreProjects()}\r\n              content={'Load More'}\r\n            ></Buttons> */}\r\n          </div>\r\n        }\r\n      >\r\n        <Row gutter={[16, 16]}>\r\n          {userProjectList.map((i, index) => (\r\n            <ProjectCard\r\n              key={index}\r\n              project_data={i}\r\n              openProjectModel={openProjectModel}\r\n            />\r\n          ))}\r\n        </Row>\r\n      </InfiniteScroll>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Skills.js",["333","334","335","336","337","338","339"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { Row, Col, Select, Tag, Button, PageHeader } from 'antd';\r\nimport SectionDivider from '../utils/SectionDivider';\r\nimport { Input, Tooltip, notification } from 'antd';\r\nimport { InfoCircleOutlined, TagsOutlined } from '@ant-design/icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from 'redux/Profile/actions';\r\nimport { getRandomColor } from '../tools/colorGenerator';\r\n\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\n\r\nfunction Skills({ user_id }) {\r\n  const [tags, setTags] = useState([]);\r\n  const [tagsList, setTagsList] = useState(null);\r\n  const [skillListComponent, setSkillListComponent] = useState(null);\r\n  const [addSkill, setAddSkill] = useState('');\r\n  const dispatch = useDispatch();\r\n  const { userId } = useSelector((state) => state.authenticateReducer);\r\n\r\n  const { skillList, skillErrorMessage, skillDisplayError, userSkillList } =\r\n    useSelector((state) => state.profileReducer);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: actions.GETSKILLS,\r\n    });\r\n    dispatch({\r\n      type: actions.GETUSERSKILLS,\r\n      payload: {\r\n        user_id: 7,\r\n        //user_id: user_id ? user_id : userId,\r\n      },\r\n    });\r\n  }, []);\r\n  useEffect(async () => {\r\n    dispatch({\r\n      type: actions.GETSKILLS,\r\n    });\r\n    dispatch({\r\n      type: actions.GETUSERSKILLS,\r\n      payload: {\r\n        user_id: user_id ? user_id : userId,\r\n      },\r\n    });\r\n  }, [user_id]);\r\n\r\n  useEffect(() => {\r\n    let SkillListComponent1 = null;\r\n    SkillListComponent1 = skillList.map(function (skill) {\r\n      return (\r\n        <Option value={skill}>\r\n          <div className='demo-option-label-item'>{skill}</div>\r\n        </Option>\r\n      );\r\n    });\r\n    setSkillListComponent(SkillListComponent1);\r\n  }, [skillList]);\r\n\r\n  useEffect(() => {\r\n    let tagsList1 = null;\r\n    tagsList1 = tags.map(function (tag, index) {\r\n      return (\r\n        <Tag key={index} color={getRandomColor(tag)}>\r\n          {tag}\r\n        </Tag>\r\n      );\r\n    });\r\n    setTagsList(tagsList1);\r\n  }, [tags]);\r\n\r\n  function handleChange(value) {\r\n    //console.log(`selected ${value}`);\r\n    setTags(value);\r\n  }\r\n\r\n  function addNewSkillFunc() {\r\n    dispatch({\r\n      type: actions.ADDSKILL,\r\n      payload: {\r\n        skill: addSkill,\r\n      },\r\n    });\r\n    dispatch({\r\n      type: actions.GETSKILLS,\r\n    });\r\n  }\r\n\r\n  const updateUserSkillList = () => {\r\n    // dispatch({\r\n    //   type: actions.ADDSKILL,\r\n    //   payload: {\r\n    //     : ,\r\n    //   },\r\n    // });\r\n  };\r\n\r\n  const openNotification = (type, description) => {\r\n    notification[type]({\r\n      message: type,\r\n      description: description,\r\n      placement: 'bottomRight',\r\n    });\r\n  };\r\n\r\n  //ASK AMEL\r\n  /* if (skillDisplayError === true) {\r\n    openNotification('success', skillErrorMessage);\r\n  } else if (skillDisplayError ===  false){\r\n    openNotification('error', skillErrorMessage);\r\n  }*/\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        className='forum-page-header skill-options'\r\n        // extra={<ForumPageHeaderExtras page='Feeds' />}\r\n      >\r\n        <Row gutter={16} className=''>\r\n          <Col span={18}>\r\n            {skillList?.length > 0 && (\r\n              <Select\r\n                mode='multiple'\r\n                style={{ width: '80%' }}\r\n                placeholder='select skills'\r\n                defaultValue={userSkillList}\r\n                onChange={handleChange}\r\n              >\r\n                {skillListComponent}\r\n              </Select>\r\n            )}\r\n            <Button type='primary' onClick={updateUserSkillList}>\r\n              Add Skills\r\n            </Button>\r\n          </Col>\r\n          <Col span={6}>\r\n            <Search\r\n              placeholder='Add new tag'\r\n              enterButton='Add Tag'\r\n              value={addSkill}\r\n              onChange={(e) => setAddSkill(e.target.value)}\r\n              onSearch={() => addNewSkillFunc()}\r\n              prefix={<TagsOutlined className='site-form-item-icon' />}\r\n              suffix={\r\n                <Tooltip title='Only Add new tag if already not present!'>\r\n                  <InfoCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />\r\n                </Tooltip>\r\n              }\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </PageHeader>\r\n\r\n      <SectionDivider />\r\n      <div className='list-card'>{tagsList}</div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Skills;\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Reviews.js",["340","341","342","343","344"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  Row,\r\n  Col,\r\n  List,\r\n  Avatar,\r\n  Button,\r\n  Skeleton,\r\n  Collapse,\r\n  Form,\r\n  Input,\r\n} from 'antd';\r\nimport actions from 'redux/Profile/actions';\r\nimport { UserOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport SectionDivider from '../utils/SectionDivider';\r\nimport { getRandomColor } from '../tools/colorGenerator';\r\n\r\nfunction Reviews() {\r\n  const { Panel } = Collapse;\r\n  const { TextArea } = Input;\r\n  const dispatch = useDispatch();\r\n\r\n  const { userReviewsList } = useSelector((state) => state.profileReducer);\r\n  const { userId } = useSelector((state) => state.authenticateReducer);\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: actions.GETUSERREVIEWS,\r\n      payload: {\r\n        user_id: userId,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  let content =\r\n    'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently. We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure).';\r\n\r\n  return (\r\n    <>\r\n      <Collapse>\r\n        <Panel style={{ textAlign: 'left' }} header='Click to add a review'>\r\n          <Form\r\n            name='basic'\r\n            labelCol={{\r\n              span: 5,\r\n            }}\r\n            wrapperCol={{\r\n              span: 16,\r\n            }}\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n          >\r\n            <Form.Item\r\n              label='Leave a review'\r\n              name='description'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please add the review!',\r\n                },\r\n              ]}\r\n            >\r\n              <TextArea />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              wrapperCol={{\r\n                offset: 8,\r\n                span: 16,\r\n              }}\r\n            >\r\n              <Button type='primary' htmlType='submit'>\r\n                Add\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Panel>\r\n      </Collapse>\r\n      <SectionDivider />\r\n      <List\r\n        className='demo-loadmore-list'\r\n        style={{ minHeight: '350px' }}\r\n        itemLayout='horizontal'\r\n        dataSource={userReviewsList}\r\n        renderItem={(item) => (\r\n          <div className='list-card'>\r\n            <Row className='feedback-itam'>\r\n              <Col span={22}>\r\n                <List.Item.Meta\r\n                  avatar={\r\n                    <Avatar\r\n                      style={{\r\n                        backgroundColor: getRandomColor(item.first_name),\r\n                      }}\r\n                      size={50}\r\n                      icon={<UserOutlined />}\r\n                    />\r\n                  }\r\n                  title={`${item.first_name} ${item.last_name}`}\r\n                  description={item.user_title}\r\n                />\r\n                <div\r\n                  style={{\r\n                    paddingLeft: '65px',\r\n                    marginTop: '2px',\r\n                    marginBottom: '10px',\r\n                  }}\r\n                >\r\n                  {item.review_text}\r\n                </div>\r\n              </Col>\r\n              <Col span={2}>\r\n                {\r\n                  <Button\r\n                    type='primary'\r\n                    shape='circle'\r\n                    icon={<EditOutlined />}\r\n                    size={20}\r\n                    style={{ margin: '2px' }}\r\n                  />\r\n                }\r\n                {/* <Button\r\n                  type='primary'\r\n                  shape='circle'\r\n                  icon={<DeleteOutlined />}\r\n                  size={20}\r\n                  style={{ margin: '2px' }}\r\n                /> */}\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Reviews;\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\HomePage\\HomeFeature.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\ForumLayout.js",["345"],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\AppTitles.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\HomePage\\HomeBanner.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\SectionDivider.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\ForumPageHeaderSelections.js",["346","347","348","349","350","351","352","353"],"import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport actions from 'redux/Forum/actions';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Tag,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  List,\r\n  Avatar,\r\n  Space,\r\n  Skeleton,\r\n  Tooltip,\r\n} from 'antd';\r\nimport Buttons from 'components/utils/Buttons';\r\nimport { SendOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport SearchSelector from 'components/utils/SearchSelector';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport AppTexts from 'components/utils/AppTexts';\r\nimport ViewWrapper from 'components/Forum/contentPage/utils/ViewWrapper';\r\nimport moment from 'moment';\r\nimport AppTitles from 'components/utils/AppTitles';\r\nconst { TextArea } = Input;\r\nexport default function ForumPageHeaderSelections({ page }) {\r\n  const {\r\n    searchselectedskills,\r\n    searchselectedtypes,\r\n    // recommendationsselectedtypes,\r\n  } = useSelector((state) => state.forumReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  const removeSkill = (skill) => {\r\n    let newlist = [...searchselectedskills];\r\n    const index = newlist.indexOf(skill);\r\n    if (index > -1) {\r\n      newlist.splice(index, 1);\r\n    }\r\n    dispatch({\r\n      type: actions.UPDATESEARCHSKILLS,\r\n      payload: { searchSkillsSelected: newlist },\r\n    });\r\n  };\r\n  const removeType = (type) => {\r\n    let newlist = [...searchselectedtypes];\r\n    const index = newlist.indexOf(type);\r\n    if (index > -1) {\r\n      newlist.splice(index, 1);\r\n    }\r\n    dispatch({\r\n      type: actions.UPDATESEARCHTYPES,\r\n      payload: { searchselectedtypes: newlist },\r\n    });\r\n  };\r\n  // const removeRecomType = (type) => {\r\n  //   let newlist = [...recommendationsselectedtypes];\r\n  //   const index = newlist.indexOf(type);\r\n  //   if (index > -1) {\r\n  //     newlist.splice(index, 1);\r\n  //   }\r\n  //   dispatch({\r\n  //     type: actions.UPDATESEARCHTYPES,\r\n  //     payload: { recommendationsselectedtypes: newlist },\r\n  //   });\r\n  // };\r\n  if (page === 'Feeds') {\r\n    return <ForumPageHeaderAddPost />;\r\n  } else if (page === 'Search') {\r\n    return (\r\n      <ForumPageHeaderSelectionViewTags\r\n        key='selectionsSearch'\r\n        skills={searchselectedskills}\r\n        types={searchselectedtypes}\r\n        removeTagSkills={(skill) => removeSkill(skill)}\r\n        removeTagTypes={(type) => removeType(type)}\r\n      />\r\n    );\r\n  }\r\n  if (page === 'Recommendations') {\r\n    return <></>;\r\n  }\r\n}\r\n\r\nfunction ForumPageHeaderSelectionViewTags({\r\n  removeTagSkills,\r\n  removeTagTypes,\r\n  ...rest\r\n}) {\r\n  return (\r\n    <Row justify='start' align='start'>\r\n      <Col lg={20} md={20} sm={20} xs={24} justify='start' align='top'>\r\n        <div>\r\n          {rest.skills?.map((skill) => (\r\n            <Tag\r\n              //   closable\r\n              onClose={() => removeTagSkills(skill)}\r\n              key={skill}\r\n              color='blue'\r\n            >\r\n              {skill}\r\n            </Tag>\r\n          ))}\r\n          {rest.types?.map((type) => (\r\n            <Tag\r\n              //   closable\r\n              onClose={() => removeTagTypes(type)}\r\n              key={type}\r\n              color='green'\r\n            >\r\n              {type}\r\n            </Tag>\r\n          ))}\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\nconst validateMessages = {\r\n  // eslint-disable-next-line\r\n  required: '${label} is required!',\r\n};\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nfunction ForumPageHeaderAddPost({ ...rest }) {\r\n  const toggleNewPost = () => {\r\n    dispatch({\r\n      type: actions.TOGGLESTATE,\r\n      payload: { label: 'addPostDraftState', value: !addPostDraftState },\r\n    });\r\n  };\r\n  const [content, setcontent] = useState('');\r\n  const [userId, setuserId] = useState('1');\r\n  const [title, settitle] = useState('');\r\n  const [projectId, setprojectId] = useState('');\r\n  const { addPostDraftState, addPostLoading } = useSelector(\r\n    (state) => state.forumReducer,\r\n  );\r\n  const dispatch = useDispatch();\r\n  //   {\r\n  //   \"content\": \"mentoring of projects\",\r\n  //   \"user_id\": 2,\r\n  //   \"title\": \"project mentoring\",\r\n  // \"project_id\":\"pj_1\"\r\n  // }\r\n  const submitPost = () => {\r\n    dispatch({\r\n      type: actions.TOGGLESTATE,\r\n      payload: { label: 'addPostLoading', value: true },\r\n    });\r\n    console.log({\r\n      content: content,\r\n      user_id: userId,\r\n      title: title,\r\n      project_id: projectId,\r\n    });\r\n    dispatch({\r\n      type: actions.ADDPOST,\r\n      payload: {\r\n        content: content,\r\n        user_id: userId,\r\n        title: title,\r\n        project_id: projectId,\r\n      },\r\n    });\r\n  };\r\n  const pojectTitle = (values) => {\r\n    // eslint-disable-next-line\r\n    console.log(values);\r\n    settitle(values);\r\n  };\r\n  const pojectDescription = (values) => {\r\n    // eslint-disable-next-line\r\n    console.log(values);\r\n    setcontent(values);\r\n  };\r\n  const projectSelection = (values) => {\r\n    // eslint-disable-next-line\r\n    console.log(values);\r\n    setprojectId(values.key);\r\n  };\r\n  const defaultText =\r\n    'The Career Ready Mentoring Program connects UNSW students from their second year of study onwards with established industry professionals, providing students with a significant opportunity to focus on career development during the transition from study to work.';\r\n  let addingPostLoading = false;\r\n  return addPostDraftState ? (\r\n    <ViewWrapper>\r\n      <AppTitles\r\n        className='strong'\r\n        content='New Post'\r\n        containerStyles={{ textAlign: 'left' }}\r\n      />\r\n      <List className='feed-list-wrapper'>\r\n        <List.Item\r\n          key='new post'\r\n          className='feed-list-item'\r\n          actions={[\r\n            <Buttons\r\n              type='primary'\r\n              shape='round'\r\n              icon={<CloseCircleOutlined />}\r\n              content='Cancel'\r\n              handleClick={toggleNewPost}\r\n            />,\r\n            <Buttons\r\n              type='primary'\r\n              shape='round'\r\n              loading={addPostLoading}\r\n              htmlType='submit'\r\n              icon={<SendOutlined />}\r\n              content='Add Post'\r\n              handleClick={() => submitPost()}\r\n            />,\r\n          ]}\r\n        >\r\n          <Skeleton loading={false} active avatar>\r\n            <List.Item.Meta\r\n              avatar={<Avatar icon={<UserOutlined />} />}\r\n              title={\r\n                <>\r\n                  <Input\r\n                    placeholder='Your Post Title goes here'\r\n                    onChange={(e) => {\r\n                      pojectTitle(e.target.value);\r\n                    }}\r\n                  />\r\n                  <Tooltip\r\n                    title={moment()\r\n                      .subtract(1, 'days')\r\n                      .format('YYYY-MM-DD HH:mm:ss')}\r\n                  >\r\n                    <AppTexts\r\n                      content={moment().subtract(1, 'seconds').fromNow()}\r\n                    />\r\n                  </Tooltip>\r\n                </>\r\n              }\r\n              description={\r\n                <>\r\n                  <TextArea\r\n                    placeholder='Your post description goes here'\r\n                    rows={4}\r\n                    onChange={(e) => {\r\n                      pojectDescription(e.target.value);\r\n                    }}\r\n                  />\r\n                  <Space />\r\n                  <SearchSelector\r\n                    handleChange={(values) => projectSelection(values)}\r\n                  />\r\n                </>\r\n              }\r\n            />\r\n          </Skeleton>\r\n        </List.Item>\r\n      </List>\r\n    </ViewWrapper>\r\n  ) : null;\r\n}\r\n\r\n// <Row justify='start' align='start'>\r\n//   <Col lg={20} md={20} sm={20} xs={24} justify='start' align='top'>\r\n//     <Form\r\n//       {...layout}\r\n//       name='new-post'\r\n//       onFinish={submitForm}\r\n//       validateMessages={validateMessages}\r\n//     >\r\n//       <Form.Item\r\n//         name={['post', 'title']}\r\n//         label='Title'\r\n//         rules={[\r\n//           {\r\n//             required: true,\r\n//           },\r\n//         ]}\r\n//       >\r\n//         <Input />\r\n//       </Form.Item>\r\n//       <Form.Item\r\n//         name={['post', 'description']}\r\n//         label='Description'\r\n//         rules={[{ required: true }]}\r\n//       >\r\n//         <Input />\r\n//       </Form.Item>\r\n//       <Form.Item\r\n//         name={['post', 'relatedProjectId']}\r\n//         label='Related Project'\r\n//         rules={[\r\n//           {\r\n//             type: 'number',\r\n//             min: 0,\r\n//             max: 99,\r\n//           },\r\n//         ]}\r\n//       >\r\n//         <InputNumber />\r\n//       </Form.Item>\r\n\r\n//       <Form.Item className='new-post-submit'>\r\n//         <Buttons\r\n//           type='primary'\r\n//           shape='round'\r\n//           icon={<CloseCircleOutlined />}\r\n//           content='Cancel'\r\n//           handleClick={toggleNewPost}\r\n//         />\r\n//         <Buttons\r\n//           type='primary'\r\n//           shape='round'\r\n//           htmlType='submit'\r\n//           icon={<SendOutlined />}\r\n//           content='Add Post'\r\n//           handleClick={toggleNewPost}\r\n//         />\r\n//       </Form.Item>\r\n//     </Form>\r\n//   </Col>\r\n// </Row>\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Authenticate\\actions.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Authenticate\\reducer.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Authenticate\\saga.js",["354"],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Forum\\saga.js",["355","356","357"],"import { all, call, put, takeLatest } from 'redux-saga/effects';\r\nimport actions from 'redux/Forum/actions';\r\nimport { getRequest, postRequest } from 'Config/axiosClient';\r\n\r\nfunction* getFeeds(action) {\r\n  try {\r\n    const response = yield call(() => getRequest(`posts/${10}/${10}`));\r\n    if (response.status >= 200 || response.status <= 204)\r\n      yield put({ type: actions.GETFEEDS_SUCCESS, data: response.data });\r\n    else throw response.statusText;\r\n  } catch (e) {\r\n    yield put({ type: actions.GETFEEDS_FAILURE });\r\n  }\r\n}\r\n\r\nfunction* addFeeds(action) {\r\n  try {\r\n    const response = yield call(() => getRequest(`posts/${10}/${10}`));\r\n    if (response.status >= 200 || response.status <= 204)\r\n      yield put({ type: actions.ADDFEEDS_SUCCESS, data: response.data });\r\n    else throw response.statusText;\r\n  } catch (e) {\r\n    yield put({ type: actions.ADDFEEDS_FAILURE, e });\r\n  }\r\n}\r\n\r\nfunction* addpost(action) {\r\n  console.log('successfullcall ');\r\n  try {\r\n    const response = yield call(() => postRequest('posts', action.payload));\r\n    if (response.status >= 200 || response.status <= 204) {\r\n      yield put({ type: actions.ADDPOST_SUCCESS, data: response.data });\r\n    } else throw response.statusText;\r\n  } catch (e) {\r\n    yield put({ type: actions.ADDPOST_FAILURE, e });\r\n  }\r\n}\r\n\r\n//Recommendations\r\nfunction* getRecomm(action) {\r\n  try {\r\n    const response = yield call(() =>\r\n      getRequest(`recommendation/${action.params.recommType}/7`),\r\n    );\r\n    if (response.status >= 200 || response.status <= 204)\r\n      yield put({\r\n        type: actions.GETRECOMM_SUCCESS,\r\n        data: response.data.recommendations,\r\n        recommType: action.params.recommType,\r\n      });\r\n    else throw response.statusText;\r\n  } catch (e) {\r\n    yield put({ type: actions.GETRECOMM_FAILURE, e });\r\n  }\r\n}\r\nfunction* addRecomm(action) {\r\n  try {\r\n    const response = yield call(() =>\r\n      getRequest(`recommendation/${action.params.recommType}/7`),\r\n    );\r\n    if (response.status >= 200 || response.status <= 204)\r\n      yield put({\r\n        type: actions.ADDRECOMM_SUCCESS,\r\n        data: response.data.recommendations,\r\n        recommType: action.params.recommType,\r\n      });\r\n    else throw response.statusText;\r\n  } catch (e) {\r\n    yield put({ type: actions.ADDRECOMM_FAILURE, e });\r\n  }\r\n}\r\n\r\nfunction* searchPosts(action) {\r\n  console.log('going to call ', action.params.searchString);\r\n  try {\r\n    const response = yield call(() =>\r\n      postRequest(`search/${action.params.searchString}`),\r\n    );\r\n    console.log(response);\r\n    if (response.status >= 200 || response.status <= 204)\r\n      yield put({\r\n        type: actions.SEARCH_SUCCESS,\r\n        data: response.data.recommendations,\r\n        success: response.data.success,\r\n      });\r\n    else throw response.statusText;\r\n  } catch (e) {\r\n    yield put({\r\n      type: actions.SEARCH_FAILURE,\r\n      success: false,\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    takeLatest(actions.GETFEEDS, getFeeds),\r\n    takeLatest(actions.ADDFEEDS, addFeeds),\r\n    takeLatest(actions.GETRECOMM, getRecomm),\r\n    takeLatest(actions.ADDRECOMM, addRecomm),\r\n    takeLatest(actions.SEARCHFEEDS, searchPosts),\r\n    takeLatest(actions.ADDPOST, addpost),\r\n  ]);\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Forum\\reducer.js",["358","359"],"import actions from 'redux/Forum/actions';\r\n\r\nconst initialState = {\r\n  forumpage: 'Feeds',\r\n  loader: true,\r\n  searchselectedskills: [],\r\n  searchselectedtypes: [],\r\n  recommselectedtype: 'mentees',\r\n  addPostDraftState: false,\r\n  addPostLoading: false,\r\n  addPostDraft: {\r\n    postTitle: '',\r\n    postDescription: '',\r\n    relatedProjectID: '',\r\n  },\r\n  addPostLoader: false,\r\n  feedLoading: true,\r\n  contentFeeds: [],\r\n  searchLoader: false,\r\n  contentSearch: [],\r\n  contentRecomm: [],\r\n  contentRecommMentees: [],\r\n  contentRecommMentors: [],\r\n  contentRecommProjects: [],\r\n  recommLoading: true,\r\n  searchData: [],\r\n  searchLoading: false,\r\n  searchString: '',\r\n};\r\n\r\nfunction Reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    // FEEDS\r\n    case actions.GETFEEDS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        contentFeeds: [...action.data.data],\r\n        feedLoading: false,\r\n      };\r\n    case actions.GETFEEDS_FAILURE:\r\n      return { ...state, feedLoading: false };\r\n    case actions.ADDFEEDS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        contentFeeds: [...state.contentFeeds, ...action.data.data],\r\n        feedLoading: false,\r\n      };\r\n    case actions.ADDFEEDS_FAILURE:\r\n      return { ...state };\r\n\r\n    case actions.ADDPOST_SUCCESS:\r\n      console.log('Add post success');\r\n      return {\r\n        ...state,\r\n        addPostLoading: false,\r\n        addPostDraftState: true,\r\n      };\r\n    case actions.ADDPOST_FAILURE:\r\n      console.log('add post failure');\r\n      return { ...state, addPostLoading: false };\r\n\r\n    case actions.FEEDLOADING:\r\n      return { ...state, feedLoading: action.isloading };\r\n\r\n    // RECOMMENDATIONS\r\n    case actions.GETRECOMM_SUCCESS:\r\n      switch (action.recommType) {\r\n        case 'project':\r\n          return {\r\n            ...state,\r\n            contentRecommProjects: [...action.data],\r\n            recommLoading: false,\r\n          };\r\n\r\n        case 'mentees':\r\n          return {\r\n            ...state,\r\n            contentRecommMentees: [...action.data],\r\n            recommLoading: false,\r\n          };\r\n        case 'mentor':\r\n          return {\r\n            ...state,\r\n            contentRecommMentors: [...action.data],\r\n            recommLoading: false,\r\n          };\r\n        default:\r\n          return { ...state };\r\n      }\r\n\r\n    case actions.GETRECOMM_FAILURE:\r\n      return { ...state, recommLoading: false };\r\n\r\n    case actions.ADDRECOMM_SUCCESS:\r\n      switch (action.recommType) {\r\n        case 'project':\r\n          return {\r\n            ...state,\r\n            contentRecommProjects: [\r\n              ...state.contentRecommProjects,\r\n              ...action.data,\r\n            ],\r\n            recommLoading: false,\r\n          };\r\n        case 'mentees':\r\n          return {\r\n            ...state,\r\n            contentRecommMentees: [\r\n              ...state.contentRecommMentees,\r\n              ...action.data,\r\n            ],\r\n            recommLoading: false,\r\n          };\r\n        case 'mentor':\r\n          return {\r\n            ...state,\r\n            contentRecommMentors: [\r\n              ...state.contentRecommMentors,\r\n              ...action.data,\r\n            ],\r\n            recommLoading: false,\r\n          };\r\n        default:\r\n          return { ...state };\r\n      }\r\n\r\n    case actions.ADDRECOMM_FAILURE:\r\n      return { ...state };\r\n    case actions.RECOMMLOADING:\r\n      return { ...state, recommLoading: action.isloading };\r\n\r\n    // OTHERS\r\n    case actions.FORUMPAGECHANGE:\r\n      return { ...state, forumpage: action.payload.forumpage, loader: false };\r\n    case actions.TOGGLELOADING:\r\n      return { ...state, loader: action.payload.loader };\r\n    case actions.TOGGLESTATE:\r\n      return { ...state, [action.payload.label]: action.payload.value };\r\n\r\n    case actions.UPDATESEARCHSTRING:\r\n      return { ...state, searchString: action.searchString };\r\n    case actions.SEARCH_SUCCESS:\r\n      return { ...state, searchData: [...action.data], searchLoading: false };\r\n\r\n    case actions.SEARCH_FAILURE:\r\n      return { ...state, searchLoading: false };\r\n\r\n    case actions.UPDATERECOMTYPES:\r\n      return {\r\n        ...state,\r\n        recommselectedtype: action.payload.recommendationsselectedtypes,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default Reducer;\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Forum\\actions.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\AppTexts.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\useWindowSize.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\Buttons.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\Config\\axiosClient.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\MultipleSelects.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\Config\\constants.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\LoginPage.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\RegisterPage.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\RegisterForm.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\LoginForm.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\Message.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\MessagesLayout.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\ForumPage.js",["360"],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\MessagesPage.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\Search.js",["361","362","363","364","365","366","367"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport actions from 'redux/Forum/actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport Feed from './utils/Feed';\r\nimport { Row, Empty } from 'antd';\r\nimport Buttons from 'components/utils/Buttons';\r\nimport UserCard from './utils/UserCard';\r\nimport ProjectCard from './utils/ProjectCard';\r\nimport ProjectModal from 'components/Profile/ProjectModal';\r\nimport UserModal from 'components/utils/UserModal';\r\nexport default function Search() {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState([]);\r\n  const [idForModal, setIdForModal] = useState('');\r\n  const [userIdModal, setUserIdModal] = useState(null);\r\n  const [isUserModalVisible, setIsUserModalVisible] = useState(false);\r\n  const [isProjectModalVisible, setIsProjectModalVisible] = useState(false);\r\n  const { searchData, searchString, searchLoading } = useSelector(\r\n    (state) => state.forumReducer,\r\n  );\r\n  function getDummy() {\r\n    let numberofDummy = 5;\r\n    let dummyData = [];\r\n    for (var i = 0; i < numberofDummy; i++) {\r\n      dummyData.push({ title: `dummy${i}`, loading: true });\r\n    }\r\n    return dummyData;\r\n  }\r\n  const doSearch = () => {\r\n    console.log('going to search');\r\n    dispatch({\r\n      type: actions.TOGGLESTATE,\r\n      payload: { label: 'searchLoading', value: true },\r\n    });\r\n    console.log('going to search');\r\n    dispatch({\r\n      type: actions.SEARCHFEEDS,\r\n      params: { searchString: searchString },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let results = searchData;\r\n    results = results.filter((result) => result.score > 0);\r\n    console.log(results);\r\n    setData(results);\r\n    return () => {};\r\n  }, [searchData]);\r\n  const addMoreFeeds = () => {\r\n    setData([...getDummy()]);\r\n    doSearch();\r\n    return () => {};\r\n  };\r\n\r\n  const handleMoreDetails = (type, id) => {\r\n    setIdForModal(id);\r\n    if (type === 'project_id') {\r\n      setIsProjectModalVisible(true);\r\n    } else {\r\n      setUserIdModal(id);\r\n      setIsUserModalVisible(true);\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    setIsProjectModalVisible(false);\r\n    setIsUserModalVisible(false);\r\n  };\r\n  if (data.length > 0) {\r\n    return (\r\n      <>\r\n        <ProjectModal\r\n          isModalVisible={isProjectModalVisible}\r\n          projectId={idForModal}\r\n          handleCancel={handleCancel}\r\n        />\r\n        <UserModal\r\n          isModalVisible={isUserModalVisible}\r\n          projectId={idForModal}\r\n          handleCancel={handleCancel}\r\n          userID={userIdModal}\r\n        />\r\n        <InfiniteScroll\r\n          pageStart={0}\r\n          initialLoad={false}\r\n          // loadMore={}\r\n          hasMore={true || false}\r\n          // element={ListWrapper}\r\n          loader={\r\n            <div className='feed-loader-wrapper' key={0}>\r\n              {/* <Space direction='vertical'>\r\n                <Buttons\r\n                  type='primary'\r\n                  loading={searchLoading}\r\n                  handleClick={() => addMoreFeeds()}\r\n                  content={searchLoading ? 'Loading More' : 'Load More'}\r\n                ></Buttons>\r\n              </Space> */}\r\n            </div>\r\n          }\r\n          threshold={100}\r\n        >\r\n          <Row className='search-result-container' gutter={[16, 16]}>\r\n            {data.map((searchResult, index) =>\r\n              !searchResult?.project_id ? (\r\n                <UserCard\r\n                  key={searchResult.title + index}\r\n                  index={index}\r\n                  city={searchResult.city}\r\n                  country={searchResult.country}\r\n                  first_name={searchResult.first_name}\r\n                  last_name={searchResult.last_name}\r\n                  links={searchResult.links}\r\n                  pic={searchResult.pic}\r\n                  score={searchResult.score}\r\n                  state={searchResult.state}\r\n                  title={searchResult.title}\r\n                  user_id={searchResult.user_id}\r\n                  zipcode={searchResult.zipcode}\r\n                  loading={searchLoading}\r\n                  handleClick={handleMoreDetails}\r\n                />\r\n              ) : (\r\n                <ProjectCard\r\n                  key={searchResult.title + index}\r\n                  index={index}\r\n                  project_description={searchResult.project_description}\r\n                  project_id={searchResult.project_id}\r\n                  project_location={searchResult.project_location}\r\n                  project_requirement={searchResult.project_requirement}\r\n                  project_start_date={searchResult.project_start_date}\r\n                  project_title={searchResult.project_title}\r\n                  score={searchResult.score}\r\n                  loading={searchLoading}\r\n                  handleClick={handleMoreDetails}\r\n                />\r\n              ),\r\n            )}\r\n          </Row>\r\n        </InfiniteScroll>\r\n      </>\r\n    );\r\n  } else if (searchLoading) {\r\n    return (\r\n      <Empty\r\n        image='https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg'\r\n        imageStyle={{\r\n          height: 60,\r\n        }}\r\n        description={<span>Collecting Search Results...</span>}\r\n      ></Empty>\r\n    );\r\n  } else {\r\n    return (\r\n      <Empty\r\n        image='https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg'\r\n        imageStyle={{\r\n          height: 60,\r\n        }}\r\n        description={\r\n          searchString === '' ? (\r\n            <span>Please enter a search key...</span>\r\n          ) : (\r\n            <span>No Search Results...</span>\r\n          )\r\n        }\r\n      >\r\n        {/* <Buttons handleClick={doSearch} content='Retry Search' /> */}\r\n      </Empty>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\Recommendations.js",["368"],"import React, { useEffect, useState } from 'react';\r\nimport actions from 'redux/Forum/actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport RecommMM from './utils/RecommM&M';\r\nimport { Space, Empty, Row } from 'antd';\r\nimport Buttons from 'components/utils/Buttons';\r\nimport RecommProjects from './utils/RecommProjects';\r\nimport ProjectModal from 'components/Profile/ProjectModal';\r\nimport UserModal from 'components/utils/UserModal';\r\nexport default function Recommendations() {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    recommLoading,\r\n    recommselectedtype,\r\n    contentRecommMentees,\r\n    contentRecommMentors,\r\n    contentRecommProjects,\r\n  } = useSelector((state) => state.forumReducer);\r\n  const [idForModal, setIdForModal] = useState('');\r\n  const [isUserModalVisible, setIsUserModalVisible] = useState(false);\r\n  const [isProjectModalVisible, setIsProjectModalVisible] = useState(false);\r\n  var displayData = [];\r\n  // function getDummy() {\r\n  //   let numberofDummy = 5;\r\n  //   let dummyData = [];\r\n  //   for (var i = 0; i < numberofDummy; i++) {\r\n  //     dummyData.push({ title: `dummy${i}`, loading: true });\r\n  //   }\r\n  //   return dummyData;\r\n  // }\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: actions.GETRECOMM,\r\n      params: { user_id: 2, recommType: recommselectedtype },\r\n    });\r\n    return () => {};\r\n  }, [recommselectedtype, dispatch]);\r\n\r\n  const addMoreRecomm = () => {\r\n    dispatch({\r\n      type: actions.RECOMMLOADING,\r\n      isloading: true,\r\n    });\r\n    switch (recommselectedtype) {\r\n      case 'project':\r\n        dispatch({\r\n          type: actions.ADDRECOMM,\r\n          params: { user_id: 2, recommType: recommselectedtype },\r\n        });\r\n        break;\r\n      case 'mentees':\r\n        dispatch({\r\n          type: actions.ADDRECOMM,\r\n          params: { user_id: 2, recommType: recommselectedtype },\r\n        });\r\n        break;\r\n      case 'mentor':\r\n        dispatch({\r\n          type: actions.ADDRECOMM,\r\n          params: { user_id: 2, recommType: recommselectedtype },\r\n        });\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const handleMoreDetails = (type, id) => {\r\n    setIdForModal(id);\r\n    if (type === 'project_id') {\r\n      setIsProjectModalVisible(true);\r\n    } else {\r\n      setIsUserModalVisible(true);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsProjectModalVisible(false);\r\n    setIsUserModalVisible(false);\r\n  };\r\n  if (recommselectedtype === 'project') displayData = contentRecommProjects;\r\n  else if (recommselectedtype === 'mentees') displayData = contentRecommMentees;\r\n  else displayData = contentRecommMentors;\r\n\r\n  if (displayData.length > 0) {\r\n    return (\r\n      <>\r\n        <ProjectModal\r\n          isModalVisible={isProjectModalVisible}\r\n          projectId={idForModal}\r\n          handleCancel={handleCancel}\r\n        />\r\n        <UserModal\r\n          isModalVisible={isUserModalVisible}\r\n          projectId={idForModal}\r\n          handleCancel={handleCancel}\r\n        />\r\n        <InfiniteScroll\r\n          pageStart={0}\r\n          initialLoad={false}\r\n          loadMore={() => addMoreRecomm()}\r\n          hasMore={true || false}\r\n          // element={ListWrapper}\r\n          loader={\r\n            <div className='Recomm-loader-wrapper' key={0}>\r\n              {/* <Space direction='vertical'>\r\n                <Buttons\r\n                  type='primary'\r\n                  loading={recommLoading}\r\n                  handleClick={() => addMoreRecomm()}\r\n                  content={recommLoading ? 'Loading More' : 'Load More'}\r\n                ></Buttons>\r\n              </Space> */}\r\n            </div>\r\n          }\r\n          threshold={150}\r\n        >\r\n          <Row className='recommendation-container' gutter={[16, 16]}>\r\n            {displayData.map((recomm, index) =>\r\n              recommselectedtype !== 'project' ? (\r\n                <RecommMM\r\n                  key={recomm?.first_name + index}\r\n                  index={index}\r\n                  city={recomm?.city}\r\n                  country={recomm?.country}\r\n                  profilePicLink={recomm?.profile_link}\r\n                  firstName={recomm?.first_name}\r\n                  lastName={recomm?.last_name}\r\n                  email={recomm?.email}\r\n                  user_id={recomm?.user_id}\r\n                  skills={recomm?.skill_name}\r\n                  loading={recomm?.loading}\r\n                  userType={recomm?.user_type}\r\n                  handleClick={handleMoreDetails}\r\n                />\r\n              ) : (\r\n                <RecommProjects\r\n                  index={index}\r\n                  key={recomm?.first_name + index}\r\n                  projectTitle={recomm?.title}\r\n                  firstName={recomm?.first_name}\r\n                  lastName={recomm?.last_name}\r\n                  projectDescription={recomm?.description}\r\n                  email={recomm?.email}\r\n                  projectStatus={recomm?.status}\r\n                  user_id={recomm?.user_id}\r\n                  project_id={recomm?.project_id}\r\n                  loading={recomm?.loading}\r\n                  userType={recomm?.user_type}\r\n                  location={recomm?.location}\r\n                  startDate={recomm?.start_date}\r\n                  skills={recomm?.skill_name}\r\n                  handleClick={handleMoreDetails}\r\n                />\r\n              ),\r\n            )}\r\n          </Row>\r\n        </InfiniteScroll>\r\n      </>\r\n    );\r\n  } else if (recommLoading) {\r\n    return (\r\n      <Empty\r\n        image='https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg'\r\n        imageStyle={{\r\n          height: 60,\r\n        }}\r\n        description={<span>Collecting Recomm...</span>}\r\n      >\r\n        {contentRecommMentors}\r\n        {contentRecommMentees}\r\n        {contentRecommProjects}\r\n      </Empty>\r\n    );\r\n  } else {\r\n    return (\r\n      <Empty\r\n        image='https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg'\r\n        imageStyle={{\r\n          height: 60,\r\n        }}\r\n        description={<span>No Recomm...</span>}\r\n      >\r\n        <Buttons handleClick={addMoreRecomm} content='Retry loading Recomm' />\r\n      </Empty>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\Feeds.js",["369"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport actions from 'redux/Forum/actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport Feed from './utils/Feed';\r\nimport { Space, Empty } from 'antd';\r\nimport Buttons from 'components/utils/Buttons';\r\nimport ProjectModal from 'components/Profile/ProjectModal';\r\n\r\nexport default function Feeds() {\r\n  const dispatch = useDispatch();\r\n  const { contentFeeds, feedLoading } = useSelector(\r\n    (state) => state.forumReducer,\r\n  );\r\n  let currentContentFeed = useRef(contentFeeds);\r\n  const [data, setData] = useState([]);\r\n  const [idForModal, setIdForModal] = useState('');\r\n  const [isUserModalVisible, setIsUserModalVisible] = useState(false);\r\n  const [isProjectModalVisible, setIsProjectModalVisible] = useState(false);\r\n  const handleMoreDetails = (type, id) => {\r\n    setIdForModal(id);\r\n    if (type === 'project_id') {\r\n      setIsProjectModalVisible(true);\r\n    } else {\r\n      setIsUserModalVisible(true);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsProjectModalVisible(false);\r\n    setIsUserModalVisible(false);\r\n  };\r\n  function getDummy() {\r\n    let numberofDummy = 5;\r\n    let dummyData = [];\r\n    for (var i = 0; i < numberofDummy; i++) {\r\n      dummyData.push({ title: `dummy${i}`, loading: true });\r\n    }\r\n    return dummyData;\r\n  }\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    // eslint-disable-next-line\r\n    setData([...currentContentFeed.current, ...getDummy()]);\r\n    dispatch({\r\n      type: actions.GETFEEDS,\r\n      params: { filters: [], type: [] },\r\n    });\r\n    return () => {};\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setData(contentFeeds);\r\n    return () => {};\r\n  }, [contentFeeds]);\r\n  const addMoreFeeds = () => {\r\n    dispatch({\r\n      type: actions.FEEDLOADING,\r\n      isloading: true,\r\n    });\r\n    setData([...contentFeeds, ...getDummy()]);\r\n    dispatch({\r\n      type: actions.ADDFEEDS,\r\n      params: { filters: [], type: [] },\r\n    });\r\n    return () => {};\r\n  };\r\n  if (data.length > 0) {\r\n    return (\r\n      <>\r\n        <ProjectModal\r\n          isModalVisible={isProjectModalVisible}\r\n          projectId={idForModal}\r\n          handleCancel={handleCancel}\r\n        />\r\n        <InfiniteScroll\r\n          pageStart={0}\r\n          initialLoad={false}\r\n          loadMore={() => addMoreFeeds()}\r\n          hasMore={true || false}\r\n          // element={ListWrapper}\r\n          loader={\r\n            <div className='feed-loader-wrapper' key={0}>\r\n              <Space direction='vertical'>\r\n                <Buttons\r\n                  type='primary'\r\n                  loading={feedLoading}\r\n                  handleClick={() => addMoreFeeds()}\r\n                  content={feedLoading ? 'Loading More' : 'Load More'}\r\n                ></Buttons>\r\n              </Space>\r\n            </div>\r\n          }\r\n          threshold={100}\r\n        >\r\n          <Space size={10} className='full-wide' direction='vertical'>\r\n            {data.map((feed, index) => (\r\n              <Feed\r\n                key={feed.post_id}\r\n                index={index}\r\n                project_id={feed.project_id}\r\n                title={feed.title || 'Default Post Title'}\r\n                description={feed.content}\r\n                lastModified={feed.last_modified}\r\n                createdAt={feed.timestamp}\r\n                postOwner={feed.postOwner}\r\n                commentCount={feed.comments?.length || 0}\r\n                comments={feed.comments}\r\n                loading={feed?.loading}\r\n                postId={feed.post_id}\r\n                userId={feed.user_id}\r\n                handleClick={handleMoreDetails}\r\n              />\r\n            ))}\r\n          </Space>\r\n        </InfiniteScroll>\r\n      </>\r\n    );\r\n  } else if (feedLoading) {\r\n    return (\r\n      <Empty\r\n        image='https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg'\r\n        imageStyle={{\r\n          height: 60,\r\n        }}\r\n        description={<span>Collecting Feeds...</span>}\r\n      ></Empty>\r\n    );\r\n  } else {\r\n    return (\r\n      <Empty\r\n        image='https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg'\r\n        imageStyle={{\r\n          height: 60,\r\n        }}\r\n        description={<span>No Feeds...</span>}\r\n      >\r\n        <Buttons handleClick={addMoreFeeds} content='Retry loading feeds' />\r\n      </Empty>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPageHeaderExtras.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\UserDetails.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\ViewWrapper.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\UserMessager.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\ViewWrapper.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\Feed.js",["370"],"import React, { useState } from 'react';\r\nimport { List, Avatar, Space, Skeleton, Tooltip, Button } from 'antd';\r\nimport { MessageOutlined } from '@ant-design/icons';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport AppTexts from 'components/utils/AppTexts';\r\nimport ViewWrapper from 'components/Forum/contentPage/utils/ViewWrapper';\r\nimport CommentsWrapper from 'components/utils/CommentsWrapper';\r\nimport moment from 'moment';\r\nimport { ExpandOutlined } from '@ant-design/icons';\r\n\r\nconst IconText = ({ icon, text, handleClick }) => (\r\n  <Space onClick={handleClick}>\r\n    {'Comments'}\r\n    {React.createElement(icon)}\r\n    {text}\r\n  </Space>\r\n);\r\nconst defaultText =\r\n  'The Career Ready Mentoring Program connects UNSW students from their second year of study onwards with established industry professionals, providing students with a significant opportunity to focus on career development during the transition from study to work.';\r\nexport default function Feed({\r\n  index,\r\n  title,\r\n  description,\r\n  lastModified,\r\n  createdAt,\r\n  postOwner,\r\n  commentCount,\r\n  comments,\r\n  postId,\r\n  handleClick,\r\n  project_id,\r\n  ...rest\r\n}) {\r\n  const [commentsVisible, setCommentsVisible] = useState(false);\r\n  const toggleComments = () => {\r\n    setCommentsVisible(!commentsVisible);\r\n  };\r\n  return (\r\n    <ViewWrapper>\r\n      <List className='feed-list-wrapper'>\r\n        <List.Item\r\n          key={title + index}\r\n          actions={[\r\n            <IconText\r\n              icon={MessageOutlined}\r\n              text={commentCount}\r\n              handleClick={toggleComments}\r\n              key='list-vertical-message'\r\n            />,\r\n            <Button onClick={() => handleClick('project_id', project_id)}>\r\n              <ExpandOutlined key='expand' />\r\n              View Project\r\n            </Button>,\r\n          ]}\r\n          className='feed-list-item'\r\n        >\r\n          <Skeleton loading={{ ...rest }?.loading} active avatar>\r\n            <List.Item.Meta\r\n              avatar={<Avatar icon={<UserOutlined />} />}\r\n              title={\r\n                <>\r\n                  <AppTexts className='mediumlarge' content={title}></AppTexts>\r\n                  <Tooltip\r\n                    placement='left'\r\n                    title={moment()\r\n                      .subtract(1, 'days')\r\n                      .format('YYYY-MM-DD HH:mm:ss')}\r\n                  >\r\n                    <AppTexts\r\n                      content={moment().subtract(1, 'days').fromNow()}\r\n                    />\r\n                  </Tooltip>\r\n                </>\r\n              }\r\n              description={<AppTexts content={description} />}\r\n            />\r\n          </Skeleton>\r\n        </List.Item>\r\n        {commentsVisible && (\r\n          <CommentsWrapper\r\n            postId={postId}\r\n            defaultComments={comments ? comments : []}\r\n          />\r\n        )}\r\n      </List>\r\n    </ViewWrapper>\r\n  );\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPhRecomExtras.js",["371","372","373"],"import React from 'react';\r\nimport Buttons from 'components/utils/Buttons';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport actions from 'redux/Forum/actions';\r\nimport SingleSelect from 'components/utils/SingleSelect';\r\nimport { Space, Row } from 'antd';\r\n\r\nconst optionsType = [\r\n  { value: 'mentor', label: 'Mentors' },\r\n  { value: 'mentees', label: 'Mentees' },\r\n  { value: 'project', label: 'Projects' },\r\n];\r\nexport default function ForumPhRecomExtras() {\r\n  const dispatch = useDispatch();\r\n  const { recommselectedtype, loader } = useSelector(\r\n    (state) => state.forumReducer,\r\n  );\r\n  const onValueChangeTypes = (values) => {\r\n    dispatch({\r\n      type: actions.UPDATERECOMTYPES,\r\n      payload: { recommendationsselectedtypes: values },\r\n    });\r\n  };\r\n  const toggleLoading = () => {\r\n    dispatch({\r\n      type: actions.TOGGLELOADING,\r\n      payload: { loader: !loader },\r\n    });\r\n  };\r\n  return (\r\n    <Row\r\n      lg={20}\r\n      md={20}\r\n      sm={20}\r\n      xs={22}\r\n      justify='space-between'\r\n      align='middle'\r\n      className='forum-page-header-extra-wrapper'\r\n    >\r\n      <Space className='forum-page-header-extra-spacer'>\r\n        <SingleSelect\r\n          defaultValue={recommselectedtype}\r\n          selectOptions={optionsType}\r\n          placeholder='Select Types'\r\n          handleChange={(values) => onValueChangeTypes(values)}\r\n          // tagRender={() => <>{null}</>}\r\n          className='multiselect forum-recom-type-select'\r\n        />\r\n        {/* <Buttons\r\n          type='primary'\r\n          shape='round'\r\n          icon={<SearchOutlined />}\r\n          content='Get Recommendations'\r\n          handleClick={() => toggleLoading()}\r\n        /> */}\r\n      </Space>\r\n    </Row>\r\n  );\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPhFeedsExtras.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPhSearchExtras.js",["374","375","376","377","378","379","380"],"import React, { useState } from 'react';\r\nimport Buttons from 'components/utils/Buttons';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { Row, Space, Input } from 'antd';\r\nimport MultipleSelects from 'components/utils/MultipleSelects';\r\nimport actions from 'redux/Forum/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst { Search } = Input;\r\nconst options = [\r\n  'JavaScript',\r\n  'Python',\r\n  'C',\r\n  'Java',\r\n  'Go',\r\n  'Perl',\r\n  'Ruby',\r\n  'Swift',\r\n  'Scala',\r\n  'PHP',\r\n  'C++',\r\n  'R',\r\n  'Objective-C',\r\n  'SQL',\r\n  'Arduino ',\r\n  'MATLAB',\r\n  'Rust',\r\n  'TypeScript',\r\n  'Kotlin',\r\n  'CSS',\r\n  'Groovy',\r\n  'Dart',\r\n  'Assembly Language',\r\n  'PowerShell',\r\n  'Julia',\r\n  'Scratch',\r\n  'COBOL',\r\n  'Fortran',\r\n  'ABAP',\r\n  'Scheme',\r\n  'Shell',\r\n  'Prolog',\r\n  'VBScript',\r\n  'Haskell',\r\n  'Delphi',\r\n  'Hack',\r\n  'Pascal',\r\n  'Ada',\r\n  'Lua',\r\n  'Visual Basic',\r\n  'Lisp',\r\n  'Bash',\r\n  'Clojure',\r\n  'MQL4',\r\n  'Apex',\r\n  'LabVIEW',\r\n  'ABL',\r\n  'D',\r\n  'SAS',\r\n  'Logo',\r\n];\r\n\r\nexport default function ForumPhSearchExtras() {\r\n  const dispatch = useDispatch();\r\n  const { searchLoading, searchString } = useSelector(\r\n    (state) => state.forumReducer,\r\n  );\r\n  // const [loading, setLoading] = useState(false);\r\n\r\n  const doSearch = () => {\r\n    console.log('going to search');\r\n    dispatch({\r\n      type: actions.TOGGLESTATE,\r\n      payload: { label: 'searchLoading', value: true },\r\n    });\r\n    console.log('going to search');\r\n    dispatch({\r\n      type: actions.SEARCHFEEDS,\r\n      params: { searchString: searchString },\r\n    });\r\n  };\r\n  const updateSearchString = (value) => {\r\n    dispatch({\r\n      type: actions.UPDATESEARCHSTRING,\r\n      searchString: value,\r\n    });\r\n  };\r\n  return (\r\n    <Row\r\n      lg={20}\r\n      md={20}\r\n      sm={20}\r\n      xs={24}\r\n      justify='space-between'\r\n      align='middle'\r\n      className='forum-page-header-extra-wrapper'\r\n    >\r\n      <Space className='forum-page-header-extra-spacer'></Space>\r\n      <Search\r\n        placeholder='Input search string'\r\n        loading={searchLoading}\r\n        enterButton\r\n        allowClear\r\n        value={searchString}\r\n        onChange={(e) => updateSearchString(e.target.value)}\r\n        onPressEnter={() => doSearch()}\r\n        onSearch={() => doSearch()}\r\n      />\r\n    </Row>\r\n  );\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\getTruncatedName.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\MessagePreview.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\Editor.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\CommentsWrapper.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\SingleSelect.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\CommentsContainer.js",["381"],"import React, { useState } from 'react';\r\nimport { Tooltip, Input, Form, List, Spin, Avatar, Space } from 'antd';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport moment from 'moment';\r\nimport AppTexts from './AppTexts';\r\nimport Buttons from './Buttons';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { getRandomColor } from 'components/tools/colorGenerator';\r\n\r\nconst { TextArea } = Input;\r\nconst data = [\r\n  {\r\n    actions: [],\r\n    author: 'Han Solo',\r\n    avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\r\n    content: (\r\n      <p>\r\n        We supply a series of design principles, practical patterns and high\r\n        quality design resources (Sketch and Axure), to help people create their\r\n        product prototypes beautifully and efficiently.\r\n      </p>\r\n    ),\r\n    datetime: (\r\n      <Tooltip\r\n        title={moment().subtract(1, 'days').format('YYYY-MM-DD HH:mm:ss')}\r\n      >\r\n        <span>{moment().subtract(1, 'days').fromNow()}</span>\r\n      </Tooltip>\r\n    ),\r\n  },\r\n  {\r\n    actions: [],\r\n    author: 'Han Solo',\r\n    avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\r\n    content: (\r\n      <p>\r\n        We supply a series of design principles, practical patterns and high\r\n        quality design resources (Sketch and Axure), to help people create their\r\n        product prototypes beautifully and efficiently.\r\n      </p>\r\n    ),\r\n    datetime: (\r\n      <Tooltip\r\n        title={moment().subtract(1, 'days').format('YYYY-MM-DD HH:mm:ss')}\r\n      >\r\n        <span>{moment().subtract(1, 'days').fromNow()}</span>\r\n      </Tooltip>\r\n    ),\r\n  },\r\n];\r\nconst Editor = ({ onChange, onSubmit, submitting, value }) => (\r\n  <>\r\n    <Form.Item className='comment-input-wrapper'>\r\n      <TextArea\r\n        placeholder='Enter your comments here'\r\n        className='add-comment-input'\r\n        rows={4}\r\n        onChange={onChange}\r\n        value={value}\r\n      />\r\n    </Form.Item>\r\n    <Form.Item className='comment-submit-wrapper'>\r\n      <Buttons\r\n        htmlType='submit'\r\n        loading={submitting}\r\n        handleClick={onSubmit}\r\n        type='primary'\r\n        content='Add Comment'\r\n      ></Buttons>\r\n    </Form.Item>\r\n  </>\r\n);\r\nexport default function CommentsContainer({ postId, defaultComments = [] }) {\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [newComment, setNewComment] = useState('');\r\n  // const [data, setData] = useState([])\r\n  const [loading] = useState(false);\r\n  const [hasMore] = useState(true);\r\n  const handleSubmit = () => {\r\n    setSubmitting(true);\r\n    setTimeout(() => {\r\n      setSubmitting(false);\r\n      setNewComment('');\r\n    }, 1000);\r\n  };\r\n  const handleChange = (e) => {\r\n    setNewComment(e.target.value);\r\n  };\r\n  const handleInfiniteOnLoad = (e) => {};\r\n  return (\r\n    <Space direction='vertical' className='comment-list-spacer'>\r\n      <div className='comments-infinite-container'>\r\n        <InfiniteScroll\r\n          initialLoad={false}\r\n          pageStart={0}\r\n          loadMore={handleInfiniteOnLoad}\r\n          hasMore={!loading && hasMore}\r\n          useWindow={false}\r\n        >\r\n          <List\r\n            itemLayout='vertical'\r\n            dataSource={[...defaultComments]}\r\n            renderItem={(item) => (\r\n              <List.Item key={item.comment_id}>\r\n                <List.Item.Meta\r\n                  avatar={\r\n                    <Avatar\r\n                      icon={<UserOutlined />}\r\n                      style={{\r\n                        backgroundColor: getRandomColor(item.message),\r\n                      }}\r\n                    />\r\n                  }\r\n                  title={<AppTexts content={'FirstName LastName'} />}\r\n                  description={<AppTexts content={item.content} />}\r\n                />\r\n                <AppTexts\r\n                  // containerStyle={{ 'padding-left': '50px' }}\r\n                  style={{ paddingLeft: '50px' }}\r\n                  content={item.message}\r\n                />\r\n              </List.Item>\r\n            )}\r\n          >\r\n            {loading && hasMore && (\r\n              <div className='demo-loading-container'>\r\n                <Spin />\r\n              </div>\r\n            )}\r\n          </List>\r\n        </InfiniteScroll>\r\n      </div>\r\n      <Editor\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n        submitting={submitting}\r\n        value={newComment}\r\n      />\r\n    </Space>\r\n  );\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\EditProfileModal.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\ProjectCard.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\ProjectModal.js",["382","383","384","385","386"],"import React, { useEffect, useState } from 'react';\r\nimport { UserOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Typography,\r\n  Divider,\r\n  Tag,\r\n  Avatar,\r\n  Button,\r\n  Tooltip,\r\n} from 'antd';\r\nimport { getRequest } from 'Config/axiosClient';\r\nimport { getRandomColor } from 'components/tools/colorGenerator';\r\n\r\nfunction ProjectModal({ isModalVisible, projectId, handleCancel }) {\r\n  const { Paragraph, Text } = Typography;\r\n  const { confirm } = Modal;\r\n  const [data, setData] = useState(null);\r\n\r\n  function showConfirm() {\r\n    confirm({\r\n      title: 'Do you want to join the project?',\r\n      icon: <ExclamationCircleOutlined />,\r\n      onOk() {\r\n        alert('OK');\r\n      },\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    setData(null);\r\n    const id = projectId.split('_')[1];\r\n    if (isModalVisible) {\r\n      console.log('useEffect');\r\n      getRequest(`project/${id}`).then((res) => {\r\n        console.log(res);\r\n        setData(res.data.data[0]);\r\n      });\r\n    }\r\n    return () => {};\r\n  }, [isModalVisible]);\r\n  return (\r\n    <div>\r\n      {data ? (\r\n        <Modal\r\n          title={data?.title}\r\n          visible={isModalVisible}\r\n          onCancel={handleCancel}\r\n          // onOk={null}\r\n          className='project-modal-wrapper'\r\n          footer={[\r\n            <Button key='submit' type='primary' loading={false} onClick={null}>\r\n              Join\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <Row gutter={[16, 24]}>\r\n            <Col>\r\n              <Text strong>Description:</Text>\r\n              <Paragraph>{data?.description}</Paragraph>\r\n            </Col>\r\n          </Row>\r\n          {/* <Divider />\r\n        <Row>\r\n          <Col span={24}>\r\n            <Text strong>Skills:</Text>\r\n          </Col>\r\n          <Col style={{ marginTop: '1%' }}>\r\n            <Tag color='magenta'>Data Science</Tag>\r\n            <Tag color='cyan'>Java</Tag>\r\n            <Tag color='lime'>AI</Tag>\r\n            <Tag color='orange'>Data Science</Tag>\r\n          </Col>\r\n        </Row> */}\r\n          <Divider />\r\n          <Row>\r\n            <Col span={12}>\r\n              <Row>\r\n                <Col span={24}>\r\n                  <Text strong>{`${data?.created_by} Ukesh`}</Text>\r\n                </Col>\r\n                <Col span={24} style={{ marginTop: '1%' }}>\r\n                  <Avatar\r\n                    style={{\r\n                      backgroundColor: 'rgb(154 160 164)',\r\n                    }}\r\n                    size={30}\r\n                    icon={<UserOutlined />}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Row>\r\n                <Col span={24}>\r\n                  <Text strong>Contributors:</Text>\r\n                </Col>\r\n                <Col span={24} style={{ marginTop: '1%' }}>\r\n                  {[\r\n                    'Mark Tom',\r\n                    'MAtherw Jackk',\r\n                    'Jikosh jayunga',\r\n                    'Jintara Filanda',\r\n                    'Mikoshi Kara',\r\n                    'Innachi yako',\r\n                  ].map((value) => (\r\n                    <Tooltip title={value} placement='bottom'>\r\n                      <Avatar\r\n                        style={{\r\n                          backgroundColor: getRandomColor(value),\r\n                        }}\r\n                        size={30}\r\n                        icon={<UserOutlined />}\r\n                      />\r\n                    </Tooltip>\r\n                  ))}\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectModal;\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\colorGenerator.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\RecommProjects.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\RecommM&M.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\UserModal.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\UserCard.js",["387"],"import React from 'react';\r\nimport { Skeleton, Card, Avatar, Tag } from 'antd';\r\nimport { ExpandOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { getRandomColor } from 'components/tools/colorGenerator';\r\nimport AppTexts from 'components/utils/AppTexts';\r\nimport Buttons from 'components/utils/Buttons';\r\n\r\nconst { Meta } = Card;\r\nexport default function UserCard({\r\n  city,\r\n  country,\r\n  first_name,\r\n  last_name,\r\n  links,\r\n  pic,\r\n  score,\r\n  state,\r\n  title,\r\n  user_id,\r\n  zipcode,\r\n  loading,\r\n  handleClick,\r\n}) {\r\n  return (\r\n    <div className='user-card-wrapper'>\r\n      <Card\r\n        style={{ width: 300, marginTop: 16 }}\r\n        className='list-card'\r\n        actions={[\r\n          null,\r\n          <Buttons\r\n            handleClick={() => handleClick('user_id', user_id)}\r\n            content={\r\n              <>\r\n                <ExpandOutlined key='expand' /> View Profile\r\n              </>\r\n            }\r\n          />,\r\n        ]}\r\n      >\r\n        <Skeleton loading={loading} avatar active>\r\n          <Meta\r\n            avatar={\r\n              <Avatar\r\n                icon={<UserOutlined />}\r\n                style={{\r\n                  backgroundColor: getRandomColor(`${first_name} ${last_name}`),\r\n                }}\r\n              />\r\n            }\r\n            title={`${first_name} ${last_name}`}\r\n            description={title}\r\n            style={{ textAlign: 'left' }}\r\n          />\r\n        </Skeleton>\r\n        <Tag className='card-user-type' color='#3ca6b5'>\r\n          User\r\n        </Tag>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n// data.city\r\n// data.country\r\n// data.first_name\r\n// data.last_name\r\n// data.links\r\n// data.pic\r\n// data.score\r\n// data.state\r\n// data.title\r\n// data.user_id\r\n// data.zipcode\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\ProjectCard.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Profile\\reducer.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Profile\\saga.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Profile\\actions.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\utils\\ViewWrapper.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\SearchSelector.js",[],{"ruleId":"388","replacedBy":"389"},{"ruleId":"390","replacedBy":"391"},{"ruleId":"392","severity":1,"message":"393","line":8,"column":3,"nodeType":"394","messageId":"395","endLine":8,"endColumn":15},{"ruleId":"396","severity":1,"message":"397","line":40,"column":6,"nodeType":"398","endLine":40,"endColumn":8,"suggestions":"399"},{"ruleId":"392","severity":1,"message":"400","line":5,"column":8,"nodeType":"394","messageId":"395","endLine":5,"endColumn":15},{"ruleId":"396","severity":1,"message":"401","line":27,"column":6,"nodeType":"398","endLine":27,"endColumn":8,"suggestions":"402"},{"ruleId":"392","severity":1,"message":"403","line":1,"column":38,"nodeType":"394","messageId":"395","endLine":1,"endColumn":44},{"ruleId":"392","severity":1,"message":"404","line":21,"column":22,"nodeType":"394","messageId":"395","endLine":21,"endColumn":39},{"ruleId":"392","severity":1,"message":"405","line":21,"column":41,"nodeType":"394","messageId":"395","endLine":21,"endColumn":58},{"ruleId":"396","severity":1,"message":"406","line":35,"column":6,"nodeType":"398","endLine":35,"endColumn":8,"suggestions":"407"},{"ruleId":"396","severity":1,"message":"408","line":36,"column":13,"nodeType":"409","endLine":46,"endColumn":4},{"ruleId":"396","severity":1,"message":"401","line":46,"column":6,"nodeType":"398","endLine":46,"endColumn":15,"suggestions":"410"},{"ruleId":"392","severity":1,"message":"411","line":98,"column":9,"nodeType":"394","messageId":"395","endLine":98,"endColumn":25},{"ruleId":"392","severity":1,"message":"412","line":1,"column":17,"nodeType":"394","messageId":"395","endLine":1,"endColumn":25},{"ruleId":"392","severity":1,"message":"413","line":9,"column":3,"nodeType":"394","messageId":"395","endLine":9,"endColumn":11},{"ruleId":"392","severity":1,"message":"414","line":15,"column":38,"nodeType":"394","messageId":"395","endLine":15,"endColumn":52},{"ruleId":"396","severity":1,"message":"401","line":33,"column":6,"nodeType":"398","endLine":33,"endColumn":8,"suggestions":"415"},{"ruleId":"392","severity":1,"message":"416","line":35,"column":7,"nodeType":"394","messageId":"395","endLine":35,"endColumn":14},{"ruleId":"417","severity":1,"message":"418","line":18,"column":5,"nodeType":"419","messageId":"420","endLine":18,"endColumn":16},{"ruleId":"392","severity":1,"message":"421","line":8,"column":3,"nodeType":"394","messageId":"395","endLine":8,"endColumn":7},{"ruleId":"392","severity":1,"message":"422","line":10,"column":3,"nodeType":"394","messageId":"395","endLine":10,"endColumn":14},{"ruleId":"392","severity":1,"message":"423","line":119,"column":7,"nodeType":"394","messageId":"395","endLine":119,"endColumn":23},{"ruleId":"392","severity":1,"message":"424","line":123,"column":7,"nodeType":"394","messageId":"395","endLine":123,"endColumn":13},{"ruleId":"392","severity":1,"message":"425","line":139,"column":18,"nodeType":"394","messageId":"395","endLine":139,"endColumn":27},{"ruleId":"417","severity":1,"message":"418","line":157,"column":5,"nodeType":"419","messageId":"420","endLine":157,"endColumn":16},{"ruleId":"392","severity":1,"message":"426","line":188,"column":9,"nodeType":"394","messageId":"395","endLine":188,"endColumn":20},{"ruleId":"392","severity":1,"message":"427","line":190,"column":7,"nodeType":"394","messageId":"395","endLine":190,"endColumn":24},{"ruleId":"417","severity":1,"message":"418","line":9,"column":5,"nodeType":"419","messageId":"420","endLine":9,"endColumn":16},{"ruleId":"417","severity":1,"message":"418","line":28,"column":3,"nodeType":"419","messageId":"420","endLine":28,"endColumn":14},{"ruleId":"417","severity":1,"message":"418","line":74,"column":3,"nodeType":"419","messageId":"420","endLine":74,"endColumn":14},{"ruleId":"417","severity":1,"message":"418","line":79,"column":5,"nodeType":"419","messageId":"420","endLine":79,"endColumn":16},{"ruleId":"417","severity":1,"message":"418","line":52,"column":7,"nodeType":"419","messageId":"420","endLine":52,"endColumn":18},{"ruleId":"417","severity":1,"message":"418","line":59,"column":7,"nodeType":"419","messageId":"420","endLine":59,"endColumn":18},{"ruleId":"392","severity":1,"message":"428","line":7,"column":11,"nodeType":"394","messageId":"395","endLine":7,"endColumn":20},{"ruleId":"392","severity":1,"message":"403","line":1,"column":38,"nodeType":"394","messageId":"395","endLine":1,"endColumn":44},{"ruleId":"392","severity":1,"message":"429","line":5,"column":8,"nodeType":"394","messageId":"395","endLine":5,"endColumn":12},{"ruleId":"392","severity":1,"message":"400","line":7,"column":8,"nodeType":"394","messageId":"395","endLine":7,"endColumn":15},{"ruleId":"417","severity":1,"message":"418","line":31,"column":5,"nodeType":"419","messageId":"420","endLine":31,"endColumn":16},{"ruleId":"417","severity":1,"message":"418","line":36,"column":5,"nodeType":"419","messageId":"420","endLine":36,"endColumn":16},{"ruleId":"417","severity":1,"message":"418","line":46,"column":5,"nodeType":"419","messageId":"420","endLine":46,"endColumn":16},{"ruleId":"392","severity":1,"message":"430","line":50,"column":9,"nodeType":"394","messageId":"395","endLine":50,"endColumn":21},{"ruleId":"392","severity":1,"message":"431","line":6,"column":10,"nodeType":"394","messageId":"395","endLine":6,"endColumn":15},{"ruleId":"392","severity":1,"message":"432","line":18,"column":10,"nodeType":"394","messageId":"395","endLine":18,"endColumn":28},{"ruleId":"392","severity":1,"message":"426","line":18,"column":7,"nodeType":"394","messageId":"395","endLine":18,"endColumn":18},{"ruleId":"392","severity":1,"message":"400","line":2,"column":8,"nodeType":"394","messageId":"395","endLine":2,"endColumn":15},{"ruleId":"392","severity":1,"message":"433","line":3,"column":10,"nodeType":"394","messageId":"395","endLine":3,"endColumn":24},{"ruleId":"392","severity":1,"message":"434","line":25,"column":9,"nodeType":"394","messageId":"395","endLine":25,"endColumn":22},{"ruleId":"392","severity":1,"message":"412","line":1,"column":17,"nodeType":"394","messageId":"395","endLine":1,"endColumn":25},{"ruleId":"392","severity":1,"message":"400","line":2,"column":8,"nodeType":"394","messageId":"395","endLine":2,"endColumn":15},{"ruleId":"392","severity":1,"message":"433","line":3,"column":10,"nodeType":"394","messageId":"395","endLine":3,"endColumn":24},{"ruleId":"392","severity":1,"message":"435","line":5,"column":8,"nodeType":"394","messageId":"395","endLine":5,"endColumn":23},{"ruleId":"392","severity":1,"message":"436","line":10,"column":7,"nodeType":"394","messageId":"395","endLine":10,"endColumn":14},{"ruleId":"417","severity":1,"message":"418","line":71,"column":5,"nodeType":"419","messageId":"420","endLine":71,"endColumn":16},{"ruleId":"417","severity":1,"message":"418","line":76,"column":5,"nodeType":"419","messageId":"420","endLine":76,"endColumn":16},{"ruleId":"392","severity":1,"message":"437","line":11,"column":7,"nodeType":"394","messageId":"395","endLine":11,"endColumn":11},{"ruleId":"392","severity":1,"message":"438","line":9,"column":3,"nodeType":"394","messageId":"395","endLine":9,"endColumn":6},{"ruleId":"392","severity":1,"message":"439","line":22,"column":12,"nodeType":"394","messageId":"395","endLine":22,"endColumn":23},{"ruleId":"417","severity":1,"message":"418","line":35,"column":7,"nodeType":"419","messageId":"420","endLine":35,"endColumn":18},{"ruleId":"417","severity":1,"message":"418","line":37,"column":9,"nodeType":"419","messageId":"420","endLine":37,"endColumn":20},{"ruleId":"396","severity":1,"message":"440","line":42,"column":6,"nodeType":"398","endLine":42,"endColumn":22,"suggestions":"441"},{"ruleId":"392","severity":1,"message":"442","line":5,"column":8,"nodeType":"394","messageId":"395","endLine":5,"endColumn":16},"no-native-reassign",["443"],"no-negated-in-lhs",["444"],"no-unused-vars","'UserOutlined' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'userId', and 'user_id'. Either include them or remove the dependency array.","ArrayExpression",["445"],"'Buttons' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.",["446"],"'useRef' is defined but never used.","'skillErrorMessage' is assigned a value but never used.","'skillDisplayError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["447"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["448"],"'openNotification' is assigned a value but never used.","'useState' is defined but never used.","'Skeleton' is defined but never used.","'DeleteOutlined' is defined but never used.",["449"],"'content' is assigned a value but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'Form' is defined but never used.","'InputNumber' is defined but never used.","'validateMessages' is assigned a value but never used.","'layout' is assigned a value but never used.","'setuserId' is assigned a value but never used.","'defaultText' is assigned a value but never used.","'addingPostLoading' is assigned a value but never used.","'forumpage' is assigned a value but never used.","'Feed' is defined but never used.","'addMoreFeeds' is assigned a value but never used.","'Space' is defined but never used.","'isUserModalVisible' is assigned a value but never used.","'SearchOutlined' is defined but never used.","'toggleLoading' is assigned a value but never used.","'MultipleSelects' is defined but never used.","'options' is assigned a value but never used.","'data' is assigned a value but never used.","'Tag' is defined but never used.","'showConfirm' is defined but never used.","React Hook useEffect has a missing dependency: 'projectId'. Either include it or remove the dependency array.",["450"],"'AppTexts' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},{"desc":"451","fix":"457"},{"desc":"453","fix":"458"},{"desc":"459","fix":"460"},"Update the dependencies array to be: [dispatch, userId, user_id]",{"range":"461","text":"462"},"Update the dependencies array to be: [dispatch, userId]",{"range":"463","text":"464"},"Update the dependencies array to be: [dispatch]",{"range":"465","text":"466"},{"range":"467","text":"462"},{"range":"468","text":"464"},"Update the dependencies array to be: [isModalVisible, projectId]",{"range":"469","text":"470"},[1364,1366],"[dispatch, userId, user_id]",[972,974],"[dispatch, userId]",[1255,1257],"[dispatch]",[1485,1494],[884,886],[1059,1075],"[isModalVisible, projectId]"]