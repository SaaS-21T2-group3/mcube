[{"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\index.js":"1","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\reportWebVitals.js":"2","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\App.js":"3","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Users.js":"4","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\HomePage\\Home.js":"5","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Layouts\\DashboardLayout.js":"6","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Layouts\\PublicLayout.js":"7","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Profile.js":"8","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\store.js":"9","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\AppTabs.js":"10","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\ContentWrapper.js":"11","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\Forum.js":"12","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\rootReducers.js":"13","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\rootSaga.js":"14","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Navigation\\NavBarPublic.js":"15","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Navigation\\NavBar.js":"16","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Projects.js":"17","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Skills.js":"18","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Reviews.js":"19","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\HomePage\\HomeFeature.js":"20","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\ForumLayout.js":"21","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\AppTitles.js":"22","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\HomePage\\HomeBanner.js":"23","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\SectionDivider.js":"24","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\ForumPageHeaderSelections.js":"25","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Authenticate\\actions.js":"26","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Authenticate\\reducer.js":"27","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Authenticate\\saga.js":"28","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Forum\\saga.js":"29","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Forum\\reducer.js":"30","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Forum\\actions.js":"31","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\AppTexts.js":"32","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\useWindowSize.js":"33","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\Buttons.js":"34","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\Config\\axiosClient.js":"35","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\MultipleSelects.js":"36","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\Config\\constants.js":"37","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\LoginPage.js":"38","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\RegisterPage.js":"39","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\RegisterForm.js":"40","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\LoginForm.js":"41","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\Message.js":"42","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\MessagesLayout.js":"43","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\ForumPage.js":"44","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\MessagesPage.js":"45","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\Search.js":"46","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\Recommendations.js":"47","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\Feeds.js":"48","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPageHeaderExtras.js":"49","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\UserDetails.js":"50","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\ViewWrapper.js":"51","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\UserMessager.js":"52","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\ViewWrapper.js":"53","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\Feed.js":"54","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPhRecomExtras.js":"55","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPhFeedsExtras.js":"56","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPhSearchExtras.js":"57","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\getTruncatedName.js":"58","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\MessagePreview.js":"59","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\Editor.js":"60","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\CommentsWrapper.js":"61","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\SingleSelect.js":"62","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\CommentsContainer.js":"63","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\EditProfileModal.js":"64","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\ProjectCard.js":"65","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\ProjectModal.js":"66","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\colorGenerator.js":"67","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\RecommProjects.js":"68","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\RecommM&M.js":"69","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\UserModal.js":"70","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\UserCard.js":"71","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\ProjectCard.js":"72","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Profile\\reducer.js":"73","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Profile\\saga.js":"74","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Profile\\actions.js":"75","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\utils\\ViewWrapper.js":"76","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\SearchSelector.js":"77","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\sorter.js":"78","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\searcher.js":"79","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Messages\\actions.js":"80","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Messages\\reducer.js":"81","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Messages\\saga.js":"82","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\useInterval.js":"83","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\capitalize.js":"84","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\date.js":"85","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\AddProjectModal.js":"86","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\MessageSearchSelect.js":"87","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Skills2.js":"88","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\utils\\multiSelector.js":"89","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\utils\\skillsList.js":"90","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\Comment.js":"91"},{"size":747,"mtime":1627100394196,"results":"92","hashOfConfig":"93"},{"size":362,"mtime":1624955552165,"results":"94","hashOfConfig":"93"},{"size":3375,"mtime":1628495672543,"results":"95","hashOfConfig":"93"},{"size":69,"mtime":1624955552165,"results":"96","hashOfConfig":"93"},{"size":3096,"mtime":1628396497054,"results":"97","hashOfConfig":"93"},{"size":1718,"mtime":1628495672567,"results":"98","hashOfConfig":"93"},{"size":1752,"mtime":1628495672568,"results":"99","hashOfConfig":"93"},{"size":8298,"mtime":1628583341828,"results":"100","hashOfConfig":"93"},{"size":647,"mtime":1624955552165,"results":"101","hashOfConfig":"93"},{"size":874,"mtime":1628517814104,"results":"102","hashOfConfig":"93"},{"size":154,"mtime":1625324642415,"results":"103","hashOfConfig":"93"},{"size":286,"mtime":1628495672549,"results":"104","hashOfConfig":"93"},{"size":456,"mtime":1628396497108,"results":"105","hashOfConfig":"93"},{"size":430,"mtime":1628404291156,"results":"106","hashOfConfig":"93"},{"size":1417,"mtime":1628495672572,"results":"107","hashOfConfig":"93"},{"size":2306,"mtime":1628396497063,"results":"108","hashOfConfig":"93"},{"size":4042,"mtime":1628519709845,"results":"109","hashOfConfig":"93"},{"size":2478,"mtime":1628519680087,"results":"110","hashOfConfig":"93"},{"size":5900,"mtime":1628521252229,"results":"111","hashOfConfig":"93"},{"size":2895,"mtime":1628396497056,"results":"112","hashOfConfig":"93"},{"size":3038,"mtime":1628495694291,"results":"113","hashOfConfig":"93"},{"size":370,"mtime":1628396497079,"results":"114","hashOfConfig":"93"},{"size":2309,"mtime":1628396497054,"results":"115","hashOfConfig":"93"},{"size":180,"mtime":1625324642426,"results":"116","hashOfConfig":"93"},{"size":7551,"mtime":1628396497040,"results":"117","hashOfConfig":"93"},{"size":257,"mtime":1627104723051,"results":"118","hashOfConfig":"93"},{"size":1639,"mtime":1628396497098,"results":"119","hashOfConfig":"93"},{"size":1839,"mtime":1628396497099,"results":"120","hashOfConfig":"93"},{"size":5043,"mtime":1628396497102,"results":"121","hashOfConfig":"93"},{"size":4219,"mtime":1628500720983,"results":"122","hashOfConfig":"93"},{"size":1327,"mtime":1628396497100,"results":"123","hashOfConfig":"93"},{"size":370,"mtime":1627100394193,"results":"124","hashOfConfig":"93"},{"size":1001,"mtime":1625386171079,"results":"125","hashOfConfig":"93"},{"size":445,"mtime":1625386171080,"results":"126","hashOfConfig":"93"},{"size":926,"mtime":1628396497027,"results":"127","hashOfConfig":"93"},{"size":459,"mtime":1625403819675,"results":"128","hashOfConfig":"93"},{"size":280,"mtime":1627100394123,"results":"129","hashOfConfig":"93"},{"size":696,"mtime":1628495672547,"results":"130","hashOfConfig":"93"},{"size":753,"mtime":1628495672548,"results":"131","hashOfConfig":"93"},{"size":3866,"mtime":1627723821720,"results":"132","hashOfConfig":"93"},{"size":2745,"mtime":1628495672546,"results":"133","hashOfConfig":"93"},{"size":164,"mtime":1627100394177,"results":"134","hashOfConfig":"93"},{"size":266,"mtime":1627100394177,"results":"135","hashOfConfig":"93"},{"size":610,"mtime":1628495672551,"results":"136","hashOfConfig":"93"},{"size":7808,"mtime":1628495694308,"results":"137","hashOfConfig":"93"},{"size":6120,"mtime":1628505516834,"results":"138","hashOfConfig":"93"},{"size":6555,"mtime":1628495694297,"results":"139","hashOfConfig":"93"},{"size":5219,"mtime":1628495694296,"results":"140","hashOfConfig":"93"},{"size":698,"mtime":1628396497041,"results":"141","hashOfConfig":"93"},{"size":789,"mtime":1628396497057,"results":"142","hashOfConfig":"93"},{"size":568,"mtime":1628396497062,"results":"143","hashOfConfig":"93"},{"size":3685,"mtime":1628495694310,"results":"144","hashOfConfig":"93"},{"size":637,"mtime":1628495672566,"results":"145","hashOfConfig":"93"},{"size":4416,"mtime":1628584225309,"results":"146","hashOfConfig":"93"},{"size":1716,"mtime":1628495694293,"results":"147","hashOfConfig":"93"},{"size":2315,"mtime":1628495694292,"results":"148","hashOfConfig":"93"},{"size":1358,"mtime":1628495694294,"results":"149","hashOfConfig":"93"},{"size":294,"mtime":1628396497075,"results":"150","hashOfConfig":"93"},{"size":1759,"mtime":1628396497060,"results":"151","hashOfConfig":"93"},{"size":1067,"mtime":1628399795561,"results":"152","hashOfConfig":"93"},{"size":277,"mtime":1628396497080,"results":"153","hashOfConfig":"93"},{"size":353,"mtime":1627100394195,"results":"154","hashOfConfig":"93"},{"size":3592,"mtime":1628585025047,"results":"155","hashOfConfig":"93"},{"size":6823,"mtime":1628520257473,"results":"156","hashOfConfig":"93"},{"size":2238,"mtime":1628495694313,"results":"157","hashOfConfig":"93"},{"size":6424,"mtime":1628500199892,"results":"158","hashOfConfig":"93"},{"size":595,"mtime":1628396497074,"results":"159","hashOfConfig":"93"},{"size":1984,"mtime":1628495694304,"results":"160","hashOfConfig":"93"},{"size":2591,"mtime":1628495694301,"results":"161","hashOfConfig":"93"},{"size":620,"mtime":1628585129111,"results":"162","hashOfConfig":"93"},{"size":2531,"mtime":1628495694307,"results":"163","hashOfConfig":"93"},{"size":1805,"mtime":1628495672562,"results":"164","hashOfConfig":"93"},{"size":2673,"mtime":1628510784239,"results":"165","hashOfConfig":"93"},{"size":9130,"mtime":1628521064691,"results":"166","hashOfConfig":"93"},{"size":2346,"mtime":1628495694330,"results":"167","hashOfConfig":"93"},{"size":637,"mtime":1628409951946,"results":"168","hashOfConfig":"93"},{"size":1309,"mtime":1628511542647,"results":"169","hashOfConfig":"93"},{"size":708,"mtime":1628505323890,"results":"170","hashOfConfig":"93"},{"size":484,"mtime":1628495694320,"results":"171","hashOfConfig":"93"},{"size":500,"mtime":1628495694326,"results":"172","hashOfConfig":"93"},{"size":1719,"mtime":1628495694327,"results":"173","hashOfConfig":"93"},{"size":2096,"mtime":1628511086682,"results":"174","hashOfConfig":"93"},{"size":469,"mtime":1628495694321,"results":"175","hashOfConfig":"93"},{"size":123,"mtime":1628495694319,"results":"176","hashOfConfig":"93"},{"size":218,"mtime":1628398336964,"results":"177","hashOfConfig":"93"},{"size":6789,"mtime":1628399671244,"results":"178","hashOfConfig":"93"},{"size":2616,"mtime":1628495694323,"results":"179","hashOfConfig":"93"},{"size":1300,"mtime":1628517192932,"results":"180","hashOfConfig":"93"},{"size":2839,"mtime":1628519335825,"results":"181","hashOfConfig":"93"},{"size":874,"mtime":1628517688592,"results":"182","hashOfConfig":"93"},{"size":2208,"mtime":1628585118158,"results":"183","hashOfConfig":"93"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},"1ibh079",{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"186"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"186"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"186"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"186"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"186"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"186"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"186"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"186"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"186"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"186"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"186"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"186"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"186"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"186"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"186"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\index.js",[],["383","384"],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\reportWebVitals.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\App.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Users.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\HomePage\\Home.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Layouts\\DashboardLayout.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Layouts\\PublicLayout.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Profile.js",["385","386","387","388","389","390"],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\store.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\AppTabs.js",["391"],"import React from 'react';\r\nimport { Tabs } from 'antd';\r\nimport Projects from './Projects';\r\nimport Skills2 from './Skills2';\r\nimport Skills from './Skills';\r\nimport Reviews from './Reviews';\r\n\r\nfunction AppTabs({ user_id }) {\r\n  const { TabPane } = Tabs;\r\n\r\n  const tabStyle = {\r\n    margin: 'auto',\r\n    padding: '2%',\r\n    width: '75%',\r\n  };\r\n\r\n  return (\r\n    <Tabs className='profile-tabs' defaultActiveKey='1' size='large' centered>\r\n      <TabPane tab='Projects' key='1' style={tabStyle}>\r\n        <Projects user_id={user_id} />\r\n      </TabPane>\r\n      {!user_id ? (\r\n        <TabPane tab='Skills' key='2' style={tabStyle}>\r\n          <Skills user_id={user_id} />\r\n        </TabPane>\r\n      ) : null}\r\n      <TabPane tab='Reviews' key='3' style={tabStyle}>\r\n        <Reviews user_id={user_id} />\r\n      </TabPane>\r\n    </Tabs>\r\n  );\r\n}\r\n\r\nexport default AppTabs;\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\ContentWrapper.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\Forum.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\rootReducers.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\rootSaga.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Navigation\\NavBarPublic.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Navigation\\NavBar.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Projects.js",["392","393"],"import React, { useEffect, useState } from 'react';\r\nimport { Row, PageHeader, Button, Empty } from 'antd';\r\nimport ProjectCard from './ProjectCard';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport ProjectModal from './ProjectModal';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from 'redux/Profile/actions';\r\nimport AddProjectModal from './AddProjectModal';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport Buttons from 'components/utils/Buttons';\r\n\r\nfunction Projects({ user_id }) {\r\n  const dispatch = useDispatch();\r\n  const [projectId, setProjectId] = useState('');\r\n  const [isProjectModalVisible, setIsProjectModalVisible] = useState(false);\r\n  const [data, setData] = useState(null);\r\n  const [isAddProjectModalVisible, setIsAddProjectModalVisible] =\r\n    useState(false);\r\n  const [itemsArray, setItemsArray] = useState([1, 2, 3]);\r\n  const [hasMoreContents, setHasMoreContents] = useState(true);\r\n\r\n  const { userProjectList, userProjectListTemp } = useSelector(\r\n    (state) => state.profileReducer,\r\n  );\r\n  const { userId } = useSelector((state) => state.authenticateReducer);\r\n\r\n  useEffect(() => {\r\n    user_id\r\n      ? dispatch({\r\n          type: actions.GETTEMPUSERPROJECTS,\r\n          payload: {\r\n            user_id: user_id,\r\n          },\r\n        })\r\n      : dispatch({\r\n          type: actions.GETUSERPROJECTS,\r\n          payload: {\r\n            user_id: userId,\r\n          },\r\n        });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user_id) {\r\n      setData(userProjectListTemp[user_id]);\r\n    } else {\r\n      setData(userProjectList);\r\n    }\r\n    return () => {};\r\n  }, [userProjectListTemp, userProjectList, user_id]);\r\n\r\n  const openProjectModel = (projectId) => {\r\n    setProjectId(projectId);\r\n    setIsProjectModalVisible(true);\r\n  };\r\n\r\n  const openAddProjectModel = () => {\r\n    // setUserId(UserId);\r\n    setIsAddProjectModalVisible(true);\r\n  };\r\n\r\n  const handleProjectModalCancel = () => {\r\n    setIsProjectModalVisible(false);\r\n  };\r\n\r\n  const handleAddProjectModalCancel = () => {\r\n    setIsAddProjectModalVisible(false);\r\n  };\r\n\r\n  const fetchMoreProjects = () => {\r\n    let temp_arr;\r\n    temp_arr = [...itemsArray, 1];\r\n    setItemsArray(temp_arr);\r\n    if (temp_arr.length === 15) {\r\n      setHasMoreContents(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ProjectModal\r\n        isProjectModalVisible={isProjectModalVisible}\r\n        projectId={projectId}\r\n        handleProjectModalCancel={handleProjectModalCancel}\r\n      />\r\n      <AddProjectModal\r\n        isAddProjectModalVisible={isAddProjectModalVisible}\r\n        handleAddProjectModalCancel={handleAddProjectModalCancel}\r\n      />\r\n      <PageHeader\r\n        className='forum-page-header'\r\n        title='Projects'\r\n        extra={\r\n          user_id === undefined\r\n            ? [\r\n                <Button\r\n                  type='primary'\r\n                  shape='round'\r\n                  icon={<PlusOutlined />}\r\n                  disabled={user_id !== undefined ? true : false}\r\n                  onClick={() => openAddProjectModel()}\r\n                >\r\n                  Add project\r\n                </Button>,\r\n              ]\r\n            : []\r\n        }\r\n      ></PageHeader>\r\n      {data?.length > 0 ? (\r\n        <InfiniteScroll\r\n          hasMore={hasMoreContents}\r\n          initialLoad={false}\r\n          pageStart={1}\r\n          loadMore={() => fetchMoreProjects()}\r\n          threshold={1}\r\n        >\r\n          <Row gutter={[16, 16]}>\r\n            {data?.map((i, index) => (\r\n              <ProjectCard\r\n                key={index}\r\n                project_data={i}\r\n                openProjectModel={openProjectModel}\r\n              />\r\n            ))}\r\n          </Row>\r\n        </InfiniteScroll>\r\n      ) : (\r\n        <Empty\r\n          image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n          imageStyle={{\r\n            height: 60,\r\n          }}\r\n          description={<span>No Projects yet</span>}\r\n        ></Empty>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Skills.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Reviews.js",["394"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  Row,\r\n  Col,\r\n  List,\r\n  Avatar,\r\n  Button,\r\n  Rate,\r\n  Input,\r\n  PageHeader,\r\n  Empty,\r\n} from 'antd';\r\nimport actions from 'redux/Profile/actions';\r\nimport {\r\n  UserOutlined,\r\n  PlusOutlined,\r\n  CloseCircleOutlined,\r\n  SendOutlined,\r\n} from '@ant-design/icons';\r\nimport Buttons from '../utils/Buttons';\r\nimport ViewWrapper from 'components/Forum/contentPage/utils/ViewWrapper';\r\nimport { getRandomColor } from '../tools/colorGenerator';\r\n\r\nfunction Reviews({ user_id }) {\r\n  const { TextArea } = Input;\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState(null);\r\n\r\n  const { userReviewsList, userReviewsListTemp } = useSelector(\r\n    (state) => state.profileReducer,\r\n  );\r\n  const { userId } = useSelector((state) => state.authenticateReducer);\r\n  const [newReviewToggle, setNewReviewToggle] = useState(false);\r\n  const [rateUser, setRateUser] = useState(0);\r\n  const [addReview, setAddReview] = useState('');\r\n\r\n  useEffect(() => {\r\n    user_id\r\n      ? dispatch({\r\n          type: actions.GETTEMPUSERREVIEWS,\r\n          payload: {\r\n            user_id: user_id,\r\n          },\r\n        })\r\n      : dispatch({\r\n          type: actions.GETUSERREVIEWS,\r\n          payload: {\r\n            user_id: userId,\r\n          },\r\n        });\r\n  }, []);\r\n  useEffect(() => {\r\n    if (user_id) {\r\n      setData(userReviewsListTemp[user_id]);\r\n    } else {\r\n      setData(userReviewsList);\r\n    }\r\n    return () => {};\r\n  }, [userReviewsList, userReviewsListTemp, user_id]);\r\n  const toggleNewReview = () => {\r\n    setNewReviewToggle(!newReviewToggle);\r\n  };\r\n\r\n  function addReviewFunc(value) {\r\n    setAddReview(value);\r\n  }\r\n\r\n  const rateUserFunc = (value) => {\r\n    setRateUser(value);\r\n  };\r\n\r\n  const submitReview = () => {\r\n    dispatch({\r\n      type: actions.ADDUSERREVIEW,\r\n      payload: {\r\n        fromuserID: Number(userId),\r\n        rating: rateUser,\r\n        review: addReview,\r\n        toUserID: Number(user_id),\r\n      },\r\n    });\r\n    setData(userReviewsListTemp[user_id]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        className='forum-page-header'\r\n        title='Reviews'\r\n        extra={\r\n          user_id !== undefined\r\n            ? [\r\n                <Button\r\n                  type='primary'\r\n                  shape='round'\r\n                  icon={<PlusOutlined />}\r\n                  content='New Review'\r\n                  onClick={toggleNewReview}\r\n                  disabled={user_id === undefined ? true : false}\r\n                >\r\n                  Add/Update\r\n                </Button>,\r\n              ]\r\n            : []\r\n        }\r\n      ></PageHeader>\r\n      {newReviewToggle && (\r\n        <ViewWrapper>\r\n          <List className='feed-list-wrapper'>\r\n            <List.Item>Add a Review</List.Item>\r\n            <List.Item>\r\n              <TextArea\r\n                placeholder='Add review here!'\r\n                onChange={(e) => addReviewFunc(e.target.value)}\r\n                rows={4}\r\n              />\r\n            </List.Item>\r\n            <List.Item>\r\n              <Rate defaultValue={0} onChange={rateUserFunc} />\r\n            </List.Item>\r\n            <List.Item\r\n              key='new review'\r\n              className='feed-list-item'\r\n              actions={[\r\n                <Buttons\r\n                  type='primary'\r\n                  shape='round'\r\n                  icon={<CloseCircleOutlined />}\r\n                  content='Close'\r\n                  handleClick={toggleNewReview}\r\n                />,\r\n                <Buttons\r\n                  type='primary'\r\n                  shape='round'\r\n                  icon={<SendOutlined />}\r\n                  content='Add Review'\r\n                  handleClick={submitReview}\r\n                />,\r\n              ]}\r\n            ></List.Item>\r\n          </List>\r\n        </ViewWrapper>\r\n      )}\r\n      {data && data?.length !== 0 ? (\r\n        <List\r\n          className='demo-loadmore-list'\r\n          style={{ minHeight: '350px' }}\r\n          itemLayout='horizontal'\r\n          dataSource={data || []}\r\n          renderItem={(item) => (\r\n            <div className='list-card'>\r\n              <Row className='feedback-itam'>\r\n                <Col span={22}>\r\n                  <List.Item.Meta\r\n                    avatar={\r\n                      <Avatar\r\n                        style={{\r\n                          backgroundColor: getRandomColor(item.first_name),\r\n                        }}\r\n                        size={50}\r\n                        icon={<UserOutlined />}\r\n                      />\r\n                    }\r\n                    title={`${item.first_name} ${item.last_name}`}\r\n                    description={item.user_title}\r\n                  />\r\n                  <div\r\n                    style={{\r\n                      paddingLeft: '65px',\r\n                      marginTop: '2px',\r\n                      marginBottom: '10px',\r\n                    }}\r\n                  >\r\n                    <Rate\r\n                      key={item.rating}\r\n                      defaultValue={item.rating}\r\n                      disabled\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      paddingLeft: '65px',\r\n                      marginTop: '2px',\r\n                      marginBottom: '10px',\r\n                    }}\r\n                  >\r\n                    {item.review_text}\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          )}\r\n        />\r\n      ) : (\r\n        <Empty\r\n          image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n          imageStyle={{\r\n            height: 60,\r\n          }}\r\n          description={<span>No reviews yet</span>}\r\n        ></Empty>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Reviews;\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\HomePage\\HomeFeature.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\ForumLayout.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\AppTitles.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\HomePage\\HomeBanner.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\SectionDivider.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\ForumPageHeaderSelections.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Authenticate\\actions.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Authenticate\\reducer.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Authenticate\\saga.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Forum\\saga.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Forum\\reducer.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Forum\\actions.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\AppTexts.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\useWindowSize.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\Buttons.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\Config\\axiosClient.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\MultipleSelects.js",[],["395","396"],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\Config\\constants.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\LoginPage.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\RegisterPage.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\RegisterForm.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\LoginForm.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\Message.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\MessagesLayout.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\ForumPage.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\MessagesPage.js",["397","398","399"],"import React, { useState, useEffect } from 'react';\r\nimport { Layout, Menu, Tooltip, Avatar, Empty } from 'antd';\r\nimport UserDetails from './UserDetails';\r\nimport UserMessager from './utils/UserMessager';\r\nimport { truncateName } from 'components/tools/getTruncatedName';\r\nimport { getRandomColor } from 'components/tools/colorGenerator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport actions from 'redux/Messages/actions';\r\nimport { useInterval } from 'components/tools/useInterval';\r\nimport logoimg from 'assets/logo/medium.png';\r\nimport AppTexts from 'components/utils/AppTexts';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { getRequest } from 'Config/axiosClient';\r\nimport MessageSearchSelect from 'components/utils/MessageSearchSelect';\r\n\r\nconst { Content, Sider } = Layout;\r\nexport default function MessagesPage() {\r\n  const { userId } = useSelector((state) => state.authenticateReducer);\r\n  const { contacts, allUsers, tempContact } = useSelector(\r\n    (state) => state.messageReducer,\r\n  );\r\n  const { profileData } = useSelector((state) => state.profileReducer);\r\n  const dispatch = useDispatch();\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  let contactData = [];\r\n  const [activeContact, setActiveContact] = useState(contacts?.[0]);\r\n  const [selectedAcontact, setSelectedAcontact] = useState(contacts?.[0]);\r\n\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    console.log(location.pathname); // result: '/secondpage'\r\n    console.log(location.search); // result: '?query=abc'\r\n    console.log(location?.state?.userId); // result: 'some_value'\r\n  }, [location]);\r\n  useEffect(() => {\r\n    setSelectedAcontact(activeContact?.user_id);\r\n    return () => {};\r\n  }, [activeContact]);\r\n\r\n  useEffect(() => {\r\n    let existingUsers = [...contacts, ...tempContact].map(\r\n      (contact) => contact.user_id,\r\n    );\r\n    let nonExiting = tempContact.filter(\r\n      (data) => !existingUsers.includes(data.user_id),\r\n    );\r\n    dispatch({\r\n      type: actions.FORCEUPDATE,\r\n      payload: { item: 'tempContact', value: nonExiting },\r\n    });\r\n    var id = `U_${location?.state?.userId}`;\r\n\r\n    if (id) {\r\n      console.log('Had Loca ID', id);\r\n      let existingUsers = [...contacts, ...tempContact].map(\r\n        (contact) => contact.user_id,\r\n      );\r\n      if (existingUsers.includes(id)) {\r\n        var user = [...contacts, ...tempContact].filter((item) => {\r\n          return item.user_id === id;\r\n        });\r\n        console.log(user);\r\n        setActiveContact(user[0]);\r\n        setSelectedAcontact(user[0].user_id);\r\n      } else {\r\n        var user = allUsers.filter((item) => {\r\n          return item.user_id === id;\r\n        });\r\n        dispatch({\r\n          type: actions.FORCEUPDATE,\r\n          payload: { item: 'tempContact', value: [...tempContact, ...user] },\r\n        });\r\n        console.log('new user', user);\r\n        setActiveContact(user[0]);\r\n        setSelectedAcontact(user[0]?.user_id);\r\n      }\r\n\r\n      // setdata(nonExiting);\r\n      // setFilteredData(nonExiting);\r\n    }\r\n    return () => {};\r\n  }, [contacts]);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: actions.GETCONTACTS,\r\n      userId: userId,\r\n    });\r\n    const response = getRequest('user/name_list/');\r\n    response.then((res) => {\r\n      dispatch({\r\n        type: actions.FORCEUPDATE,\r\n        payload: { item: 'allUsers', value: res.data.data },\r\n      });\r\n    });\r\n    return () => {};\r\n  }, []);\r\n  useInterval(() => {\r\n    // put your interval code here.\r\n    dispatch({\r\n      type: actions.GETCONTACTS,\r\n      userId: userId,\r\n    });\r\n    return () => {};\r\n  }, 1000 * 1);\r\n\r\n  const onCollapse = (collapsed) => {\r\n    setCollapsed(collapsed);\r\n  };\r\n  const onCollapseToggle = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n  const onContactSelect = (user) => {\r\n    if (user?.user_id) {\r\n      // let selectedContact = [...contacts, ...tempContact].filter(\r\n      //   (contact) => contact?.user_id === id,\r\n      // );\r\n      // console.log(selectedContact[0]);\r\n      setActiveContact(user);\r\n      setSelectedAcontact(user?.user_id);\r\n    }\r\n  };\r\n  const onMenuSelect = (id) => {\r\n    let selectedContact = [...contacts, ...tempContact].filter(\r\n      (contact) => contact?.user_id === id,\r\n    );\r\n    console.log(selectedContact);\r\n    setActiveContact(selectedContact[0]);\r\n    setSelectedAcontact(selectedContact?.user_id);\r\n    // }\r\n  };\r\n  contactData = [...contacts, ...tempContact];\r\n  console.log(activeContact);\r\n  return (\r\n    <div className='messages-page-wrapper'>\r\n      <Layout>\r\n        <Sider\r\n          collapsed={collapsed}\r\n          onCollapse={onCollapse}\r\n          style={{\r\n            position: 'absolute',\r\n            left: 0,\r\n            zIndex: 999,\r\n          }}\r\n        >\r\n          <UserDetails\r\n            userName={`${profileData?.profile?.first_name}\r\n                ${profileData?.profile?.last_name}`}\r\n          />\r\n          <Menu\r\n            theme='dark'\r\n            mode='inline'\r\n            onSelect={(event) => onMenuSelect(event.key)}\r\n            defaultSelectedKeys={'search'}\r\n            selectedKeys={[selectedAcontact || 'search']}\r\n          >\r\n            <Menu.Item\r\n              key={'search'}\r\n              className='messager-sidebar-menu-item'\r\n              icon={\r\n                <Avatar\r\n                  style={{\r\n                    backgroundColor: getRandomColor('search'),\r\n                  }}\r\n                  className='message-menu-item-avatar'\r\n                  // icon={<UserOutlined />}\r\n                >\r\n                  {truncateName('search users')}\r\n                </Avatar>\r\n              }\r\n            >\r\n              <Tooltip title='Search' placement='right'>\r\n                Search Users\r\n              </Tooltip>\r\n            </Menu.Item>\r\n            {contactData\r\n              ? contactData.map((contact) => (\r\n                  <Menu.Item\r\n                    key={contact?.user_id}\r\n                    className='messager-sidebar-menu-item'\r\n                    icon={\r\n                      <Avatar\r\n                        style={{\r\n                          backgroundColor: getRandomColor(contact?.first_name),\r\n                        }}\r\n                        className='message-menu-item-avatar'\r\n                        // icon={<UserOutlined />}\r\n                      >\r\n                        {truncateName(\r\n                          `${contact?.first_name} ${contact?.last_name}`,\r\n                        )}\r\n                      </Avatar>\r\n                    }\r\n                  >\r\n                    <Tooltip title={contact.first_name} placement='right'>\r\n                      {`${contact?.first_name} ${contact?.last_name}`}\r\n                    </Tooltip>\r\n                  </Menu.Item>\r\n                ))\r\n              : null}\r\n          </Menu>\r\n        </Sider>\r\n        <Layout style={!collapsed ? { marginLeft: 205 } : { marginLeft: 85 }}>\r\n          <Content style={{}}>\r\n            {activeContact ? (\r\n              <UserMessager\r\n                contact={activeContact}\r\n                collapsed={collapsed}\r\n                handleBack={onCollapseToggle}\r\n              />\r\n            ) : (\r\n              <Empty\r\n                className='empty-chat'\r\n                image={logoimg}\r\n                imageStyle={{\r\n                  height: 60,\r\n                }}\r\n                description={\r\n                  <AppTexts\r\n                    className='strong'\r\n                    // content='Please select a contact to start'\r\n                  />\r\n                }\r\n              >\r\n                <MessageSearchSelect setActive={onContactSelect} />\r\n              </Empty>\r\n            )}\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\Search.js",["400","401"],"import React, { useEffect, useState } from 'react';\r\nimport actions from 'redux/Forum/actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { Row, Empty } from 'antd';\r\nimport UserCard from './utils/UserCard';\r\nimport ProjectCard from './utils/ProjectCard';\r\nimport ProjectModal from 'components/Profile/ProjectModal';\r\nimport UserModal from 'components/utils/UserModal';\r\nimport ForumPhSearchExtras from '../HeaderExtras/ForumPhSearchExtras';\r\nimport capitalize from 'components/tools/capitalize';\r\nimport logoimg from 'assets/logo/medium.png';\r\nimport sorter from 'components/tools/sorter';\r\n\r\nexport default function Search() {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState([]);\r\n  const [idForModal, setIdForModal] = useState('');\r\n  const [userIdModal, setUserIdModal] = useState(null);\r\n  const [isUserModalVisible, setIsUserModalVisible] = useState(false);\r\n  const [isProjectModalVisible, setIsProjectModalVisible] = useState(false);\r\n  const { searchData, searchString, searchLoading } = useSelector(\r\n    (state) => state.forumReducer,\r\n  );\r\n  function getDummy() {\r\n    let numberofDummy = 5;\r\n    let dummyData = [];\r\n    for (var i = 0; i < numberofDummy; i++) {\r\n      dummyData.push({ title: `dummy${i}`, loading: true });\r\n    }\r\n    return dummyData;\r\n  }\r\n  const doSearch = () => {\r\n    dispatch({\r\n      type: actions.TOGGLESTATE,\r\n      payload: { label: 'searchLoading', value: true },\r\n    });\r\n    dispatch({\r\n      type: actions.SEARCHFEEDS,\r\n      params: { searchString: searchString },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let results = searchData;\r\n    results = results.filter((result) => result.score > 0);\r\n    setData(results);\r\n    return () => {};\r\n  }, [searchData]);\r\n  // const addMoreFeeds = () => {\r\n  //   setData([...getDummy()]);\r\n  //   doSearch();\r\n  //   return () => {};\r\n  // };\r\n\r\n  const handleMoreDetails = (type, id) => {\r\n    console.log(type, id);\r\n    setIdForModal(id);\r\n    if (type === 'project_id') {\r\n      setIsProjectModalVisible(true);\r\n    } else {\r\n      setUserIdModal(id);\r\n      setIsUserModalVisible(true);\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    setIsProjectModalVisible(false);\r\n    setIsUserModalVisible(false);\r\n  };\r\n  if (data.length > 0) {\r\n    return (\r\n      <>\r\n        <ProjectModal\r\n          isProjectModalVisible={isProjectModalVisible}\r\n          projectId={idForModal}\r\n          handleProjectModalCancel={handleCancel}\r\n        />\r\n        <UserModal\r\n          isModalVisible={isUserModalVisible}\r\n          projectId={idForModal}\r\n          handleCancel={handleCancel}\r\n          userID={userIdModal}\r\n        />\r\n        <InfiniteScroll\r\n          pageStart={0}\r\n          initialLoad={false}\r\n          // loadMore={}\r\n          hasMore={true || false}\r\n          // element={ListWrapper}\r\n          loader={\r\n            <div className='feed-loader-wrapper' key={0}>\r\n              {/* <Space direction='vertical'>\r\n                <Buttons\r\n                  type='primary'\r\n                  loading={searchLoading}\r\n                  handleClick={() => addMoreFeeds()}\r\n                  content={searchLoading ? 'Loading More' : 'Load More'}\r\n                ></Buttons>\r\n              </Space> */}\r\n            </div>\r\n          }\r\n          threshold={100}\r\n        >\r\n          <Row className='search-result-container' gutter={[16, 16]}>\r\n            {sorter(data, 'score', true)?.map((searchResult, index) =>\r\n              !searchResult?.project_id ? (\r\n                <UserCard\r\n                  key={searchResult.title + index}\r\n                  index={index}\r\n                  city={searchResult.city}\r\n                  country={searchResult.country}\r\n                  first_name={capitalize(searchResult.first_name)}\r\n                  last_name={capitalize(searchResult.last_name)}\r\n                  links={searchResult.links}\r\n                  pic={searchResult.pic}\r\n                  score={searchResult.score}\r\n                  state={searchResult.state}\r\n                  title={searchResult.title}\r\n                  user_id={searchResult.user_id}\r\n                  zipcode={searchResult.zipcode}\r\n                  loading={searchLoading}\r\n                  handleClick={handleMoreDetails}\r\n                />\r\n              ) : (\r\n                <ProjectCard\r\n                  key={searchResult.title + index}\r\n                  index={index}\r\n                  project_description={searchResult.project_description}\r\n                  project_id={searchResult.project_id}\r\n                  project_location={searchResult.project_location}\r\n                  project_requirement={searchResult.project_requirement}\r\n                  project_start_date={searchResult.project_start_date}\r\n                  project_title={searchResult.project_title}\r\n                  score={searchResult.score}\r\n                  loading={searchLoading}\r\n                  handleClick={handleMoreDetails}\r\n                />\r\n              ),\r\n            )}\r\n          </Row>\r\n        </InfiniteScroll>\r\n      </>\r\n    );\r\n  } else if (searchLoading) {\r\n    return (\r\n      <Empty\r\n        className='empty-search'\r\n        image={logoimg}\r\n        imageStyle={{\r\n          height: 60,\r\n        }}\r\n        description={<span>Collecting Search Results...</span>}\r\n      ></Empty>\r\n    );\r\n  } else {\r\n    return (\r\n      <Empty\r\n        className='empty-search'\r\n        image={logoimg}\r\n        description={\r\n          searchData.length === 0 ? (\r\n            <div\r\n              style={{ minWidth: '300px', margin: 'auto', marginTop: '50px' }}\r\n            >\r\n              <ForumPhSearchExtras />\r\n            </div>\r\n          ) : (\r\n            <div\r\n              style={{ minWidth: '300px', margin: 'auto', marginTop: '50px' }}\r\n            >\r\n              {' '}\r\n              <span> No matching results found...</span>\r\n            </div>\r\n          )\r\n        }\r\n      >\r\n        {/* <Buttons handleClick={doSearch} content='Retry Search' /> */}\r\n      </Empty>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\Recommendations.js",["402"],"import React, { useEffect, useState } from 'react';\r\nimport actions from 'redux/Forum/actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport RecommMM from './utils/RecommM&M';\r\nimport { Empty, Row } from 'antd';\r\nimport Buttons from 'components/utils/Buttons';\r\nimport RecommProjects from './utils/RecommProjects';\r\nimport ProjectModal from 'components/Profile/ProjectModal';\r\nimport UserModal from 'components/utils/UserModal';\r\nimport capitalize from 'components/tools/capitalize';\r\nimport logoimg from 'assets/logo/medium.png';\r\n\r\nexport default function Recommendations() {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    recommLoading,\r\n    recommselectedtype,\r\n    contentRecommMentees,\r\n    contentRecommMentors,\r\n    contentRecommProjects,\r\n  } = useSelector((state) => state.forumReducer);\r\n  const { userId } = useSelector((state) => state.authenticateReducer);\r\n  const [idForModal, setIdForModal] = useState('');\r\n  const [isUserModalVisible, setIsUserModalVisible] = useState(false);\r\n  const [isProjectModalVisible, setIsProjectModalVisible] = useState(false);\r\n  var displayData = [];\r\n  // function getDummy() {\r\n  //   let numberofDummy = 5;\r\n  //   let dummyData = [];\r\n  //   for (var i = 0; i < numberofDummy; i++) {\r\n  //     dummyData.push({ title: `dummy${i}`, loading: true });\r\n  //   }\r\n  //   return dummyData;\r\n  // }\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: actions.GETRECOMM,\r\n      params: { user_id: userId, recommType: recommselectedtype },\r\n    });\r\n    return () => {};\r\n    //// eslint-disable-next-line\r\n  }, [recommselectedtype, dispatch]);\r\n\r\n  const addMoreRecomm = () => {\r\n    dispatch({\r\n      type: actions.RECOMMLOADING,\r\n      isloading: true,\r\n    });\r\n    switch (recommselectedtype) {\r\n      case 'project':\r\n        dispatch({\r\n          type: actions.ADDRECOMM,\r\n          params: { user_id: userId, recommType: recommselectedtype },\r\n        });\r\n        break;\r\n      case 'mentees':\r\n        dispatch({\r\n          type: actions.ADDRECOMM,\r\n          params: { user_id: userId, recommType: recommselectedtype },\r\n        });\r\n        break;\r\n      case 'mentor':\r\n        dispatch({\r\n          type: actions.ADDRECOMM,\r\n          params: { user_id: userId, recommType: recommselectedtype },\r\n        });\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const handleMoreDetails = (type, id) => {\r\n    console.log(id);\r\n    setIdForModal(id);\r\n    if (type === 'project_id') {\r\n      setIsProjectModalVisible(true);\r\n    } else {\r\n      setIsUserModalVisible(true);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsProjectModalVisible(false);\r\n    setIsUserModalVisible(false);\r\n  };\r\n  if (recommselectedtype === 'project') displayData = contentRecommProjects;\r\n  else if (recommselectedtype === 'mentees') displayData = contentRecommMentees;\r\n  else displayData = contentRecommMentors;\r\n\r\n  if (displayData.length > 0) {\r\n    return (\r\n      <>\r\n        <ProjectModal\r\n          isProjectModalVisible={isProjectModalVisible}\r\n          projectId={idForModal}\r\n          handleProjectModalCancel={handleCancel}\r\n        />\r\n        <UserModal\r\n          isModalVisible={isUserModalVisible}\r\n          userID={idForModal}\r\n          handleCancel={handleCancel}\r\n        />\r\n        <InfiniteScroll\r\n          pageStart={0}\r\n          initialLoad={false}\r\n          // loadMore={() => addMoreRecomm()}\r\n          hasMore={true || false}\r\n          // element={ListWrapper}\r\n          loader={\r\n            <div className='Recomm-loader-wrapper' key={0}>\r\n              {/* <Space direction='vertical'>\r\n                <Buttons\r\n                  type='primary'\r\n                  loading={recommLoading}\r\n                  handleClick={() => addMoreRecomm()}\r\n                  content={recommLoading ? 'Loading More' : 'Load More'}\r\n                ></Buttons>\r\n              </Space> */}\r\n            </div>\r\n          }\r\n          threshold={150}\r\n        >\r\n          <Row className='recommendation-container' gutter={[16, 16]}>\r\n            {displayData.map((recomm, index) =>\r\n              recommselectedtype !== 'project' ? (\r\n                <RecommMM\r\n                  key={recomm?.first_name + index}\r\n                  index={index}\r\n                  city={recomm?.city}\r\n                  country={recomm?.country}\r\n                  profilePicLink={recomm?.profile_link}\r\n                  firstName={capitalize(recomm?.first_name)}\r\n                  lastName={capitalize(recomm?.last_name)}\r\n                  email={recomm?.email}\r\n                  user_id={recomm?.user_id}\r\n                  skills={recomm?.skill_name}\r\n                  loading={recomm?.loading}\r\n                  userType={recomm?.user_type}\r\n                  handleClick={handleMoreDetails}\r\n                />\r\n              ) : (\r\n                <RecommProjects\r\n                  index={index}\r\n                  key={recomm?.first_name + index}\r\n                  projectTitle={recomm?.title}\r\n                  firstName={capitalize(recomm?.first_name)}\r\n                  lastName={capitalize(recomm?.last_name)}\r\n                  projectDescription={recomm?.description}\r\n                  email={recomm?.email}\r\n                  projectStatus={recomm?.status}\r\n                  user_id={recomm?.user_id}\r\n                  project_id={recomm?.project_id}\r\n                  loading={recomm?.loading}\r\n                  userType={recomm?.user_type}\r\n                  location={recomm?.location}\r\n                  startDate={recomm?.start_date}\r\n                  skills={recomm?.skill_name}\r\n                  handleClick={handleMoreDetails}\r\n                />\r\n              ),\r\n            )}\r\n          </Row>\r\n        </InfiniteScroll>\r\n      </>\r\n    );\r\n  } else if (recommLoading) {\r\n    return (\r\n      <Empty\r\n        className='empty-search'\r\n        image={logoimg}\r\n        imageStyle={{\r\n          height: 60,\r\n        }}\r\n        description={<span>Collecting Recommendations...</span>}\r\n      >\r\n        {contentRecommMentors}\r\n        {contentRecommMentees}\r\n        {contentRecommProjects}\r\n      </Empty>\r\n    );\r\n  } else {\r\n    return (\r\n      <Empty\r\n        className='empty-search'\r\n        image={logoimg}\r\n        imageStyle={{\r\n          height: 60,\r\n        }}\r\n        description={<span>Waiting for Recommendations...</span>}\r\n      >\r\n        <Buttons handleClick={addMoreRecomm} content='Retry loading Recomm' />\r\n      </Empty>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\Feeds.js",["403","404","405"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport actions from 'redux/Forum/actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport Feed from './utils/Feed';\r\nimport searcher from 'components/tools/searcher';\r\nimport { Space, Empty } from 'antd';\r\nimport Buttons from 'components/utils/Buttons';\r\nimport ProjectModal from 'components/Profile/ProjectModal';\r\nimport sorter from 'components/tools/sorter';\r\nimport capitalize from 'components/tools/capitalize';\r\n\r\nexport default function Feeds() {\r\n  const dispatch = useDispatch();\r\n  const { contentFeeds, feedLoading, feedSortBy, feedSearchString } =\r\n    useSelector((state) => state.forumReducer);\r\n  let currentContentFeed = useRef(contentFeeds);\r\n  const [data, setData] = useState([]);\r\n  const [idForModal, setIdForModal] = useState('');\r\n  const [isUserModalVisible, setIsUserModalVisible] = useState(false);\r\n  const [isProjectModalVisible, setIsProjectModalVisible] = useState(false);\r\n  const handleMoreDetails = (type, id) => {\r\n    setIdForModal(id);\r\n    if (type === 'project_id') {\r\n      setIsProjectModalVisible(true);\r\n    } else {\r\n      setIsUserModalVisible(true);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsProjectModalVisible(false);\r\n    setIsUserModalVisible(false);\r\n  };\r\n  function getDummy() {\r\n    let numberofDummy = 5;\r\n    let dummyData = [];\r\n    for (var i = 0; i < numberofDummy; i++) {\r\n      dummyData.push({ title: `dummy${i}`, loading: true });\r\n    }\r\n    return dummyData;\r\n  }\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    // eslint-disable-next-line\r\n    setData([...currentContentFeed.current, ...getDummy()]);\r\n    dispatch({\r\n      type: actions.GETFEEDS,\r\n      params: { filters: [], type: [] },\r\n    });\r\n    return () => {};\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    let sortedContent = sorter([...contentFeeds], feedSortBy);\r\n\r\n    setData(sortedContent);\r\n    return () => {};\r\n  }, [contentFeeds]);\r\n  useEffect(() => {\r\n    let filteredContent = searcher(\r\n      feedSearchString,\r\n      [...contentFeeds],\r\n      ['title'],\r\n    );\r\n    let sortedContent = sorter([...filteredContent], feedSortBy);\r\n    setData(sortedContent);\r\n    return () => {};\r\n  }, [feedSortBy, feedSearchString]);\r\n\r\n  const addMoreFeeds = () => {\r\n    // dispatch({\r\n    //   type: actions.FEEDLOADING,\r\n    //   isloading: true,\r\n    // });\r\n    // setData([...data, ...getDummy()]);\r\n    // dispatch({\r\n    //   type: actions.ADDFEEDS,\r\n    //   params: { filters: [], type: [] },\r\n    // });\r\n  };\r\n  if (data.length > 0) {\r\n    return (\r\n      <>\r\n        <ProjectModal\r\n          isProjectModalVisible={isProjectModalVisible}\r\n          projectId={idForModal}\r\n          handleProjectModalCancel={handleCancel}\r\n        />\r\n        <InfiniteScroll\r\n          pageStart={0}\r\n          initialLoad={false}\r\n          loadMore={() => addMoreFeeds()}\r\n          hasMore={true || false}\r\n          // element={ListWrapper}\r\n          loader={\r\n            <div className='feed-loader-wrapper' key={0}>\r\n              {/* <Space direction='vertical'>\r\n                <Buttons\r\n                  type='primary'\r\n                  loading={feedLoading}\r\n                  handleClick={() => addMoreFeeds()}\r\n                  content={feedLoading ? 'Loading More' : 'Load More'}\r\n                ></Buttons>\r\n              </Space> */}\r\n            </div>\r\n          }\r\n          threshold={100}\r\n        >\r\n          <Space size={10} className='full-wide' direction='vertical'>\r\n            {data.map((feed, index) => {\r\n              console.log(feed);\r\n              return (\r\n                <Feed\r\n                  key={feed.post_id}\r\n                  index={index}\r\n                  project_id={feed.project_id}\r\n                  firstName={capitalize(feed.first_name)}\r\n                  lastName={capitalize(feed.last_name)}\r\n                  title={feed.title || 'Default Post Title'}\r\n                  description={feed.content}\r\n                  lastModified={feed.last_modified}\r\n                  createdAt={feed.timestamp}\r\n                  postOwner={feed.user_id}\r\n                  commentCount={feed.comments?.length || 0}\r\n                  comments={feed.comments}\r\n                  loading={feed?.loading}\r\n                  postId={feed.post_id}\r\n                  userId={feed.user_id}\r\n                  handleClick={handleMoreDetails}\r\n                />\r\n              );\r\n            })}\r\n          </Space>\r\n        </InfiniteScroll>\r\n      </>\r\n    );\r\n  } else if (feedLoading) {\r\n    return (\r\n      <Empty\r\n        image='https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg'\r\n        imageStyle={{\r\n          height: 60,\r\n        }}\r\n        description={<span>Collecting Feeds...</span>}\r\n      ></Empty>\r\n    );\r\n  } else {\r\n    return (\r\n      <Empty\r\n        image='https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg'\r\n        imageStyle={{\r\n          height: 60,\r\n        }}\r\n        description={<span>No Feeds...</span>}\r\n      >\r\n        <Buttons handleClick={addMoreFeeds} content='Retry loading feeds' />\r\n      </Empty>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPageHeaderExtras.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\UserDetails.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\ViewWrapper.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\UserMessager.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\ViewWrapper.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\Feed.js",["406","407"],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPhRecomExtras.js",["408"],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport actions from 'redux/Forum/actions';\r\nimport SingleSelect from 'components/utils/SingleSelect';\r\nimport { Space, Row } from 'antd';\r\n\r\nconst optionsType = [\r\n  { value: 'mentor', label: 'Mentors' },\r\n  { value: 'mentees', label: 'Mentees' },\r\n  { value: 'project', label: 'Projects' },\r\n];\r\nexport default function ForumPhRecomExtras() {\r\n  const dispatch = useDispatch();\r\n  const { recommselectedtype, loader } = useSelector(\r\n    (state) => state.forumReducer,\r\n  );\r\n  const onValueChangeTypes = (values) => {\r\n    dispatch({\r\n      type: actions.UPDATERECOMTYPES,\r\n      payload: { recommendationsselectedtypes: values },\r\n    });\r\n  };\r\n  // const toggleLoading = () => {\r\n  //   dispatch({\r\n  //     type: actions.TOGGLELOADING,\r\n  //     payload: { loader: !loader },\r\n  //   });\r\n  // };\r\n  return (\r\n    <Row\r\n      lg={20}\r\n      md={20}\r\n      sm={20}\r\n      xs={22}\r\n      justify='space-between'\r\n      align='middle'\r\n      className='forum-page-header-extra-wrapper'\r\n    >\r\n      <Space className='forum-page-header-extra-spacer'>\r\n        <SingleSelect\r\n          defaultValue={recommselectedtype}\r\n          selectOptions={optionsType}\r\n          placeholder='Select Types'\r\n          handleChange={(values) => onValueChangeTypes(values)}\r\n          // tagRender={() => <>{null}</>}\r\n          className='multiselect forum-recom-type-select'\r\n        />\r\n        {/* <Buttons\r\n          type='primary'\r\n          shape='round'\r\n          icon={<SearchOutlined />}\r\n          content='Get Recommendations'\r\n          handleClick={() => toggleLoading()}\r\n        /> */}\r\n      </Space>\r\n    </Row>\r\n  );\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPhFeedsExtras.js",["409","410"],"import React from 'react';\r\nimport Buttons from 'components/utils/Buttons';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { Row, Col, Input, Select } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from 'redux/Forum/actions';\r\nconst { Search } = Input;\r\n// const { Option } = Select;\r\n// let selectOptions = [\r\n//   { key: 'timestamp', value: 'timestamp', label: 'Sort by created date' },\r\n//   {\r\n//     key: 'last_modified',\r\n//     value: 'last_modified',\r\n//     label: 'Sort by modified date',\r\n//   },\r\n// ];\r\nexport default function ForumPhFeedsExtras() {\r\n  const dispatch = useDispatch();\r\n  const { addPostDraftState, feedSortBy, feedSearchString } = useSelector(\r\n    (state) => state.forumReducer,\r\n  );\r\n  const toggleNewPost = () => {\r\n    dispatch({\r\n      type: actions.TOGGLESTATE,\r\n      payload: { label: 'addPostDraftState', value: !addPostDraftState },\r\n    });\r\n  };\r\n  // function onChange(value) {\r\n  //   dispatch({\r\n  //     type: actions.FORCEUPDATE,\r\n  //     payload: { item: 'feedSortBy', value: value },\r\n  //   });\r\n  // }\r\n\r\n  const updateSearchString = (value) => {\r\n    dispatch({\r\n      type: actions.FORCEUPDATE,\r\n      payload: { item: 'feedSearchString', value: value },\r\n    });\r\n  };\r\n  const doSearch = (value) => {};\r\n  return (\r\n    <Row align='middle'>\r\n      <Col\r\n        lg={24}\r\n        md={24}\r\n        sm={24}\r\n        xs={24}\r\n        span={12}\r\n        justify='space-between'\r\n        align='end'\r\n      >\r\n        <Search\r\n          placeholder='search'\r\n          enterButton\r\n          allowClear\r\n          value={feedSearchString}\r\n          onChange={(e) => updateSearchString(e.target.value)}\r\n          onPressEnter={() => doSearch()}\r\n          // onSearch={() => doSearch()}\r\n        />\r\n      </Col>\r\n      {!addPostDraftState && (\r\n        <Col\r\n          lg={24}\r\n          md={24}\r\n          sm={24}\r\n          xs={24}\r\n          span={12}\r\n          justify='center'\r\n          align='end'\r\n          className='new-post-button'\r\n        >\r\n          <Buttons\r\n            type='primary'\r\n            shape='round'\r\n            icon={<PlusOutlined />}\r\n            content='New Post'\r\n            handleClick={() => toggleNewPost()}\r\n          />\r\n        </Col>\r\n      )}\r\n    </Row>\r\n  );\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPhSearchExtras.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\getTruncatedName.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\MessagePreview.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\Editor.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\CommentsWrapper.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\SingleSelect.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\CommentsContainer.js",["411","412","413","414","415"],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\EditProfileModal.js",["416","417","418"],"import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Typography, Divider, Modal, Select } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from 'redux/Profile/actions';\r\n\r\nfunction EditProfileModal({ isModalVisible, userId, handleCancel }) {\r\n  const { Paragraph, Text } = Typography;\r\n  const { confirm } = Modal;\r\n  const { Option } = Select;\r\n\r\n  const { profileData } = useSelector((state) => state.profileReducer);\r\n  const [editUsername, setUsername] = useState(profileData?.profile?.username);\r\n  const [editFirstName, setFirstName] = useState(\r\n    profileData?.profile?.first_name,\r\n  );\r\n  const [editLastName, setLastName] = useState(profileData?.profile?.last_name);\r\n  const [editEmail, setEmail] = useState(profileData?.profile?.email);\r\n  const [editContactNo, setContactNo] = useState(\r\n    profileData?.profile?.mobile_no,\r\n  );\r\n  const [editCity, setCity] = useState(profileData?.profile?.city);\r\n  const [editState, setState] = useState(profileData?.profile?.state);\r\n  const [editCountry, setCountry] = useState(profileData?.profile?.country);\r\n  const [editZipCode, setZipCode] = useState(profileData?.profile?.zipcode);\r\n  const [editTitle, setTitle] = useState(profileData?.profile?.title);\r\n  const [editLinkedInURL, setLinkedInURL] = useState(\r\n    profileData?.profile?.links,\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const [interestListComponent, setInterestListComponent] = useState(null);\r\n  // console.log(profileData?.interest?.topic);\r\n  // useEffect(() => {\r\n  //   let interestListComponent1 = null;\r\n  //   interestListComponent1 = profileData?.interest?.topic\r\n  //     .substring(1, profileData?.interest?.topic.length - 1)\r\n  //     .split(',')\r\n  //     .map(function (intr) {\r\n  //       return (\r\n  //         <Option value={intr.substring(1, intr.length - 1)}>\r\n  //           <div className='demo-option-label-item'>\r\n  //             {intr.substring(1, intr.length - 1)}\r\n  //           </div>\r\n  //         </Option>\r\n  //       );\r\n  //     });\r\n  //   setInterestListComponent(interestListComponent1);\r\n  // }, []);\r\n\r\n  function showConfirm() {\r\n    confirm({\r\n      title: 'Do you want to save the changes?',\r\n      icon: <ExclamationCircleOutlined />,\r\n      onOk() {\r\n        dispatch({\r\n          type: actions.EDITUSERDETAILS,\r\n          payload: {\r\n            user_id: userId,\r\n            profile: {\r\n              username: String(editUsername),\r\n              first_name: String(editFirstName),\r\n              last_name: String(editLastName),\r\n              email: String(editEmail),\r\n              contact_number: String(editContactNo),\r\n              location_city: String(editCity),\r\n              location_state: String(editState),\r\n              location_country: String(editCountry),\r\n              location_zip_code: String(editZipCode),\r\n              title: String(editTitle),\r\n              linkedin: String(editLinkedInURL),\r\n            },\r\n          },\r\n        });\r\n\r\n        handleCancel();\r\n      },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title='Edit User Profile'\r\n      visible={isModalVisible}\r\n      onCancel={handleCancel}\r\n      onOk={showConfirm}\r\n      width='80%'\r\n    >\r\n      <Row gutter={[16, 24]}>\r\n        <Col lg={4} md={15} sm={20} xs={20}>\r\n          <Text strong>First Name:</Text>\r\n        </Col>\r\n        <Col lg={8} md={15} sm={20} xs={20}>\r\n          <Paragraph editable={{ onChange: setFirstName }}>\r\n            {editFirstName}\r\n          </Paragraph>\r\n        </Col>\r\n        <Col lg={4} md={15} sm={20} xs={20}>\r\n          <Text strong>Last Name:</Text>\r\n        </Col>\r\n        <Col lg={8} md={15} sm={20} xs={20}>\r\n          <Paragraph editable={{ onChange: setLastName }}>\r\n            {editLastName}\r\n          </Paragraph>\r\n        </Col>\r\n        <Col lg={4} md={15} sm={20} xs={20}>\r\n          <Text strong>Email:</Text>\r\n        </Col>\r\n        <Col lg={8} md={15} sm={20} xs={20}>\r\n          <Paragraph editable={{ onChange: setEmail }}>{editEmail}</Paragraph>\r\n        </Col>\r\n        <Col lg={4} md={15} sm={20} xs={20}>\r\n          <Text strong>Contact No. :</Text>\r\n        </Col>\r\n        <Col lg={8} md={15} sm={20} xs={20}>\r\n          <Paragraph editable={{ onChange: setContactNo }}>\r\n            {editContactNo}\r\n          </Paragraph>\r\n        </Col>\r\n        <Col lg={4} md={15} sm={20} xs={20}>\r\n          <Text strong>Username:</Text>\r\n        </Col>\r\n        <Col lg={8} md={15} sm={20} xs={20}>\r\n          <Paragraph editable={{ onChange: setUsername }}>\r\n            {editUsername}\r\n          </Paragraph>\r\n        </Col>\r\n        <Col lg={4} md={15} sm={20} xs={20}>\r\n          <Text strong>Title:</Text>\r\n        </Col>\r\n        <Col lg={8} md={15} sm={20} xs={20}>\r\n          <Paragraph editable={{ onChange: setTitle }}>{editTitle}</Paragraph>\r\n        </Col>\r\n        <Col lg={4} md={15} sm={20} xs={20}>\r\n          <Text strong>LinkedIn URL:</Text>\r\n        </Col>\r\n        <Col lg={20} md={20} sm={20} xs={20}>\r\n          <Paragraph editable={{ onChange: setLinkedInURL }}>\r\n            {editLinkedInURL}\r\n          </Paragraph>\r\n        </Col>\r\n        <Col lg={4} md={15} sm={20} xs={20}>\r\n          <Text strong>City:</Text>\r\n        </Col>\r\n        <Col lg={8} md={15} sm={20} xs={20}>\r\n          <Paragraph editable={{ onChange: setCity }}>{editCity}</Paragraph>\r\n        </Col>\r\n        <Col lg={4} md={15} sm={20} xs={20}>\r\n          <Text strong>State:</Text>\r\n        </Col>\r\n        <Col lg={8} md={15} sm={20} xs={20}>\r\n          <Paragraph editable={{ onChange: setState }}>{editState}</Paragraph>\r\n        </Col>\r\n        <Col lg={4} md={15} sm={20} xs={20}>\r\n          <Text strong>Country:</Text>\r\n        </Col>\r\n        <Col lg={8} md={15} sm={20} xs={20}>\r\n          <Paragraph editable={{ onChange: setCountry }}>\r\n            {editCountry}\r\n          </Paragraph>\r\n        </Col>\r\n        <Col lg={4} md={15} sm={20} xs={20}>\r\n          <Text strong>Zip code:</Text>\r\n        </Col>\r\n        <Col lg={8} md={15} sm={20} xs={20}>\r\n          <Paragraph editable={{ onChange: setZipCode }}>\r\n            {editZipCode}\r\n          </Paragraph>\r\n        </Col>\r\n      </Row>\r\n      {/* <Divider />\r\n      <Row gutter={[16, 24]}>\r\n        <Col lg={4} md={15} sm={20} xs={20}>\r\n          <Text strong>Interests:</Text>\r\n        </Col>\r\n        <Col lg={12} md={15} sm={20} xs={20}>\r\n          {interestListComponent && (\r\n            <Select\r\n              mode='multiple'\r\n              style={{ width: '80%' }}\r\n              placeholder='select skills'\r\n            >\r\n              {interestListComponent}\r\n            </Select>\r\n          )}\r\n        </Col>\r\n      </Row> */}\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default EditProfileModal;\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\ProjectCard.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\ProjectModal.js",["419"],"import React, { useEffect, useState } from 'react';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Typography,\r\n  Divider,\r\n  Tag,\r\n  Avatar,\r\n  Button,\r\n  Tooltip,\r\n} from 'antd';\r\nimport { getRequest, postRequest, deleteRequest } from 'Config/axiosClient';\r\nimport { getRandomColor } from 'components/tools/colorGenerator';\r\nimport { dateToUTC } from 'components/tools/date';\r\nimport AppTitles from 'components/utils/AppTitles';\r\nimport AppTexts from 'components/utils/AppTexts';\r\nimport { useSelector } from 'react-redux';\r\nfunction ProjectModal({\r\n  isProjectModalVisible,\r\n  projectId,\r\n  handleProjectModalCancel,\r\n}) {\r\n  const { Paragraph, Text } = Typography;\r\n  const [data, setData] = useState(null);\r\n  const [followLoading, setFollowLoading] = useState(false);\r\n  const [collaborators, setCollaborators] = useState(null);\r\n  const { userId } = useSelector((state) => state.authenticateReducer);\r\n  const U_id = `U_${userId}`;\r\n  function handleFollowUnfollow() {\r\n    setFollowLoading(true);\r\n    const id = projectId.split('_')[1];\r\n    if (\r\n      collaborators &&\r\n      collaborators?.map((collaborator) => collaborator.user_id)?.includes(U_id)\r\n    ) {\r\n      deleteRequest(`project/user_id/${id}/${userId}`)\r\n        .then((res) => {\r\n          getCollaborators(id);\r\n          setFollowLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          setFollowLoading(false);\r\n        });\r\n    } else {\r\n      postRequest(`project/user_id/${id}/${userId}`)\r\n        .then((res) => {\r\n          getCollaborators(id);\r\n          setFollowLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          setFollowLoading(false);\r\n        });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    setData(null);\r\n    const id = projectId.split('_')[1];\r\n\r\n    if (isProjectModalVisible) {\r\n      getRequest(`project/${id}`).then((res) => {\r\n        setData(res.data.data);\r\n      });\r\n      getCollaborators(id);\r\n    }\r\n    return () => {};\r\n  }, [isProjectModalVisible]);\r\n  const getCollaborators = (id) => {\r\n    getRequest(`project/user_id/${id}`).then((res) => {\r\n      setCollaborators(res.data.data);\r\n    });\r\n  };\r\n  const tags = data?.skills?.map((skill) => (\r\n    <Tag color={getRandomColor(skill)}>{skill}</Tag>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      {data ? (\r\n        <Modal\r\n          title={<AppTitles className='medium' content={data?.title} />}\r\n          visible={isProjectModalVisible}\r\n          onCancel={handleProjectModalCancel}\r\n          // onOk={null}\r\n          className='project-modal-wrapper'\r\n          footer={[\r\n            <Button\r\n              key='submit'\r\n              type='primary'\r\n              loading={followLoading}\r\n              onClick={handleFollowUnfollow}\r\n            >\r\n              {console.log(collaborators)}\r\n              {U_id === data?.created_by\r\n                ? null\r\n                : collaborators\r\n                    ?.map((collaborator) => collaborator.user_id)\r\n                    ?.includes(U_id)\r\n                ? 'Unfollow'\r\n                : 'Follow'}\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <Row gutter={[16, 24]}>\r\n            <Col>\r\n              <Text strong>Description:</Text>\r\n              <Paragraph>{data?.description}</Paragraph>\r\n              <Divider />\r\n              <Text strong>Requirements:</Text>\r\n              <Paragraph>{data?.requirement}</Paragraph>\r\n              <Text strong>Start Date:</Text>\r\n              <Paragraph>{dateToUTC(data?.start_date)} AST</Paragraph>\r\n              <Text strong>End Date:</Text>\r\n              <Paragraph>{dateToUTC(data?.end_date)} AST</Paragraph>\r\n              <Text strong>Location:</Text>\r\n              <Paragraph>{data.location}</Paragraph>\r\n              <Text strong>Project status:</Text>\r\n              <Paragraph>{data.status}</Paragraph>\r\n            </Col>\r\n          </Row>\r\n          <Divider />\r\n          <Row>\r\n            <Col span={24}>\r\n              <Text strong>Skills:</Text>\r\n            </Col>\r\n            <Col style={{ marginTop: '1%' }}>{tags}</Col>\r\n          </Row>\r\n          <Divider />\r\n          <Row>\r\n            <Col span={12}>\r\n              <Row>\r\n                <Col span={24}>\r\n                  <AppTexts\r\n                    strong\r\n                    containerStyles='nomargin'\r\n                    content='Created By'\r\n                  />\r\n\r\n                  <AppTexts\r\n                    content={\r\n                      <>\r\n                        <Avatar\r\n                          style={{\r\n                            backgroundColor: getRandomColor(data?.first_name),\r\n                          }}\r\n                          size={30}\r\n                          icon={<UserOutlined />}\r\n                        />{' '}\r\n                        {`${data?.first_name} ${data?.last_name}`}\r\n                      </>\r\n                    }\r\n                  />\r\n                </Col>\r\n                <Col span={24} style={{ marginTop: '1%' }}></Col>\r\n              </Row>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Row>\r\n                <Col span={24}>\r\n                  <Text strong>Contributors:</Text>\r\n                </Col>\r\n                <Col span={24} style={{ marginTop: '1%' }}>\r\n                  <Avatar.Group\r\n                    maxCount={2}\r\n                    size='medium'\r\n                    maxStyle={{ color: '#f56a00', backgroundColor: '#fde3cf' }}\r\n                  >\r\n                    {collaborators &&\r\n                      collaborators.map((value) => (\r\n                        <Tooltip\r\n                          title={`${value.first_name} ${value.last_name}`}\r\n                          placement='bottom'\r\n                        >\r\n                          <Avatar\r\n                            style={{\r\n                              backgroundColor: getRandomColor(\r\n                                `${value.first_name} ${value.last_name}`,\r\n                              ),\r\n                            }}\r\n                            size={30}\r\n                            icon={<UserOutlined />}\r\n                          />\r\n                        </Tooltip>\r\n                      ))}\r\n                  </Avatar.Group>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectModal;\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\colorGenerator.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\RecommProjects.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\RecommM&M.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\UserModal.js",["420","421"],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\UserCard.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\ProjectCard.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Profile\\reducer.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Profile\\saga.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Profile\\actions.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\utils\\ViewWrapper.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\SearchSelector.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\sorter.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\searcher.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Messages\\actions.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Messages\\reducer.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Messages\\saga.js",["422"],"import { all, call, put, takeLatest } from 'redux-saga/effects';\r\nimport { notification } from 'antd';\r\n\r\nimport actions from 'redux/Messages/actions';\r\nimport { getRequest, postRequest } from 'Config/axiosClient';\r\n\r\nfunction* getContacts(action) {\r\n  try {\r\n    const response = yield call(() =>\r\n      getRequest(`chat_contactlist/${action.userId}`),\r\n    );\r\n    if (response?.data?.success) {\r\n      yield put({\r\n        type: actions.GETCONTACTS_SUCCESS,\r\n        contacts: response?.data?.data,\r\n      });\r\n    } else {\r\n      yield put({ type: actions.GETCONTACTS_FAILURE });\r\n    }\r\n  } catch (e) {\r\n    yield put({ type: actions.GETCONTACTS_FAILURE });\r\n  }\r\n}\r\nfunction* getMessages(action) {\r\n  try {\r\n    const response = yield call(() =>\r\n      getRequest(`chat/${action.fromUser}/${action.toUser}`),\r\n    );\r\n    if (response?.data?.success) {\r\n      // notification['success']({\r\n      //   message: 'Welcome back',\r\n      //   description: response?.data?.message,\r\n      //   placement: 'bottomRight',\r\n      // });\r\n      yield put({\r\n        type: actions.GETMESSAGES_SUCCESS,\r\n        messages: response?.data?.data,\r\n        toUser: action.toUser,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: actions.GETMESSAGES_FAILURE,\r\n        toUser: action.toUser,\r\n      });\r\n    }\r\n  } catch (e) {\r\n    yield put({ type: actions.GETMESSAGES_FAILURE });\r\n  }\r\n}\r\n\r\nfunction* postMessages(action) {\r\n  try {\r\n    const response = yield call(() => postRequest('chat', action.payload));\r\n    if (response?.data?.success) {\r\n      yield put({\r\n        type: actions.GET_MESSAGES,\r\n        toUser: action.payload.to_user_id,\r\n        fromUser: action.payload.from_user_id,\r\n      });\r\n    } else {\r\n      yield put({ type: actions.POSTMESSAGE_FAILURE });\r\n    }\r\n  } catch (e) {\r\n    yield put({ type: actions.POSTMESSAGE_FAILURE });\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([takeLatest(actions.GETCONTACTS, getContacts)]);\r\n  yield all([takeLatest(actions.GET_MESSAGES, getMessages)]);\r\n  yield all([takeLatest(actions.POSTMESSAGE, postMessages)]);\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\useInterval.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\capitalize.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\date.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\AddProjectModal.js",["423","424","425"],"import React, { useState, useEffect } from 'react';\r\nimport { Modal, Form, Input, Select, DatePicker, Button } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from 'redux/Profile/actions';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\n\r\nfunction AddProjectModal({\r\n  isAddProjectModalVisible,\r\n  handleAddProjectModalCancel,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const [form] = Form.useForm();\r\n  const { Option } = Select;\r\n  const { confirm } = Modal;\r\n  const { skillList, skillErrorMessage, skillDisplayError } = useSelector(\r\n    (state) => state.profileReducer,\r\n  );\r\n  const { userId } = useSelector((state) => state.authenticateReducer);\r\n  const [skillListComponent, setSkillListComponent] = useState(null);\r\n  const [projectStartDate, setProjectStartDate] = useState(null);\r\n  const [projectEndDate, setProjectEndDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (skillList?.length === 0) {\r\n      dispatch({\r\n        type: actions.GETSKILLS,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let SkillListComponent1 = null;\r\n    SkillListComponent1 = skillList.map(function (skill) {\r\n      return (\r\n        <Option value={skill}>\r\n          <div className='demo-option-label-item'>{skill}</div>\r\n        </Option>\r\n      );\r\n    });\r\n    setSkillListComponent(SkillListComponent1);\r\n  }, [skillList]);\r\n\r\n  const getStartDate = (date, dateString) => {\r\n    var newdate = new Date(dateString);\r\n    var epochDate = newdate.getTime();\r\n    setProjectStartDate(epochDate);\r\n  };\r\n\r\n  const getEndDate = (date, dateString) => {\r\n    var newdate = new Date(dateString);\r\n    var epochDate = newdate.getTime();\r\n    setProjectEndDate(epochDate);\r\n  };\r\n\r\n  const showConfirm = (values) => {\r\n    confirm({\r\n      title: 'Do you want to create the project?',\r\n      icon: <ExclamationCircleOutlined />,\r\n      onOk() {\r\n        form\r\n          .validateFields()\r\n          .then((values) => {\r\n            dispatch({\r\n              type: actions.CREATEUSERPROJECT,\r\n              payload: {\r\n                user_id: userId,\r\n                project_details: {\r\n                  project_title: values.title,\r\n                  project_desc: values.description,\r\n                  project_status: values.status,\r\n                  project_req: values.requirements,\r\n                  project_start_date: String(projectStartDate),\r\n                  project_end_date: String(projectEndDate),\r\n                  project_tags: values.required_skills,\r\n                  project_location: values.location,\r\n                },\r\n              },\r\n            });\r\n            dispatch({\r\n              type: actions.GETUSERPROJECTS,\r\n              payload: {\r\n                user_id: userId,\r\n              },\r\n            });\r\n            handleAddProjectModalCancel();\r\n          })\r\n          .catch((info) => {\r\n            console.log('Validate Failed:', info);\r\n          });\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title='Add Project Modal'\r\n      visible={isAddProjectModalVisible}\r\n      width='60%'\r\n      onCancel={handleAddProjectModalCancel}\r\n      footer={[\r\n        <Button\r\n          key='submit'\r\n          type='primary'\r\n          loading={false}\r\n          htmlType='submit'\r\n          onClick={() => {\r\n            form.validateFields().then((values) => showConfirm(values));\r\n          }}\r\n        >\r\n          Create Project\r\n        </Button>,\r\n        <Button\r\n          type='danger'\r\n          loading={false}\r\n          onClick={handleAddProjectModalCancel}\r\n        >\r\n          Close\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <Form\r\n        form={form}\r\n        labelCol={{\r\n          span: 4,\r\n        }}\r\n        wrapperCol={{\r\n          span: 14,\r\n        }}\r\n        layout='horizontal'\r\n      >\r\n        <Form.Item\r\n          name='title'\r\n          label='Title'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input project title!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='description'\r\n          label='Description'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input project description!',\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='status'\r\n          label='Status'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please select project status!',\r\n            },\r\n          ]}\r\n        >\r\n          <Select>\r\n            <Select.Option value='to start'>Start</Select.Option>\r\n            <Select.Option value='ongoing'>In Progress</Select.Option>\r\n            <Select.Option value='completed'>Complete</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='requirements'\r\n          label='Requirements'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input project requirements!',\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='start_date'\r\n          label='Start Date'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input project start date!',\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker onChange={getStartDate} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='end_date'\r\n          label='End Date'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input project end date!',\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker onChange={getEndDate} />\r\n        </Form.Item>\r\n        {skillList?.length > 0 && (\r\n          <Form.Item\r\n            name='required_skills'\r\n            label='Required Skills'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please add required skills!',\r\n              },\r\n            ]}\r\n          >\r\n            <Select\r\n              mode='multiple'\r\n              style={{ width: '80%' }}\r\n              placeholder='select skills'\r\n            >\r\n              {skillListComponent}\r\n            </Select>\r\n          </Form.Item>\r\n        )}\r\n        <Form.Item\r\n          name='location'\r\n          label='Location'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input project location!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddProjectModal;\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\MessageSearchSelect.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Skills2.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\utils\\multiSelector.js",["426","427","428","429"],"import React, { useEffect, useState } from 'react';\r\nimport { Col, Empty, Row, Select } from 'antd';\r\nimport { getRequest } from 'Config/axiosClient';\r\nimport searcher from 'components/tools/searcher';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport actions from 'redux/Profile/actions';\r\nimport Buttons from 'components/utils/Buttons';\r\nexport default function MultipleSelects({\r\n  selectOptions,\r\n  handleChange,\r\n  userId,\r\n  addSkills,\r\n  ...rest\r\n}) {\r\n  const [data, setdata] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [defaultValue, setDefaultValue] = useState([]);\r\n  const { userSkillList, skillList } = useSelector(\r\n    (state) => state.profileReducer,\r\n  );\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const response = getRequest('skill');\r\n    response.then((response) => {\r\n      let data = Object.entries(response?.data?.data?.skill_name).map(\r\n        ([index, element]) => ({\r\n          label: element,\r\n          key: index,\r\n          value: element,\r\n        }),\r\n      );\r\n      setdata(data);\r\n      setFilteredData(data);\r\n    });\r\n    dispatch({\r\n      type: actions.GETUSERSKILLS,\r\n      payload: {\r\n        user_id: userId,\r\n      },\r\n    });\r\n    return () => {};\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let newData = [...filteredData];\r\n    newData = newData.filter((element) =>\r\n      userSkillList.includes(element.value),\r\n    );\r\n    newData = newData.map((element) => {\r\n      return element.value;\r\n    });\r\n    console.log(newData);\r\n    setDefaultValue(newData);\r\n    return () => {};\r\n  }, [userSkillList]);\r\n\r\n  useEffect(() => {\r\n    console.log(skillList);\r\n    let data = skillList.map((element, index) => ({\r\n      label: element,\r\n      key: index,\r\n      value: element,\r\n    }));\r\n    setdata(data);\r\n    setFilteredData(data);\r\n\r\n    return () => {};\r\n  }, [skillList]);\r\n\r\n  const handleSearch = (value) => {\r\n    let searchResult = searcher(value, data, ['label']);\r\n    setFilteredData(searchResult);\r\n  };\r\n  console.log(defaultValue);\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col sm={24}>\r\n          <Select\r\n            key={filteredData?.length + defaultValue?.length}\r\n            showSearch\r\n            mode='multiple'\r\n            placeholder='Search skill by skill name'\r\n            style={{ minWidth: '200px', width: '100%' }}\r\n            onChange={(value) => handleChange(value)}\r\n            allowClear\r\n            defaultValue={defaultValue}\r\n            options={filteredData}\r\n            {...rest}\r\n          ></Select>\r\n        </Col>\r\n        <Col sm={24} justify='end' align='end'>\r\n          <Buttons\r\n            handleClick={addSkills}\r\n            type='primary'\r\n            shape='round'\r\n            content='Update skills'\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\utils\\skillsList.js",["430"],"import { Tag } from 'antd';\r\nimport { getRandomColor } from 'components/tools/colorGenerator';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport actions from 'redux/Profile/actions';\r\n\r\nexport default function SkillsList({ userId }) {\r\n  const { userSkillList } = useSelector((state) => state.profileReducer);\r\n  const [skills, setSkills] = useState([]);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: actions.GETUSERSKILLS,\r\n      payload: {\r\n        user_id: userId,\r\n      },\r\n    });\r\n    return () => {};\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSkills(userSkillList);\r\n    return () => {};\r\n  }, [userSkillList]);\r\n\r\n  let skillsList = skills?.map((skill) => (\r\n    <Tag color={getRandomColor(skill)}>{skill}</Tag>\r\n  ));\r\n  return <div>{skillsList}</div>;\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\Comment.js",[],{"ruleId":"431","replacedBy":"432"},{"ruleId":"433","replacedBy":"434"},{"ruleId":"435","severity":1,"message":"436","line":24,"column":3,"nodeType":"437","messageId":"438","endLine":24,"endColumn":15},{"ruleId":"435","severity":1,"message":"439","line":31,"column":8,"nodeType":"437","messageId":"438","endLine":31,"endColumn":17},{"ruleId":"440","severity":1,"message":"441","line":62,"column":6,"nodeType":"442","endLine":62,"endColumn":8,"suggestions":"443"},{"ruleId":"440","severity":1,"message":"444","line":71,"column":6,"nodeType":"442","endLine":71,"endColumn":36,"suggestions":"445"},{"ruleId":"440","severity":1,"message":"446","line":81,"column":6,"nodeType":"442","endLine":81,"endColumn":8,"suggestions":"447"},{"ruleId":"435","severity":1,"message":"448","line":82,"column":7,"nodeType":"437","messageId":"438","endLine":82,"endColumn":17},{"ruleId":"435","severity":1,"message":"449","line":4,"column":8,"nodeType":"437","messageId":"438","endLine":4,"endColumn":15},{"ruleId":"435","severity":1,"message":"450","line":10,"column":8,"nodeType":"437","messageId":"438","endLine":10,"endColumn":15},{"ruleId":"440","severity":1,"message":"441","line":41,"column":6,"nodeType":"442","endLine":41,"endColumn":8,"suggestions":"451"},{"ruleId":"440","severity":1,"message":"441","line":52,"column":6,"nodeType":"442","endLine":52,"endColumn":8,"suggestions":"452"},{"ruleId":"431","replacedBy":"453"},{"ruleId":"433","replacedBy":"454"},{"ruleId":"455","severity":1,"message":"456","line":66,"column":13,"nodeType":"437","messageId":"457","endLine":66,"endColumn":17},{"ruleId":"440","severity":1,"message":"458","line":82,"column":6,"nodeType":"442","endLine":82,"endColumn":16,"suggestions":"459"},{"ruleId":"440","severity":1,"message":"460","line":97,"column":6,"nodeType":"442","endLine":97,"endColumn":8,"suggestions":"461"},{"ruleId":"435","severity":1,"message":"462","line":25,"column":12,"nodeType":"437","messageId":"438","endLine":25,"endColumn":20},{"ruleId":"435","severity":1,"message":"463","line":33,"column":9,"nodeType":"437","messageId":"438","endLine":33,"endColumn":17},{"ruleId":"440","severity":1,"message":"464","line":43,"column":6,"nodeType":"442","endLine":43,"endColumn":36,"suggestions":"465"},{"ruleId":"435","severity":1,"message":"466","line":20,"column":10,"nodeType":"437","messageId":"438","endLine":20,"endColumn":28},{"ruleId":"440","severity":1,"message":"467","line":59,"column":6,"nodeType":"442","endLine":59,"endColumn":20,"suggestions":"468"},{"ruleId":"440","severity":1,"message":"469","line":69,"column":6,"nodeType":"442","endLine":69,"endColumn":36,"suggestions":"470"},{"ruleId":"435","severity":1,"message":"471","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":26},{"ruleId":"435","severity":1,"message":"472","line":20,"column":7,"nodeType":"437","messageId":"438","endLine":20,"endColumn":18},{"ruleId":"435","severity":1,"message":"473","line":14,"column":31,"nodeType":"437","messageId":"438","endLine":14,"endColumn":37},{"ruleId":"435","severity":1,"message":"474","line":4,"column":27,"nodeType":"437","messageId":"438","endLine":4,"endColumn":33},{"ruleId":"435","severity":1,"message":"475","line":19,"column":30,"nodeType":"437","messageId":"438","endLine":19,"endColumn":40},{"ruleId":"435","severity":1,"message":"476","line":2,"column":35,"nodeType":"437","messageId":"438","endLine":2,"endColumn":41},{"ruleId":"435","severity":1,"message":"477","line":4,"column":8,"nodeType":"437","messageId":"438","endLine":4,"endColumn":14},{"ruleId":"435","severity":1,"message":"478","line":5,"column":8,"nodeType":"437","messageId":"438","endLine":5,"endColumn":16},{"ruleId":"435","severity":1,"message":"436","line":7,"column":10,"nodeType":"437","messageId":"438","endLine":7,"endColumn":22},{"ruleId":"435","severity":1,"message":"479","line":8,"column":10,"nodeType":"437","messageId":"438","endLine":8,"endColumn":24},{"ruleId":"435","severity":1,"message":"471","line":1,"column":27,"nodeType":"437","messageId":"438","endLine":1,"endColumn":36},{"ruleId":"435","severity":1,"message":"480","line":2,"column":32,"nodeType":"437","messageId":"438","endLine":2,"endColumn":39},{"ruleId":"435","severity":1,"message":"481","line":10,"column":11,"nodeType":"437","messageId":"438","endLine":10,"endColumn":17},{"ruleId":"440","severity":1,"message":"482","line":68,"column":6,"nodeType":"442","endLine":68,"endColumn":29,"suggestions":"483"},{"ruleId":"435","severity":1,"message":"484","line":2,"column":10,"nodeType":"437","messageId":"438","endLine":2,"endColumn":35},{"ruleId":"435","severity":1,"message":"485","line":3,"column":10,"nodeType":"437","messageId":"438","endLine":3,"endColumn":15},{"ruleId":"435","severity":1,"message":"486","line":2,"column":10,"nodeType":"437","messageId":"438","endLine":2,"endColumn":22},{"ruleId":"435","severity":1,"message":"487","line":16,"column":22,"nodeType":"437","messageId":"438","endLine":16,"endColumn":39},{"ruleId":"435","severity":1,"message":"488","line":16,"column":41,"nodeType":"437","messageId":"438","endLine":16,"endColumn":58},{"ruleId":"440","severity":1,"message":"489","line":30,"column":6,"nodeType":"442","endLine":30,"endColumn":8,"suggestions":"490"},{"ruleId":"435","severity":1,"message":"485","line":2,"column":15,"nodeType":"437","messageId":"438","endLine":2,"endColumn":20},{"ruleId":"440","severity":1,"message":"460","line":42,"column":6,"nodeType":"442","endLine":42,"endColumn":8,"suggestions":"491"},{"ruleId":"440","severity":1,"message":"492","line":55,"column":6,"nodeType":"442","endLine":55,"endColumn":21,"suggestions":"493"},{"ruleId":"435","severity":1,"message":"494","line":70,"column":9,"nodeType":"437","messageId":"438","endLine":70,"endColumn":21},{"ruleId":"440","severity":1,"message":"460","line":19,"column":6,"nodeType":"442","endLine":19,"endColumn":8,"suggestions":"495"},"no-native-reassign",["496"],"no-negated-in-lhs",["497"],"no-unused-vars","'UserOutlined' is defined but never used.","Identifier","unusedVar","'avatarImg' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'userId', and 'user_id'. Either include them or remove the dependency array.","ArrayExpression",["498"],"React Hook useEffect has a missing dependency: 'user_id'. Either include it or remove the dependency array. If 'setData' needs the current value of 'user_id', you can also switch to useReducer instead of useState and read 'user_id' in the reducer.",["499"],"React Hook useEffect has missing dependencies: 'dispatch', 'rating', 'userId', and 'user_id'. Either include them or remove the dependency array.",["500"],"'skillsList' is assigned a value but never used.","'Skills2' is defined but never used.","'Buttons' is defined but never used.",["501"],["502"],["496"],["497"],"no-redeclare","'user' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'allUsers', 'dispatch', 'location?.state?.userId', and 'tempContact'. Either include them or remove the dependency array.",["503"],"React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.",["504"],"'getDummy' is defined but never used.","'doSearch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["505"],"'isUserModalVisible' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'feedSortBy'. Either include it or remove the dependency array.",["506"],"React Hook useEffect has a missing dependency: 'contentFeeds'. Either include it or remove the dependency array.",["507"],"'useEffect' is defined but never used.","'defaultText' is assigned a value but never used.","'loader' is assigned a value but never used.","'Select' is defined but never used.","'feedSortBy' is assigned a value but never used.","'Avatar' is defined but never used.","'moment' is defined but never used.","'AppTexts' is defined but never used.","'getRandomColor' is defined but never used.","'Divider' is defined but never used.","'Option' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'projectId'. Either include it or remove the dependency array.",["508"],"'ExclamationCircleOutlined' is defined but never used.","'Empty' is defined but never used.","'notification' is defined but never used.","'skillErrorMessage' is assigned a value but never used.","'skillDisplayError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'skillList?.length'. Either include them or remove the dependency array.",["509"],["510"],"React Hook useEffect has a missing dependency: 'filteredData'. Either include it or remove the dependency array.",["511"],"'handleSearch' is assigned a value but never used.",["512"],"no-global-assign","no-unsafe-negation",{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"513","fix":"519"},{"desc":"513","fix":"520"},{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},{"desc":"523","fix":"535"},{"desc":"536","fix":"537"},{"desc":"523","fix":"538"},"Update the dependencies array to be: [dispatch, userId, user_id]",{"range":"539","text":"540"},"Update the dependencies array to be: [profileDataTemp, profileData, user_id]",{"range":"541","text":"542"},"Update the dependencies array to be: [dispatch, rating, userId, user_id]",{"range":"543","text":"544"},{"range":"545","text":"540"},{"range":"546","text":"540"},"Update the dependencies array to be: [allUsers, contacts, dispatch, location?.state?.userId, tempContact]",{"range":"547","text":"548"},"Update the dependencies array to be: [dispatch, userId]",{"range":"549","text":"550"},"Update the dependencies array to be: [recommselectedtype, dispatch, userId]",{"range":"551","text":"552"},"Update the dependencies array to be: [contentFeeds, feedSortBy]",{"range":"553","text":"554"},"Update the dependencies array to be: [feedSortBy, feedSearchString, contentFeeds]",{"range":"555","text":"556"},"Update the dependencies array to be: [isProjectModalVisible, projectId]",{"range":"557","text":"558"},"Update the dependencies array to be: [dispatch, skillList?.length]",{"range":"559","text":"560"},{"range":"561","text":"550"},"Update the dependencies array to be: [filteredData, userSkillList]",{"range":"562","text":"563"},{"range":"564","text":"550"},[1837,1839],"[dispatch, userId, user_id]",[2005,2035],"[profileDataTemp, profileData, user_id]",[2236,2238],"[dispatch, rating, userId, user_id]",[1471,1473],[1380,1382],[3092,3102],"[allUsers, contacts, dispatch, location?.state?.userId, tempContact]",[3457,3459],"[dispatch, userId]",[1633,1663],"[recommselectedtype, dispatch, userId]",[2011,2025],"[contentFeeds, feedSortBy]",[2287,2317],"[feedSortBy, feedSearchString, contentFeeds]",[1989,2012],"[isProjectModalVisible, projectId]",[1095,1097],"[dispatch, skillList?.length]",[1270,1272],[1599,1614],"[filteredData, userSkillList]",[622,624]]