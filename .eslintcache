[{"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\index.js":"1","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\reportWebVitals.js":"2","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\App.js":"3","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Users.js":"4","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\HomePage\\Home.js":"5","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Layouts\\DashboardLayout.js":"6","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Layouts\\PublicLayout.js":"7","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Profile.js":"8","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\store.js":"9","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\AppTabs.js":"10","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\ContentWrapper.js":"11","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\Forum.js":"12","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\rootReducers.js":"13","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\rootSaga.js":"14","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Navigation\\NavBarPublic.js":"15","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Navigation\\NavBar.js":"16","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Projects.js":"17","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Skills.js":"18","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Reviews.js":"19","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\HomePage\\HomeFeature.js":"20","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\ForumLayout.js":"21","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\AppTitles.js":"22","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\HomePage\\HomeBanner.js":"23","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\SectionDivider.js":"24","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\ForumPageHeaderSelections.js":"25","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Authenticate\\actions.js":"26","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Authenticate\\reducer.js":"27","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Authenticate\\saga.js":"28","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Forum\\saga.js":"29","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Forum\\reducer.js":"30","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Forum\\actions.js":"31","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\AppTexts.js":"32","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\useWindowSize.js":"33","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\Buttons.js":"34","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\Config\\axiosClient.js":"35","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\MultipleSelects.js":"36","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\Config\\constants.js":"37","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\LoginPage.js":"38","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\RegisterPage.js":"39","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\RegisterForm.js":"40","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\LoginForm.js":"41","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\Message.js":"42","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\MessagesLayout.js":"43","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\ForumPage.js":"44","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\MessagesPage.js":"45","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\Search.js":"46","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\Recommendations.js":"47","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\Feeds.js":"48","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPageHeaderExtras.js":"49","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\UserDetails.js":"50","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\ViewWrapper.js":"51","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\UserMessager.js":"52","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\ViewWrapper.js":"53","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\Feed.js":"54","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPhRecomExtras.js":"55","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPhFeedsExtras.js":"56","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPhSearchExtras.js":"57","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\getTruncatedName.js":"58","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\MessagePreview.js":"59","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\Editor.js":"60","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\CommentsWrapper.js":"61","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\SingleSelect.js":"62","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\CommentsContainer.js":"63","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\EditProfileModal.js":"64","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\ProjectCard.js":"65","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\ProjectModal.js":"66","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\colorGenerator.js":"67","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\RecommProjects.js":"68","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\RecommM&M.js":"69","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\UserModal.js":"70","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\UserCard.js":"71","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\ProjectCard.js":"72","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Profile\\reducer.js":"73","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Profile\\saga.js":"74","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Profile\\actions.js":"75","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\utils\\ViewWrapper.js":"76","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\SearchSelector.js":"77","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\sorter.js":"78","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\searcher.js":"79","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Messages\\actions.js":"80","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Messages\\reducer.js":"81","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Messages\\saga.js":"82","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\useInterval.js":"83","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\capitalize.js":"84","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\date.js":"85","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\AddProjectModal.js":"86"},{"size":747,"mtime":1627100394196,"results":"87","hashOfConfig":"88"},{"size":362,"mtime":1624955552165,"results":"89","hashOfConfig":"88"},{"size":3375,"mtime":1628396497025,"results":"90","hashOfConfig":"88"},{"size":69,"mtime":1624955552165,"results":"91","hashOfConfig":"88"},{"size":3096,"mtime":1628396497054,"results":"92","hashOfConfig":"88"},{"size":1718,"mtime":1625324642421,"results":"93","hashOfConfig":"88"},{"size":1752,"mtime":1625324642423,"results":"94","hashOfConfig":"88"},{"size":6972,"mtime":1628406723887,"results":"95","hashOfConfig":"88"},{"size":647,"mtime":1624955552165,"results":"96","hashOfConfig":"88"},{"size":840,"mtime":1628406297056,"results":"97","hashOfConfig":"88"},{"size":154,"mtime":1625324642415,"results":"98","hashOfConfig":"88"},{"size":286,"mtime":1628396497036,"results":"99","hashOfConfig":"88"},{"size":456,"mtime":1628396497108,"results":"100","hashOfConfig":"88"},{"size":430,"mtime":1628404291156,"results":"101","hashOfConfig":"88"},{"size":1417,"mtime":1628396497063,"results":"102","hashOfConfig":"88"},{"size":2306,"mtime":1628396497063,"results":"103","hashOfConfig":"88"},{"size":3866,"mtime":1628405522396,"results":"104","hashOfConfig":"88"},{"size":4282,"mtime":1628400000652,"results":"105","hashOfConfig":"88"},{"size":4844,"mtime":1628406392189,"results":"106","hashOfConfig":"88"},{"size":2895,"mtime":1628396497056,"results":"107","hashOfConfig":"88"},{"size":3037,"mtime":1628396497037,"results":"108","hashOfConfig":"88"},{"size":370,"mtime":1628396497079,"results":"109","hashOfConfig":"88"},{"size":2309,"mtime":1628396497054,"results":"110","hashOfConfig":"88"},{"size":180,"mtime":1625324642426,"results":"111","hashOfConfig":"88"},{"size":7551,"mtime":1628396497040,"results":"112","hashOfConfig":"88"},{"size":257,"mtime":1627104723051,"results":"113","hashOfConfig":"88"},{"size":1639,"mtime":1628396497098,"results":"114","hashOfConfig":"88"},{"size":1839,"mtime":1628396497099,"results":"115","hashOfConfig":"88"},{"size":5043,"mtime":1628396497102,"results":"116","hashOfConfig":"88"},{"size":4451,"mtime":1628396497101,"results":"117","hashOfConfig":"88"},{"size":1327,"mtime":1628396497100,"results":"118","hashOfConfig":"88"},{"size":370,"mtime":1627100394193,"results":"119","hashOfConfig":"88"},{"size":1001,"mtime":1625386171079,"results":"120","hashOfConfig":"88"},{"size":445,"mtime":1625386171080,"results":"121","hashOfConfig":"88"},{"size":926,"mtime":1628396497027,"results":"122","hashOfConfig":"88"},{"size":459,"mtime":1625403819675,"results":"123","hashOfConfig":"88"},{"size":280,"mtime":1627100394123,"results":"124","hashOfConfig":"88"},{"size":696,"mtime":1628396497035,"results":"125","hashOfConfig":"88"},{"size":753,"mtime":1627723821721,"results":"126","hashOfConfig":"88"},{"size":3866,"mtime":1627723821720,"results":"127","hashOfConfig":"88"},{"size":2745,"mtime":1627104723046,"results":"128","hashOfConfig":"88"},{"size":164,"mtime":1627100394177,"results":"129","hashOfConfig":"88"},{"size":266,"mtime":1627100394177,"results":"130","hashOfConfig":"88"},{"size":610,"mtime":1628396497039,"results":"131","hashOfConfig":"88"},{"size":4229,"mtime":1628399795560,"results":"132","hashOfConfig":"88"},{"size":6125,"mtime":1628399795559,"results":"133","hashOfConfig":"88"},{"size":6524,"mtime":1628401555424,"results":"134","hashOfConfig":"88"},{"size":5139,"mtime":1628399671241,"results":"135","hashOfConfig":"88"},{"size":698,"mtime":1628396497041,"results":"136","hashOfConfig":"88"},{"size":789,"mtime":1628396497057,"results":"137","hashOfConfig":"88"},{"size":568,"mtime":1628396497062,"results":"138","hashOfConfig":"88"},{"size":3593,"mtime":1628399795562,"results":"139","hashOfConfig":"88"},{"size":637,"mtime":1627100394172,"results":"140","hashOfConfig":"88"},{"size":3513,"mtime":1628396497048,"results":"141","hashOfConfig":"88"},{"size":1800,"mtime":1628396497042,"results":"142","hashOfConfig":"88"},{"size":2284,"mtime":1628399795557,"results":"143","hashOfConfig":"88"},{"size":2191,"mtime":1628396497043,"results":"144","hashOfConfig":"88"},{"size":294,"mtime":1628396497075,"results":"145","hashOfConfig":"88"},{"size":1759,"mtime":1628396497060,"results":"146","hashOfConfig":"88"},{"size":1067,"mtime":1628399795561,"results":"147","hashOfConfig":"88"},{"size":277,"mtime":1628396497080,"results":"148","hashOfConfig":"88"},{"size":353,"mtime":1627100394195,"results":"149","hashOfConfig":"88"},{"size":6266,"mtime":1628399795566,"results":"150","hashOfConfig":"88"},{"size":6214,"mtime":1628396497065,"results":"151","hashOfConfig":"88"},{"size":935,"mtime":1628399795563,"results":"152","hashOfConfig":"88"},{"size":5868,"mtime":1628399795564,"results":"153","hashOfConfig":"88"},{"size":595,"mtime":1628396497074,"results":"154","hashOfConfig":"88"},{"size":1936,"mtime":1628396497051,"results":"155","hashOfConfig":"88"},{"size":2823,"mtime":1628407480576,"results":"156","hashOfConfig":"88"},{"size":858,"mtime":1628401806276,"results":"157","hashOfConfig":"88"},{"size":1942,"mtime":1628396497053,"results":"158","hashOfConfig":"88"},{"size":1805,"mtime":1628396497049,"results":"159","hashOfConfig":"88"},{"size":2395,"mtime":1628405817383,"results":"160","hashOfConfig":"88"},{"size":7131,"mtime":1628406181635,"results":"161","hashOfConfig":"88"},{"size":1857,"mtime":1628405708282,"results":"162","hashOfConfig":"88"},{"size":637,"mtime":1628406818488,"results":"163","hashOfConfig":"88"},{"size":1640,"mtime":1628399795566,"results":"164","hashOfConfig":"88"},{"size":638,"mtime":1628396497077,"results":"165","hashOfConfig":"88"},{"size":472,"mtime":1628396497076,"results":"166","hashOfConfig":"88"},{"size":509,"mtime":1628396497103,"results":"167","hashOfConfig":"88"},{"size":1341,"mtime":1628396497103,"results":"168","hashOfConfig":"88"},{"size":2720,"mtime":1628396497105,"results":"169","hashOfConfig":"88"},{"size":486,"mtime":1628396497078,"results":"170","hashOfConfig":"88"},{"size":120,"mtime":1628396497073,"results":"171","hashOfConfig":"88"},{"size":218,"mtime":1628398336964,"results":"172","hashOfConfig":"88"},{"size":6789,"mtime":1628399671244,"results":"173","hashOfConfig":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},"1ibh079",{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"176"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"176"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"176"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"176"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"176"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"176"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"176"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"176"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"176"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"176"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"176"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"176"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"176"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"176"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"176"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"176"},"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\index.js",[],["363","364"],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\reportWebVitals.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\App.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Users.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\HomePage\\Home.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Layouts\\DashboardLayout.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Layouts\\PublicLayout.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Profile.js",["365","366"],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\store.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\AppTabs.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\ContentWrapper.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\Forum.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\rootReducers.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\rootSaga.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Navigation\\NavBarPublic.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Navigation\\NavBar.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Projects.js",["367","368"],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Skills.js",["369","370"],"import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Select, Tag, Button, PageHeader } from 'antd';\r\nimport SectionDivider from '../utils/SectionDivider';\r\nimport { Input, Tooltip } from 'antd';\r\nimport { InfoCircleOutlined, TagsOutlined } from '@ant-design/icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from 'redux/Profile/actions';\r\nimport { getRandomColor } from '../tools/colorGenerator';\r\n\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\n\r\nfunction Skills({ user_id }) {\r\n  const [tags, setTags] = useState([]);\r\n  const [tagsList, setTagsList] = useState(null);\r\n  const [skillListComponent, setSkillListComponent] = useState(null);\r\n  const [addSkill, setAddSkill] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const { userId } = useSelector((state) => state.authenticateReducer);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: actions.GETSKILLS,\r\n    });\r\n    dispatch({\r\n      type: actions.GETUSERSKILLS,\r\n      payload: {\r\n        user_id: user_id ? user_id : userId,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const { skillList, userSkillList } = useSelector(\r\n    (state) => state.profileReducer,\r\n  );\r\n\r\n  useEffect(() => {\r\n    let SkillListComponent1 = null;\r\n    SkillListComponent1 = skillList.map(function (skill) {\r\n      return (\r\n        <Option value={skill}>\r\n          <div className='demo-option-label-item'>{skill}</div>\r\n        </Option>\r\n      );\r\n    });\r\n    setSkillListComponent(SkillListComponent1);\r\n  }, [skillList]);\r\n\r\n  useEffect(() => {\r\n    let tagsList1 = null;\r\n    tagsList1 = userSkillList.map(function (tag, index) {\r\n      return (\r\n        <Tag key={index} color={getRandomColor(tag)}>\r\n          {tag}\r\n        </Tag>\r\n      );\r\n    });\r\n    setTagsList(tagsList1);\r\n  }, []);\r\n\r\n  function handleChange(value) {\r\n    //console.log(`selected ${value}`);\r\n    setTags(value);\r\n    let tagsList1 = null;\r\n    tagsList1 = tags.map(function (tag, index) {\r\n      return (\r\n        <Tag key={index} color={getRandomColor(tag)}>\r\n          {tag}\r\n        </Tag>\r\n      );\r\n    });\r\n    setTagsList(tagsList1);\r\n  }\r\n\r\n  function addNewSkillFunc() {\r\n    dispatch({\r\n      type: actions.ADDSKILL,\r\n      payload: {\r\n        skill: addSkill,\r\n      },\r\n    });\r\n    dispatch({\r\n      type: actions.GETSKILLS,\r\n    });\r\n  }\r\n\r\n  const updateUserSkillList = () => {\r\n    console.log('update to ', tags);\r\n    let resultTags = {};\r\n    for (let i = 0; i < tags.length; i++) {\r\n      resultTags[i] = tags[i];\r\n    }\r\n    dispatch({\r\n      type: actions.UPDATEUSERSKILLS,\r\n      payload: {\r\n        user_id: userId,\r\n        skills: resultTags,\r\n      },\r\n    });\r\n    dispatch({\r\n      type: actions.GETUSERSKILLS,\r\n      payload: {\r\n        user_id: userId,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        className='forum-page-header skill-options'\r\n        // extra={<ForumPageHeaderExtras page='Feeds' />}\r\n      >\r\n        <Row gutter={16} className=''>\r\n          <Col span={18}>\r\n            {skillList?.length > 0 && (\r\n              <Select\r\n                mode='multiple'\r\n                style={{ width: '80%' }}\r\n                placeholder='select skills'\r\n                defaultValue={userSkillList}\r\n                onChange={handleChange}\r\n              >\r\n                {skillListComponent}\r\n              </Select>\r\n            )}\r\n            <Button type='primary' onClick={updateUserSkillList}>\r\n              Add Skills\r\n            </Button>\r\n          </Col>\r\n          <Col span={6}>\r\n            <Search\r\n              placeholder='Add new tag'\r\n              enterButton='Add Tag'\r\n              value={addSkill}\r\n              onChange={(e) => setAddSkill(e.target.value)}\r\n              onSearch={() => addNewSkillFunc()}\r\n              prefix={<TagsOutlined className='site-form-item-icon' />}\r\n              suffix={\r\n                <Tooltip title='Only Add new tag if already not present!'>\r\n                  <InfoCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />\r\n                </Tooltip>\r\n              }\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </PageHeader>\r\n\r\n      <SectionDivider />\r\n      <div className='list-card'>{tagsList}</div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Skills;\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\Reviews.js",["371","372","373","374","375"],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\HomePage\\HomeFeature.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\ForumLayout.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\AppTitles.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\HomePage\\HomeBanner.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\SectionDivider.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\ForumPageHeaderSelections.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Authenticate\\actions.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Authenticate\\reducer.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Authenticate\\saga.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Forum\\saga.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Forum\\reducer.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Forum\\actions.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\AppTexts.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\useWindowSize.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\Buttons.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\Config\\axiosClient.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\MultipleSelects.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\Config\\constants.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\LoginPage.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\RegisterPage.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\RegisterForm.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Authentication\\LoginForm.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\Message.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\MessagesLayout.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\ForumPage.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\MessagesPage.js",["376"],"import React, { useState, useEffect } from 'react';\r\nimport { Layout, Menu, Tooltip, Avatar, Empty } from 'antd';\r\nimport UserDetails from './UserDetails';\r\nimport UserMessager from './utils/UserMessager';\r\nimport { truncateName } from 'components/tools/getTruncatedName';\r\nimport { getRandomColor } from 'components/tools/colorGenerator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport actions from 'redux/Messages/actions';\r\nimport { useInterval } from 'components/tools/useInterval';\r\nimport logoimg from 'assets/logo/medium.png';\r\nimport AppTexts from 'components/utils/AppTexts';\r\n\r\nconst { Content, Sider } = Layout;\r\nexport default function MessagesPage() {\r\n  const { userId } = useSelector((state) => state.authenticateReducer);\r\n  const { contacts } = useSelector((state) => state.messageReducer);\r\n  const { profileData } = useSelector((state) => state.profileReducer);\r\n  const dispatch = useDispatch();\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [activeContact, setActiveContact] = useState(contacts?.[0]);\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: actions.GETCONTACTS,\r\n      userId: userId,\r\n    });\r\n    return () => {};\r\n  }, []);\r\n  useInterval(() => {\r\n    // put your interval code here.\r\n    dispatch({\r\n      type: actions.GETCONTACTS,\r\n      userId: userId,\r\n    });\r\n    return () => {};\r\n  }, 1000 * 1);\r\n\r\n  const onCollapse = (collapsed) => {\r\n    setCollapsed(collapsed);\r\n  };\r\n  const onCollapseToggle = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n  const onContactSelect = (id) => {\r\n    let selectedContact = contacts.filter((contact) => contact?.user_id === id);\r\n    setActiveContact(selectedContact[0]);\r\n  };\r\n  return (\r\n    <div className='messages-page-wrapper'>\r\n      <Layout>\r\n        <Sider\r\n          collapsed={collapsed}\r\n          onCollapse={onCollapse}\r\n          style={{\r\n            position: 'absolute',\r\n            left: 0,\r\n            zIndex: 999,\r\n          }}\r\n        >\r\n          <UserDetails\r\n            userName={`${profileData?.profile?.first_name}\r\n                ${profileData?.profile?.last_name}`}\r\n          />\r\n          <Menu\r\n            theme='dark'\r\n            mode='inline'\r\n            onSelect={(event) => onContactSelect(event.key)}\r\n            defaultSelectedKeys={[contacts?.[0]?.user_id]}\r\n          >\r\n            {contacts\r\n              ? contacts.map((contact) => (\r\n                  <Menu.Item\r\n                    key={contact?.user_id}\r\n                    className='messager-sidebar-menu-item'\r\n                    icon={\r\n                      <Avatar\r\n                        style={{\r\n                          backgroundColor: getRandomColor(contact?.first_name),\r\n                        }}\r\n                        className='message-menu-item-avatar'\r\n                        // icon={<UserOutlined />}\r\n                      >\r\n                        {truncateName(\r\n                          `${contact.first_name} ${contact.last_name}`,\r\n                        )}\r\n                      </Avatar>\r\n                    }\r\n                  >\r\n                    <Tooltip title={contact.first_name} placement='right'>\r\n                      {`${contact.first_name} ${contact.last_name}`}\r\n                    </Tooltip>\r\n                  </Menu.Item>\r\n                ))\r\n              : null}\r\n          </Menu>\r\n        </Sider>\r\n        <Layout style={!collapsed ? { marginLeft: 205 } : { marginLeft: 85 }}>\r\n          <Content style={{}}>\r\n            {activeContact ? (\r\n              <UserMessager\r\n                contact={activeContact}\r\n                collapsed={collapsed}\r\n                handleBack={onCollapseToggle}\r\n              />\r\n            ) : (\r\n              <Empty\r\n                className='empty-chat'\r\n                image={logoimg}\r\n                imageStyle={{\r\n                  height: 60,\r\n                }}\r\n                description={\r\n                  <AppTexts\r\n                    className='strong'\r\n                    // content='Please select a contact to start'\r\n                  />\r\n                }\r\n              ></Empty>\r\n            )}\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\Search.js",["377","378","379","380"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport actions from 'redux/Forum/actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport Feed from './utils/Feed';\r\nimport { Row, Empty } from 'antd';\r\nimport Buttons from 'components/utils/Buttons';\r\nimport UserCard from './utils/UserCard';\r\nimport ProjectCard from './utils/ProjectCard';\r\nimport ProjectModal from 'components/Profile/ProjectModal';\r\nimport UserModal from 'components/utils/UserModal';\r\nimport ForumPhSearchExtras from '../HeaderExtras/ForumPhSearchExtras';\r\nimport capitalize from 'components/tools/capitalize';\r\nimport logoimg from 'assets/logo/medium.png';\r\n\r\nexport default function Search() {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState([]);\r\n  const [idForModal, setIdForModal] = useState('');\r\n  const [userIdModal, setUserIdModal] = useState(null);\r\n  const [isUserModalVisible, setIsUserModalVisible] = useState(false);\r\n  const [isProjectModalVisible, setIsProjectModalVisible] = useState(false);\r\n  const { searchData, searchString, searchLoading } = useSelector(\r\n    (state) => state.forumReducer,\r\n  );\r\n  function getDummy() {\r\n    let numberofDummy = 5;\r\n    let dummyData = [];\r\n    for (var i = 0; i < numberofDummy; i++) {\r\n      dummyData.push({ title: `dummy${i}`, loading: true });\r\n    }\r\n    return dummyData;\r\n  }\r\n  const doSearch = () => {\r\n    dispatch({\r\n      type: actions.TOGGLESTATE,\r\n      payload: { label: 'searchLoading', value: true },\r\n    });\r\n    dispatch({\r\n      type: actions.SEARCHFEEDS,\r\n      params: { searchString: searchString },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let results = searchData;\r\n    results = results.filter((result) => result.score > 0);\r\n    setData(results);\r\n    return () => {};\r\n  }, [searchData]);\r\n  const addMoreFeeds = () => {\r\n    setData([...getDummy()]);\r\n    doSearch();\r\n    return () => {};\r\n  };\r\n\r\n  const handleMoreDetails = (type, id) => {\r\n    console.log(type, id);\r\n    setIdForModal(id);\r\n    if (type === 'project_id') {\r\n      setIsProjectModalVisible(true);\r\n    } else {\r\n      setUserIdModal(id);\r\n      setIsUserModalVisible(true);\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    setIsProjectModalVisible(false);\r\n    setIsUserModalVisible(false);\r\n  };\r\n  if (data.length > 0) {\r\n    return (\r\n      <>\r\n        <ProjectModal\r\n          isProjectModalVisible={isProjectModalVisible}\r\n          projectId={idForModal}\r\n          handleProjectModalCancel={handleCancel}\r\n        />\r\n        <UserModal\r\n          isModalVisible={isUserModalVisible}\r\n          projectId={idForModal}\r\n          handleCancel={handleCancel}\r\n          userID={userIdModal}\r\n        />\r\n        <InfiniteScroll\r\n          pageStart={0}\r\n          initialLoad={false}\r\n          // loadMore={}\r\n          hasMore={true || false}\r\n          // element={ListWrapper}\r\n          loader={\r\n            <div className='feed-loader-wrapper' key={0}>\r\n              {/* <Space direction='vertical'>\r\n                <Buttons\r\n                  type='primary'\r\n                  loading={searchLoading}\r\n                  handleClick={() => addMoreFeeds()}\r\n                  content={searchLoading ? 'Loading More' : 'Load More'}\r\n                ></Buttons>\r\n              </Space> */}\r\n            </div>\r\n          }\r\n          threshold={100}\r\n        >\r\n          <Row className='search-result-container' gutter={[16, 16]}>\r\n            {data.map((searchResult, index) =>\r\n              !searchResult?.project_id ? (\r\n                <UserCard\r\n                  key={searchResult.title + index}\r\n                  index={index}\r\n                  city={searchResult.city}\r\n                  country={searchResult.country}\r\n                  first_name={capitalize(searchResult.first_name)}\r\n                  last_name={capitalize(searchResult.last_name)}\r\n                  links={searchResult.links}\r\n                  pic={searchResult.pic}\r\n                  score={searchResult.score}\r\n                  state={searchResult.state}\r\n                  title={searchResult.title}\r\n                  user_id={searchResult.user_id}\r\n                  zipcode={searchResult.zipcode}\r\n                  loading={searchLoading}\r\n                  handleClick={handleMoreDetails}\r\n                />\r\n              ) : (\r\n                <ProjectCard\r\n                  key={searchResult.title + index}\r\n                  index={index}\r\n                  project_description={searchResult.project_description}\r\n                  project_id={searchResult.project_id}\r\n                  project_location={searchResult.project_location}\r\n                  project_requirement={searchResult.project_requirement}\r\n                  project_start_date={searchResult.project_start_date}\r\n                  project_title={searchResult.project_title}\r\n                  score={searchResult.score}\r\n                  loading={searchLoading}\r\n                  handleClick={handleMoreDetails}\r\n                />\r\n              ),\r\n            )}\r\n          </Row>\r\n        </InfiniteScroll>\r\n      </>\r\n    );\r\n  } else if (searchLoading) {\r\n    return (\r\n      <Empty\r\n        className='empty-search'\r\n        image={logoimg}\r\n        imageStyle={{\r\n          height: 60,\r\n        }}\r\n        description={<span>Collecting Search Results...</span>}\r\n      ></Empty>\r\n    );\r\n  } else {\r\n    return (\r\n      <Empty\r\n        className='empty-search'\r\n        image={logoimg}\r\n        description={\r\n          searchData.length === 0 ? (\r\n            <div\r\n              style={{ minWidth: '300px', margin: 'auto', marginTop: '50px' }}\r\n            >\r\n              <ForumPhSearchExtras />\r\n            </div>\r\n          ) : (\r\n            <div\r\n              style={{ minWidth: '300px', margin: 'auto', marginTop: '50px' }}\r\n            >\r\n              {' '}\r\n              <span> No matching results found...</span>\r\n            </div>\r\n          )\r\n        }\r\n      >\r\n        {/* <Buttons handleClick={doSearch} content='Retry Search' /> */}\r\n      </Empty>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\Recommendations.js",["381","382"],"import React, { useEffect, useState } from 'react';\r\nimport actions from 'redux/Forum/actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport RecommMM from './utils/RecommM&M';\r\nimport { Space, Empty, Row } from 'antd';\r\nimport Buttons from 'components/utils/Buttons';\r\nimport RecommProjects from './utils/RecommProjects';\r\nimport ProjectModal from 'components/Profile/ProjectModal';\r\nimport UserModal from 'components/utils/UserModal';\r\nimport capitalize from 'components/tools/capitalize';\r\nimport logoimg from 'assets/logo/medium.png';\r\n\r\nexport default function Recommendations() {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    recommLoading,\r\n    recommselectedtype,\r\n    contentRecommMentees,\r\n    contentRecommMentors,\r\n    contentRecommProjects,\r\n  } = useSelector((state) => state.forumReducer);\r\n  const { userId } = useSelector((state) => state.authenticateReducer);\r\n  const [idForModal, setIdForModal] = useState('');\r\n  const [isUserModalVisible, setIsUserModalVisible] = useState(false);\r\n  const [isProjectModalVisible, setIsProjectModalVisible] = useState(false);\r\n  var displayData = [];\r\n  // function getDummy() {\r\n  //   let numberofDummy = 5;\r\n  //   let dummyData = [];\r\n  //   for (var i = 0; i < numberofDummy; i++) {\r\n  //     dummyData.push({ title: `dummy${i}`, loading: true });\r\n  //   }\r\n  //   return dummyData;\r\n  // }\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: actions.GETRECOMM,\r\n      params: { user_id: userId, recommType: recommselectedtype },\r\n    });\r\n    return () => {};\r\n  }, [recommselectedtype, dispatch]);\r\n\r\n  const addMoreRecomm = () => {\r\n    dispatch({\r\n      type: actions.RECOMMLOADING,\r\n      isloading: true,\r\n    });\r\n    switch (recommselectedtype) {\r\n      case 'project':\r\n        dispatch({\r\n          type: actions.ADDRECOMM,\r\n          params: { user_id: userId, recommType: recommselectedtype },\r\n        });\r\n        break;\r\n      case 'mentees':\r\n        dispatch({\r\n          type: actions.ADDRECOMM,\r\n          params: { user_id: userId, recommType: recommselectedtype },\r\n        });\r\n        break;\r\n      case 'mentor':\r\n        dispatch({\r\n          type: actions.ADDRECOMM,\r\n          params: { user_id: userId, recommType: recommselectedtype },\r\n        });\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const handleMoreDetails = (type, id) => {\r\n    console.log(id);\r\n    setIdForModal(id);\r\n    if (type === 'project_id') {\r\n      setIsProjectModalVisible(true);\r\n    } else {\r\n      setIsUserModalVisible(true);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsProjectModalVisible(false);\r\n    setIsUserModalVisible(false);\r\n  };\r\n  if (recommselectedtype === 'project') displayData = contentRecommProjects;\r\n  else if (recommselectedtype === 'mentees') displayData = contentRecommMentees;\r\n  else displayData = contentRecommMentors;\r\n\r\n  if (displayData.length > 0) {\r\n    return (\r\n      <>\r\n        <ProjectModal\r\n          isProjectModalVisible={isProjectModalVisible}\r\n          projectId={idForModal}\r\n          handleProjectModalCancel={handleCancel}\r\n        />\r\n        <UserModal\r\n          isModalVisible={isUserModalVisible}\r\n          userID={idForModal}\r\n          handleCancel={handleCancel}\r\n        />\r\n        <InfiniteScroll\r\n          pageStart={0}\r\n          initialLoad={false}\r\n          loadMore={() => addMoreRecomm()}\r\n          hasMore={true || false}\r\n          // element={ListWrapper}\r\n          loader={\r\n            <div className='Recomm-loader-wrapper' key={0}>\r\n              {/* <Space direction='vertical'>\r\n                <Buttons\r\n                  type='primary'\r\n                  loading={recommLoading}\r\n                  handleClick={() => addMoreRecomm()}\r\n                  content={recommLoading ? 'Loading More' : 'Load More'}\r\n                ></Buttons>\r\n              </Space> */}\r\n            </div>\r\n          }\r\n          threshold={150}\r\n        >\r\n          <Row className='recommendation-container' gutter={[16, 16]}>\r\n            {displayData.map((recomm, index) =>\r\n              recommselectedtype !== 'project' ? (\r\n                <RecommMM\r\n                  key={recomm?.first_name + index}\r\n                  index={index}\r\n                  city={recomm?.city}\r\n                  country={recomm?.country}\r\n                  profilePicLink={recomm?.profile_link}\r\n                  firstName={capitalize(recomm?.first_name)}\r\n                  lastName={capitalize(recomm?.last_name)}\r\n                  email={recomm?.email}\r\n                  user_id={recomm?.user_id}\r\n                  skills={recomm?.skill_name}\r\n                  loading={recomm?.loading}\r\n                  userType={recomm?.user_type}\r\n                  handleClick={handleMoreDetails}\r\n                />\r\n              ) : (\r\n                <RecommProjects\r\n                  index={index}\r\n                  key={recomm?.first_name + index}\r\n                  projectTitle={recomm?.title}\r\n                  firstName={capitalize(recomm?.first_name)}\r\n                  lastName={capitalize(recomm?.last_name)}\r\n                  projectDescription={recomm?.description}\r\n                  email={recomm?.email}\r\n                  projectStatus={recomm?.status}\r\n                  user_id={recomm?.user_id}\r\n                  project_id={recomm?.project_id}\r\n                  loading={recomm?.loading}\r\n                  userType={recomm?.user_type}\r\n                  location={recomm?.location}\r\n                  startDate={recomm?.start_date}\r\n                  skills={recomm?.skill_name}\r\n                  handleClick={handleMoreDetails}\r\n                />\r\n              ),\r\n            )}\r\n          </Row>\r\n        </InfiniteScroll>\r\n      </>\r\n    );\r\n  } else if (recommLoading) {\r\n    return (\r\n      <Empty\r\n        className='empty-search'\r\n        image={logoimg}\r\n        imageStyle={{\r\n          height: 60,\r\n        }}\r\n        description={<span>Collecting Recommendations...</span>}\r\n      >\r\n        {contentRecommMentors}\r\n        {contentRecommMentees}\r\n        {contentRecommProjects}\r\n      </Empty>\r\n    );\r\n  } else {\r\n    return (\r\n      <Empty\r\n        className='empty-search'\r\n        image={logoimg}\r\n        imageStyle={{\r\n          height: 60,\r\n        }}\r\n        description={<span>Waiting for Recommendations...</span>}\r\n      >\r\n        <Buttons handleClick={addMoreRecomm} content='Retry loading Recomm' />\r\n      </Empty>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\Feeds.js",["383","384","385"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport actions from 'redux/Forum/actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport Feed from './utils/Feed';\r\nimport searcher from 'components/tools/searcher';\r\nimport { Space, Empty } from 'antd';\r\nimport Buttons from 'components/utils/Buttons';\r\nimport ProjectModal from 'components/Profile/ProjectModal';\r\nimport sorter from 'components/tools/sorter';\r\nimport capitalize from 'components/tools/capitalize';\r\n\r\nexport default function Feeds() {\r\n  const dispatch = useDispatch();\r\n  const { contentFeeds, feedLoading, feedSortBy, feedSearchString } =\r\n    useSelector((state) => state.forumReducer);\r\n  let currentContentFeed = useRef(contentFeeds);\r\n  const [data, setData] = useState([]);\r\n  const [idForModal, setIdForModal] = useState('');\r\n  const [isUserModalVisible, setIsUserModalVisible] = useState(false);\r\n  const [isProjectModalVisible, setIsProjectModalVisible] = useState(false);\r\n  const handleMoreDetails = (type, id) => {\r\n    setIdForModal(id);\r\n    if (type === 'project_id') {\r\n      setIsProjectModalVisible(true);\r\n    } else {\r\n      setIsUserModalVisible(true);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsProjectModalVisible(false);\r\n    setIsUserModalVisible(false);\r\n  };\r\n  function getDummy() {\r\n    let numberofDummy = 5;\r\n    let dummyData = [];\r\n    for (var i = 0; i < numberofDummy; i++) {\r\n      dummyData.push({ title: `dummy${i}`, loading: true });\r\n    }\r\n    return dummyData;\r\n  }\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    // eslint-disable-next-line\r\n    setData([...currentContentFeed.current, ...getDummy()]);\r\n    dispatch({\r\n      type: actions.GETFEEDS,\r\n      params: { filters: [], type: [] },\r\n    });\r\n    return () => {};\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    let sortedContent = sorter([...contentFeeds], feedSortBy);\r\n\r\n    setData(sortedContent);\r\n    return () => {};\r\n  }, [contentFeeds]);\r\n  useEffect(() => {\r\n    let filteredContent = searcher(\r\n      feedSearchString,\r\n      [...contentFeeds],\r\n      ['post_title'],\r\n    );\r\n    let sortedContent = sorter([...filteredContent], feedSortBy);\r\n    setData(sortedContent);\r\n    return () => {};\r\n  }, [feedSortBy, feedSearchString]);\r\n\r\n  const addMoreFeeds = () => {\r\n    // dispatch({\r\n    //   type: actions.FEEDLOADING,\r\n    //   isloading: true,\r\n    // });\r\n    // setData([...data, ...getDummy()]);\r\n    // dispatch({\r\n    //   type: actions.ADDFEEDS,\r\n    //   params: { filters: [], type: [] },\r\n    // });\r\n  };\r\n  if (data.length > 0) {\r\n    return (\r\n      <>\r\n        <ProjectModal\r\n          isProjectModalVisible={isProjectModalVisible}\r\n          projectId={idForModal}\r\n          handleProjectModalCancel={handleCancel}\r\n        />\r\n        <InfiniteScroll\r\n          pageStart={0}\r\n          initialLoad={false}\r\n          loadMore={() => addMoreFeeds()}\r\n          hasMore={true || false}\r\n          // element={ListWrapper}\r\n          loader={\r\n            <div className='feed-loader-wrapper' key={0}>\r\n              {/* <Space direction='vertical'>\r\n                <Buttons\r\n                  type='primary'\r\n                  loading={feedLoading}\r\n                  handleClick={() => addMoreFeeds()}\r\n                  content={feedLoading ? 'Loading More' : 'Load More'}\r\n                ></Buttons>\r\n              </Space> */}\r\n            </div>\r\n          }\r\n          threshold={100}\r\n        >\r\n          <Space size={10} className='full-wide' direction='vertical'>\r\n            {data.map((feed, index) => (\r\n              <Feed\r\n                key={feed.post_id}\r\n                index={index}\r\n                project_id={feed.project_id}\r\n                firstName={capitalize(feed.user_first_name)}\r\n                lastName={capitalize(feed.user_last_name)}\r\n                title={feed.post_title || 'Default Post Title'}\r\n                description={feed.post_content}\r\n                lastModified={feed.post_last_modified}\r\n                createdAt={feed.timestamp}\r\n                postOwner={feed.postOwner}\r\n                commentCount={feed.comments?.length || 0}\r\n                comments={feed.comments}\r\n                loading={feed?.loading}\r\n                postId={feed.post_id}\r\n                userId={feed.user_id}\r\n                handleClick={handleMoreDetails}\r\n              />\r\n            ))}\r\n          </Space>\r\n        </InfiniteScroll>\r\n      </>\r\n    );\r\n  } else if (feedLoading) {\r\n    return (\r\n      <Empty\r\n        image='https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg'\r\n        imageStyle={{\r\n          height: 60,\r\n        }}\r\n        description={<span>Collecting Feeds...</span>}\r\n      ></Empty>\r\n    );\r\n  } else {\r\n    return (\r\n      <Empty\r\n        image='https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg'\r\n        imageStyle={{\r\n          height: 60,\r\n        }}\r\n        description={<span>No Feeds...</span>}\r\n      >\r\n        <Buttons handleClick={addMoreFeeds} content='Retry loading feeds' />\r\n      </Empty>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPageHeaderExtras.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\UserDetails.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\ViewWrapper.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\UserMessager.js",["386","387"],"import React, { useState, useEffect } from 'react';\r\nimport Editor from 'components/Messages/utils/Editor';\r\nimport MessagePreview from './MessagePreview';\r\nimport { Empty, notification, PageHeader } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport actions from 'redux/Messages/actions';\r\nimport { useInterval } from 'components/tools/useInterval';\r\nimport logoimg from 'assets/logo/medium.png';\r\n\r\nimport {\r\n  ArrowLeftOutlined,\r\n  BarsOutlined,\r\n  RedoOutlined,\r\n} from '@ant-design/icons';\r\nimport Buttons from 'components/utils/Buttons';\r\nimport AppTexts from 'components/utils/AppTexts';\r\nexport default function UserMessager({ contact, handleBack, collapsed }) {\r\n  const dispatch = useDispatch();\r\n  const { userId } = useSelector((state) => state.authenticateReducer);\r\n  const { messages } = useSelector((state) => state.messageReducer);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [newComment, setNewComment] = useState('');\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: actions.GET_MESSAGES,\r\n      toUser: contact.user_id.split('_')[1],\r\n      fromUser: userId,\r\n    });\r\n    return () => {};\r\n  }, []);\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: actions.GET_MESSAGES,\r\n      toUser: contact.user_id.split('_')[1],\r\n      fromUser: userId,\r\n    });\r\n    return () => {};\r\n  }, [contact]);\r\n  useInterval(() => {\r\n    // put your interval code here.\r\n    dispatch({\r\n      type: actions.GET_MESSAGES,\r\n      toUser: contact.user_id.split('_')[1],\r\n      fromUser: userId,\r\n    });\r\n    return () => {};\r\n  }, 1000 * 1);\r\n  const handleChange = (e) => {\r\n    setNewComment(e.target.value);\r\n  };\r\n  const handleReloadChat = (e) => {\r\n    dispatch({\r\n      type: actions.GET_MESSAGES,\r\n      toUser: contact.user_id.split('_')[1],\r\n      fromUser: userId,\r\n    });\r\n  };\r\n  const handleSubmit = () => {\r\n    if (newComment.length === 0) {\r\n      notification['info']({\r\n        message: 'Please enter message',\r\n        // description: response?.data?.message,\r\n        placement: 'bottomRight',\r\n      });\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    dispatch({\r\n      type: actions.POSTMESSAGE,\r\n      payload: {\r\n        Content: newComment,\r\n        from_user_id: Number(userId),\r\n        to_user_id: Number(contact.user_id.split('_')[1]),\r\n      },\r\n    });\r\n    setSubmitting(false);\r\n    setNewComment('');\r\n  };\r\n  return (\r\n    <div className='messager-wrapper'>\r\n      <PageHeader\r\n        className='site-page-header'\r\n        title={`${contact?.first_name} ${contact?.last_name}`}\r\n        extra={[\r\n          <Buttons\r\n            type='primary'\r\n            shape='round'\r\n            handleClick={handleReloadChat}\r\n            content={<RedoOutlined />}\r\n          />,\r\n        ]}\r\n        subTitle={contact?.status}\r\n        onBack={handleBack}\r\n        backIcon={collapsed ? <BarsOutlined /> : <ArrowLeftOutlined />}\r\n      />\r\n      {messages[contact.user_id.split('_')[1]] && (\r\n        <MessagePreview messages={messages[contact.user_id.split('_')[1]]} />\r\n      )}\r\n      {!messages[contact.user_id.split('_')[1]] && (\r\n        <Empty\r\n          className='empty-chat'\r\n          image={logoimg}\r\n          imageStyle={{\r\n            height: 60,\r\n          }}\r\n          description={\r\n            <AppTexts className='strong' content='Waiting for messages...' />\r\n          }\r\n        ></Empty>\r\n      )}\r\n      <Editor\r\n        handleChange={handleChange}\r\n        handleSubmit={handleSubmit}\r\n        submitting={submitting}\r\n        newComment={newComment}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\ViewWrapper.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\Feed.js",["388"],"import React, { useState } from 'react';\r\nimport { List, Avatar, Space, Skeleton, Tooltip, Button } from 'antd';\r\nimport { MessageOutlined } from '@ant-design/icons';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport AppTexts from 'components/utils/AppTexts';\r\nimport ViewWrapper from 'components/Forum/contentPage/utils/ViewWrapper';\r\nimport CommentsWrapper from 'components/utils/CommentsWrapper';\r\nimport moment from 'moment';\r\nimport { ExpandOutlined } from '@ant-design/icons';\r\nimport { getRandomColor } from 'components/tools/colorGenerator';\r\n\r\nconst IconText = ({ icon, text, handleClick }) => (\r\n  <Space onClick={handleClick}>\r\n    {'Comments'}\r\n    {React.createElement(icon)}\r\n    {text}\r\n  </Space>\r\n);\r\nconst defaultText =\r\n  'The Career Ready Mentoring Program connects UNSW students from their second year of study onwards with established industry professionals, providing students with a significant opportunity to focus on career development during the transition from study to work.';\r\nexport default function Feed({\r\n  index,\r\n  title,\r\n  description,\r\n  lastModified,\r\n  createdAt,\r\n  postOwner,\r\n  commentCount,\r\n  comments,\r\n  postId,\r\n  firstName,\r\n  lastName,\r\n  handleClick,\r\n  project_id,\r\n  ...rest\r\n}) {\r\n  const [commentsVisible, setCommentsVisible] = useState(false);\r\n  const toggleComments = () => {\r\n    setCommentsVisible(!commentsVisible);\r\n  };\r\n  return (\r\n    <ViewWrapper>\r\n      <List className='feed-list-wrapper'>\r\n        <List.Item\r\n          key={title + index}\r\n          actions={[\r\n            <IconText\r\n              icon={MessageOutlined}\r\n              text={commentCount}\r\n              handleClick={toggleComments}\r\n              key='list-vertical-message'\r\n            />,\r\n            <Button onClick={() => handleClick('project_id', project_id)}>\r\n              <ExpandOutlined key='expand' />\r\n              View Project\r\n            </Button>,\r\n          ]}\r\n          className='feed-list-item'\r\n        >\r\n          <Skeleton loading={{ ...rest }?.loading} active avatar>\r\n            <List.Item.Meta\r\n              avatar={\r\n                <>\r\n                  <Avatar\r\n                    style={{ backgroundColor: getRandomColor(title) }}\r\n                    icon={<UserOutlined />}\r\n                  />\r\n                </>\r\n              }\r\n              title={\r\n                <>\r\n                  <AppTexts\r\n                    containerStyles='nomargin'\r\n                    className='small'\r\n                    content={`${firstName || 'Amel '} ${lastName || 'Johny'}`}\r\n                  ></AppTexts>\r\n\r\n                  <AppTexts className='mediumlarge' content={title}></AppTexts>\r\n                  <Tooltip\r\n                    placement='left'\r\n                    title={moment()\r\n                      .subtract(1, 'days')\r\n                      .format('YYYY-MM-DD HH:mm:ss')}\r\n                  >\r\n                    <AppTexts\r\n                      content={moment(new Date(createdAt * 1000))\r\n                        .subtract(0, 'days')\r\n                        .fromNow()}\r\n                    />\r\n                  </Tooltip>\r\n                </>\r\n              }\r\n              description={<AppTexts content={description} />}\r\n            />\r\n          </Skeleton>\r\n        </List.Item>\r\n        {commentsVisible && (\r\n          <CommentsWrapper\r\n            postId={postId}\r\n            defaultComments={comments ? comments : []}\r\n          />\r\n        )}\r\n      </List>\r\n    </ViewWrapper>\r\n  );\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPhRecomExtras.js",["389","390","391"],"import React from 'react';\r\nimport Buttons from 'components/utils/Buttons';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport actions from 'redux/Forum/actions';\r\nimport SingleSelect from 'components/utils/SingleSelect';\r\nimport { Space, Row } from 'antd';\r\n\r\nconst optionsType = [\r\n  { value: 'mentor', label: 'Mentors' },\r\n  { value: 'mentees', label: 'Mentees' },\r\n  { value: 'project', label: 'Projects' },\r\n];\r\nexport default function ForumPhRecomExtras() {\r\n  const dispatch = useDispatch();\r\n  const { recommselectedtype, loader } = useSelector(\r\n    (state) => state.forumReducer,\r\n  );\r\n  const onValueChangeTypes = (values) => {\r\n    dispatch({\r\n      type: actions.UPDATERECOMTYPES,\r\n      payload: { recommendationsselectedtypes: values },\r\n    });\r\n  };\r\n  const toggleLoading = () => {\r\n    dispatch({\r\n      type: actions.TOGGLELOADING,\r\n      payload: { loader: !loader },\r\n    });\r\n  };\r\n  return (\r\n    <Row\r\n      lg={20}\r\n      md={20}\r\n      sm={20}\r\n      xs={22}\r\n      justify='space-between'\r\n      align='middle'\r\n      className='forum-page-header-extra-wrapper'\r\n    >\r\n      <Space className='forum-page-header-extra-spacer'>\r\n        <SingleSelect\r\n          defaultValue={recommselectedtype}\r\n          selectOptions={optionsType}\r\n          placeholder='Select Types'\r\n          handleChange={(values) => onValueChangeTypes(values)}\r\n          // tagRender={() => <>{null}</>}\r\n          className='multiselect forum-recom-type-select'\r\n        />\r\n        {/* <Buttons\r\n          type='primary'\r\n          shape='round'\r\n          icon={<SearchOutlined />}\r\n          content='Get Recommendations'\r\n          handleClick={() => toggleLoading()}\r\n        /> */}\r\n      </Space>\r\n    </Row>\r\n  );\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPhFeedsExtras.js",["392","393","394","395","396"],"import React, { useState } from 'react';\r\nimport Buttons from 'components/utils/Buttons';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { Row, Col, Input, Select } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from 'redux/Forum/actions';\r\nconst { Search } = Input;\r\nconst { Option } = Select;\r\nlet selectOptions = [\r\n  { key: 'timestamp', value: 'timestamp', label: 'Sort by created date' },\r\n  {\r\n    key: 'last_modified',\r\n    value: 'last_modified',\r\n    label: 'Sort by modified date',\r\n  },\r\n];\r\nexport default function ForumPhFeedsExtras() {\r\n  const dispatch = useDispatch();\r\n  const { addPostDraftState, feedSortBy, feedSearchString } = useSelector(\r\n    (state) => state.forumReducer,\r\n  );\r\n  const toggleNewPost = () => {\r\n    dispatch({\r\n      type: actions.TOGGLESTATE,\r\n      payload: { label: 'addPostDraftState', value: !addPostDraftState },\r\n    });\r\n  };\r\n  function onChange(value) {\r\n    dispatch({\r\n      type: actions.FORCEUPDATE,\r\n      payload: { item: 'feedSortBy', value: value },\r\n    });\r\n  }\r\n\r\n  const updateSearchString = (value) => {\r\n    dispatch({\r\n      type: actions.FORCEUPDATE,\r\n      payload: { item: 'feedSearchString', value: value },\r\n    });\r\n  };\r\n  const doSearch = (value) => {};\r\n  return (\r\n    <Row align='middle'>\r\n      <Col\r\n        lg={24}\r\n        md={24}\r\n        sm={24}\r\n        xs={24}\r\n        span={12}\r\n        justify='space-between'\r\n        align='end'\r\n      >\r\n        <Search\r\n          placeholder='search'\r\n          enterButton\r\n          allowClear\r\n          value={feedSearchString}\r\n          onChange={(e) => updateSearchString(e.target.value)}\r\n          onPressEnter={() => doSearch()}\r\n          // onSearch={() => doSearch()}\r\n        />\r\n      </Col>\r\n      {!addPostDraftState && (\r\n        <Col\r\n          lg={24}\r\n          md={24}\r\n          sm={24}\r\n          xs={24}\r\n          span={12}\r\n          justify='center'\r\n          align='end'\r\n          className='new-post-button'\r\n        >\r\n          <Buttons\r\n            type='primary'\r\n            shape='round'\r\n            icon={<PlusOutlined />}\r\n            content='New Post'\r\n            handleClick={() => toggleNewPost()}\r\n          />\r\n        </Col>\r\n      )}\r\n    </Row>\r\n  );\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\HeaderExtras\\ForumPhSearchExtras.js",["397","398","399","400","401","402"],"import React, { useState } from 'react';\r\nimport Buttons from 'components/utils/Buttons';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { Row, Space, Input } from 'antd';\r\nimport MultipleSelects from 'components/utils/MultipleSelects';\r\nimport actions from 'redux/Forum/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst { Search } = Input;\r\nconst options = [\r\n  'JavaScript',\r\n  'Python',\r\n  'C',\r\n  'Java',\r\n  'Go',\r\n  'Perl',\r\n  'Ruby',\r\n  'Swift',\r\n  'Scala',\r\n  'PHP',\r\n  'C++',\r\n  'R',\r\n  'Objective-C',\r\n  'SQL',\r\n  'Arduino ',\r\n  'MATLAB',\r\n  'Rust',\r\n  'TypeScript',\r\n  'Kotlin',\r\n  'CSS',\r\n  'Groovy',\r\n  'Dart',\r\n  'Assembly Language',\r\n  'PowerShell',\r\n  'Julia',\r\n  'Scratch',\r\n  'COBOL',\r\n  'Fortran',\r\n  'ABAP',\r\n  'Scheme',\r\n  'Shell',\r\n  'Prolog',\r\n  'VBScript',\r\n  'Haskell',\r\n  'Delphi',\r\n  'Hack',\r\n  'Pascal',\r\n  'Ada',\r\n  'Lua',\r\n  'Visual Basic',\r\n  'Lisp',\r\n  'Bash',\r\n  'Clojure',\r\n  'MQL4',\r\n  'Apex',\r\n  'LabVIEW',\r\n  'ABL',\r\n  'D',\r\n  'SAS',\r\n  'Logo',\r\n];\r\n\r\nexport default function ForumPhSearchExtras() {\r\n  const dispatch = useDispatch();\r\n  const { searchLoading, searchString } = useSelector(\r\n    (state) => state.forumReducer,\r\n  );\r\n  // const [loading, setLoading] = useState(false);\r\n\r\n  const doSearch = () => {\r\n    dispatch({\r\n      type: actions.TOGGLESTATE,\r\n      payload: { label: 'searchLoading', value: true },\r\n    });\r\n    dispatch({\r\n      type: actions.SEARCHFEEDS,\r\n      params: { searchString: searchString },\r\n    });\r\n  };\r\n  const updateSearchString = (value) => {\r\n    dispatch({\r\n      type: actions.UPDATESEARCHSTRING,\r\n      searchString: value,\r\n    });\r\n  };\r\n  return (\r\n    <Row\r\n      lg={20}\r\n      md={20}\r\n      sm={20}\r\n      xs={24}\r\n      justify='space-between'\r\n      align='middle'\r\n      className='forum-page-header-extra-wrapper'\r\n    >\r\n      <Search\r\n        placeholder='Input search string'\r\n        loading={searchLoading}\r\n        enterButton\r\n        allowClear\r\n        value={searchString}\r\n        onChange={(e) => updateSearchString(e.target.value)}\r\n        onPressEnter={() => doSearch()}\r\n        onSearch={() => doSearch()}\r\n      />\r\n    </Row>\r\n  );\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\getTruncatedName.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\MessagePreview.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Messages\\utils\\Editor.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\CommentsWrapper.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\SingleSelect.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\CommentsContainer.js",["403"],"import React, { useState } from 'react';\r\nimport {\r\n  Tooltip,\r\n  Input,\r\n  Form,\r\n  List,\r\n  Spin,\r\n  Avatar,\r\n  Space,\r\n  notification,\r\n} from 'antd';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport moment from 'moment';\r\nimport AppTexts from './AppTexts';\r\nimport Buttons from './Buttons';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { getRandomColor } from 'components/tools/colorGenerator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport actions from 'redux/Forum/actions';\r\nimport { getRequest } from 'Config/axiosClient';\r\nimport { useInterval } from 'components/tools/useInterval';\r\n\r\nconst { TextArea } = Input;\r\nconst data = [\r\n  {\r\n    actions: [],\r\n    author: 'Han Solo',\r\n    avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\r\n    content: (\r\n      <p>\r\n        We supply a series of design principles, practical patterns and high\r\n        quality design resources (Sketch and Axure), to help people create their\r\n        product prototypes beautifully and efficiently.\r\n      </p>\r\n    ),\r\n    datetime: (\r\n      <Tooltip\r\n        title={moment().subtract(1, 'days').format('YYYY-MM-DD HH:mm:ss')}\r\n      >\r\n        <span>{moment().subtract(1, 'days').fromNow()}</span>\r\n      </Tooltip>\r\n    ),\r\n  },\r\n  {\r\n    actions: [],\r\n    author: 'Han Solo',\r\n    avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\r\n    content: (\r\n      <p>\r\n        We supply a series of design principles, practical patterns and high\r\n        quality design resources (Sketch and Axure), to help people create their\r\n        product prototypes beautifully and efficiently.\r\n      </p>\r\n    ),\r\n    datetime: (\r\n      <Tooltip\r\n        title={moment().subtract(1, 'days').format('YYYY-MM-DD HH:mm:ss')}\r\n      >\r\n        <span>{moment().subtract(1, 'days').fromNow()}</span>\r\n      </Tooltip>\r\n    ),\r\n  },\r\n];\r\nconst Editor = ({ onChange, onSubmit, submitting, value }) => (\r\n  <>\r\n    <Form.Item className='comment-input-wrapper'>\r\n      <TextArea\r\n        placeholder='Enter your comments here'\r\n        className='add-comment-input'\r\n        rows={4}\r\n        onChange={onChange}\r\n        value={value}\r\n        onPressEnter={onSubmit}\r\n      />\r\n    </Form.Item>\r\n    <Form.Item className='comment-submit-wrapper'>\r\n      <Buttons\r\n        htmlType='submit'\r\n        loading={submitting}\r\n        handleClick={onSubmit}\r\n        type='primary'\r\n        content='Add Comment'\r\n      ></Buttons>\r\n    </Form.Item>\r\n  </>\r\n);\r\nexport default function CommentsContainer({ postId, defaultComments = [] }) {\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [comments, setComments] = useState([...defaultComments]);\r\n  // const [data, setData] = useState([])\r\n  const dispatch = useDispatch();\r\n  const { userId } = useSelector((state) => state.authenticateReducer);\r\n  useInterval(async () => {\r\n    const response = await getRequest(`posts/comments/${postId.split('_')[1]}`);\r\n    setComments(response?.data?.data?.comments || []);\r\n\r\n    return () => {};\r\n  }, 1000 * 1);\r\n  const [loading] = useState(false);\r\n  const [hasMore] = useState(true);\r\n  const handleSubmit = () => {\r\n    if (newComment.length === 0) {\r\n      notification['info']({\r\n        message: 'Please enter comment',\r\n        // description: response?.data?.message,\r\n        placement: 'bottomRight',\r\n      });\r\n      return;\r\n    }\r\n    dispatch({\r\n      type: actions.ADDCOMMENT,\r\n      payload: {\r\n        userId: Number(userId),\r\n        postId: Number(postId.split('_')[1]),\r\n        comment: newComment,\r\n      },\r\n    });\r\n    setSubmitting(true);\r\n    setTimeout(() => {\r\n      setSubmitting(false);\r\n      setNewComment('');\r\n    }, 1000);\r\n  };\r\n  const handleChange = (e) => {\r\n    setNewComment(e.target.value);\r\n  };\r\n  const handleInfiniteOnLoad = (e) => {};\r\n  return (\r\n    <Space direction='vertical' className='comment-list-spacer'>\r\n      <div className='comments-infinite-container'>\r\n        <InfiniteScroll\r\n          initialLoad={false}\r\n          pageStart={0}\r\n          loadMore={handleInfiniteOnLoad}\r\n          hasMore={!loading && hasMore}\r\n          useWindow={false}\r\n        >\r\n          <List\r\n            itemLayout='vertical'\r\n            dataSource={[...comments]}\r\n            renderItem={(item) => (\r\n              <List.Item key={item.comment_id}>\r\n                <List.Item.Meta\r\n                  avatar={\r\n                    <Avatar\r\n                      icon={<UserOutlined />}\r\n                      style={{\r\n                        backgroundColor: getRandomColor(item.message),\r\n                      }}\r\n                    />\r\n                  }\r\n                  title={\r\n                    <>\r\n                      <AppTexts\r\n                        containerStyles='comment-name-container'\r\n                        className='medium'\r\n                        content={`${item.first_name || 'first name'} ${\r\n                          item.last_name || 'last name'\r\n                        }`}\r\n                      ></AppTexts>\r\n                      <AppTexts\r\n                        containerStyles='comment-timestamp-container'\r\n                        className='comment-timestamp xsmall'\r\n                        content={moment(new Date(item.timestamp * 1000))\r\n                          .subtract(0, 'days')\r\n                          .fromNow()}\r\n                      />\r\n                    </>\r\n                  }\r\n                  description={<AppTexts content={item.content} />}\r\n                />\r\n                <AppTexts\r\n                  // containerStyle={{ 'padding-left': '50px' }}\r\n                  style={{ paddingLeft: '58px' }}\r\n                  content={item.message}\r\n                />\r\n              </List.Item>\r\n            )}\r\n          >\r\n            {loading && hasMore && (\r\n              <div className='demo-loading-container'>\r\n                <Spin />\r\n              </div>\r\n            )}\r\n          </List>\r\n        </InfiniteScroll>\r\n      </div>\r\n      <Editor\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n        submitting={submitting}\r\n        value={newComment}\r\n      />\r\n    </Space>\r\n  );\r\n}\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\EditProfileModal.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\ProjectCard.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\ProjectModal.js",["404","405"],"import React, { useEffect, useState } from 'react';\r\nimport { UserOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Typography,\r\n  Divider,\r\n  Tag,\r\n  Avatar,\r\n  Button,\r\n  Tooltip,\r\n} from 'antd';\r\nimport { getRequest, postRequest, deleteRequest } from 'Config/axiosClient';\r\nimport { getRandomColor } from 'components/tools/colorGenerator';\r\nimport { dateToUTC } from 'components/tools/date';\r\nimport AppTitles from 'components/utils/AppTitles';\r\nimport AppTexts from 'components/utils/AppTexts';\r\nimport { useSelector } from 'react-redux';\r\nfunction ProjectModal({\r\n  isProjectModalVisible,\r\n  projectId,\r\n  handleProjectModalCancel,\r\n}) {\r\n  const { Paragraph, Text } = Typography;\r\n  const [data, setData] = useState(null);\r\n  const [followLoading, setFollowLoading] = useState(false);\r\n  const [collaborators, setCollaborators] = useState(null);\r\n  const { userId } = useSelector((state) => state.authenticateReducer);\r\n  const U_id = `U_${userId}`;\r\n  function handleFollowUnfollow() {\r\n    setFollowLoading(true);\r\n    const id = projectId.split('_')[1];\r\n    if (collaborators && collaborators.includes(U_id)) {\r\n      deleteRequest(`project/user_id/${id}/${userId}`)\r\n        .then((res) => {\r\n          getCollaborators(id);\r\n          setFollowLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          setFollowLoading(false);\r\n        });\r\n    } else {\r\n      postRequest(`project/user_id/${id}/${userId}`)\r\n        .then((res) => {\r\n          getCollaborators(id);\r\n          setFollowLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          setFollowLoading(false);\r\n        });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    setData(null);\r\n    const id = projectId.split('_')[1];\r\n\r\n    if (isProjectModalVisible) {\r\n      getRequest(`project/${id}`).then((res) => {\r\n        setData(res.data.data);\r\n      });\r\n      getCollaborators(id);\r\n    }\r\n    return () => {};\r\n  }, [isProjectModalVisible]);\r\n  const getCollaborators = (id) => {\r\n    getRequest(`project/user_id/${id}`).then((res) => {\r\n      setCollaborators(res.data.data);\r\n    });\r\n  };\r\n  const tags = data?.skills?.map((skill) => (\r\n    <Tag color={getRandomColor(skill)}>{skill}</Tag>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      {data ? (\r\n        <Modal\r\n          title={<AppTitles className='medium' content={data?.title} />}\r\n          visible={isProjectModalVisible}\r\n          onCancel={handleProjectModalCancel}\r\n          // onOk={null}\r\n          className='project-modal-wrapper'\r\n          footer={[\r\n            <Button\r\n              key='submit'\r\n              type='primary'\r\n              loading={followLoading}\r\n              onClick={handleFollowUnfollow}\r\n            >\r\n              {collaborators && collaborators.includes(U_id)\r\n                ? 'Unfollow'\r\n                : 'Follow'}\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <Row gutter={[16, 24]}>\r\n            <Col>\r\n              <Text strong>Description:</Text>\r\n              <Paragraph>{data?.description}</Paragraph>\r\n              <Divider />\r\n              <Text strong>Requirements:</Text>\r\n              <Paragraph>{data?.requirement}</Paragraph>\r\n              <Text strong>Start Date:</Text>\r\n              <Paragraph>{dateToUTC(data?.start_date)} AST</Paragraph>\r\n              <Text strong>End Date:</Text>\r\n              <Paragraph>{dateToUTC(data?.end_date)} AST</Paragraph>\r\n              <Text strong>Location:</Text>\r\n              <Paragraph>{data.location}</Paragraph>\r\n              <Text strong>Project status:</Text>\r\n              <Paragraph>{data.status}</Paragraph>\r\n            </Col>\r\n          </Row>\r\n          <Divider />\r\n          <Row>\r\n            <Col span={24}>\r\n              <Text strong>Skills:</Text>\r\n            </Col>\r\n            <Col style={{ marginTop: '1%' }}>{tags}</Col>\r\n          </Row>\r\n          <Divider />\r\n          <Row>\r\n            <Col span={12}>\r\n              <Row>\r\n                <Col span={24}>\r\n                  <AppTexts containerStyles='nomargin' content='Created By' />\r\n\r\n                  <AppTexts\r\n                    content={\r\n                      <>\r\n                        <Avatar\r\n                          style={{\r\n                            backgroundColor: getRandomColor(data?.created_by),\r\n                          }}\r\n                          size={30}\r\n                          icon={<UserOutlined />}\r\n                        />{' '}\r\n                        {data?.created_by}\r\n                      </>\r\n                    }\r\n                  />\r\n                </Col>\r\n                <Col span={24} style={{ marginTop: '1%' }}></Col>\r\n              </Row>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Row>\r\n                <Col span={24}>\r\n                  <Text strong>Contributors:</Text>\r\n                </Col>\r\n                <Col span={24} style={{ marginTop: '1%' }}>\r\n                  <Avatar.Group\r\n                    maxCount={2}\r\n                    size='medium'\r\n                    maxStyle={{ color: '#f56a00', backgroundColor: '#fde3cf' }}\r\n                  >\r\n                    {collaborators &&\r\n                      collaborators.map((value) => (\r\n                        <Tooltip title={value} placement='bottom'>\r\n                          <Avatar\r\n                            style={{\r\n                              backgroundColor: getRandomColor(value),\r\n                            }}\r\n                            size={30}\r\n                            icon={<UserOutlined />}\r\n                          />\r\n                        </Tooltip>\r\n                      ))}\r\n                  </Avatar.Group>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectModal;\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\colorGenerator.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\RecommProjects.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\RecommM&M.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\UserModal.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\UserCard.js",["406"],"import React from 'react';\r\nimport { Skeleton, Card, Avatar, Tag, Col } from 'antd';\r\nimport { ExpandOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { getRandomColor } from 'components/tools/colorGenerator';\r\nimport AppTexts from 'components/utils/AppTexts';\r\nimport Buttons from 'components/utils/Buttons';\r\n\r\nconst { Meta } = Card;\r\nexport default function UserCard({\r\n  city,\r\n  country,\r\n  first_name,\r\n  last_name,\r\n  links,\r\n  pic,\r\n  score,\r\n  state,\r\n  title,\r\n  user_id,\r\n  zipcode,\r\n  loading,\r\n  handleClick,\r\n}) {\r\n  return (\r\n    <Col lg={8} md={12} sm={24} xs={24}>\r\n      <Skeleton loading={loading} avatar active>\r\n        <Card\r\n          style={{ width: 300, marginTop: 16 }}\r\n          className='list-card'\r\n          actions={[\r\n            null,\r\n            <Buttons\r\n              handleClick={() => handleClick('user_id', user_id)}\r\n              content={\r\n                <>\r\n                  <ExpandOutlined key='expand' /> View Profile\r\n                </>\r\n              }\r\n            />,\r\n          ]}\r\n        >\r\n          <Skeleton loading={loading} avatar active>\r\n            <Meta\r\n              avatar={\r\n                <Avatar\r\n                  icon={<UserOutlined />}\r\n                  style={{\r\n                    backgroundColor: getRandomColor(\r\n                      `${first_name} ${last_name}`,\r\n                    ),\r\n                  }}\r\n                />\r\n              }\r\n              title={`${first_name} ${last_name}`}\r\n              description={title}\r\n              style={{ textAlign: 'left' }}\r\n            />\r\n          </Skeleton>\r\n          <Tag className='card-user-type' color='#3ca6b5'>\r\n            User\r\n          </Tag>\r\n        </Card>\r\n      </Skeleton>\r\n    </Col>\r\n  );\r\n}\r\n// data.city\r\n// data.country\r\n// data.first_name\r\n// data.last_name\r\n// data.links\r\n// data.pic\r\n// data.score\r\n// data.state\r\n// data.title\r\n// data.user_id\r\n// data.zipcode\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Forum\\contentPage\\utils\\ProjectCard.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Profile\\reducer.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Profile\\saga.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Profile\\actions.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\utils\\ViewWrapper.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\utils\\SearchSelector.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\sorter.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\searcher.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Messages\\actions.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Messages\\reducer.js",["407"],"import actions from 'redux/Messages/actions';\r\nconst initialState = {\r\n  contacts: [],\r\n  messages: {},\r\n  // isAuthenticated: sessionStorage.getItem('userToken'),\r\n  // loader: false,\r\n  // authToken: sessionStorage.getItem('userToken'),\r\n  // userType: sessionStorage.getItem('userType'),\r\n  // userId: sessionStorage.getItem('userId'),\r\n};\r\n\r\nfunction Reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actions.GETCONTACTS_SUCCESS:\r\n      if (!shallowCompare(state.contacts, action.contacts))\r\n        return { ...state, contacts: [...action.contacts] };\r\n      else return state;\r\n\r\n    case actions.GETMESSAGES_SUCCESS:\r\n      let newMessages = { ...state.messages };\r\n      newMessages[action.toUser] = action.messages;\r\n      return {\r\n        ...state,\r\n        messages: {\r\n          ...newMessages,\r\n        },\r\n      };\r\n    case actions.POSTMESSAGE_SUCCESS:\r\n      return { ...state, contacts: action.contacts };\r\n    // case actions.POSTMESSAGE_FAILURE:\r\n    //   return { ...state, contacts: action.contacts };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default Reducer;\r\n\r\nconst shallowCompare = (a, b) => {\r\n  for (var key in a) {\r\n    if (!(key in b)) {\r\n      return false;\r\n    }\r\n  }\r\n  for (var key in b) {\r\n    if (!(key in a)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\redux\\Messages\\saga.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\useInterval.js",["408","409"],"// referenced from stackoverflow\r\nimport React, { useState, useEffect, useRef } from 'react';\r\n\r\nexport const useInterval = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      const id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\capitalize.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\tools\\date.js",[],"C:\\Users\\amelj\\Documents\\SAAS\\WEbApp\\mcube\\src\\components\\Profile\\AddProjectModal.js",["410","411","412"],"import React, { useState, useEffect } from 'react';\r\nimport { Modal, Form, Input, Select, DatePicker, Button } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from 'redux/Profile/actions';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\n\r\nfunction AddProjectModal({\r\n  isAddProjectModalVisible,\r\n  handleAddProjectModalCancel,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const [form] = Form.useForm();\r\n  const { Option } = Select;\r\n  const { confirm } = Modal;\r\n  const { skillList, skillErrorMessage, skillDisplayError } = useSelector(\r\n    (state) => state.profileReducer,\r\n  );\r\n  const { userId } = useSelector((state) => state.authenticateReducer);\r\n  const [skillListComponent, setSkillListComponent] = useState(null);\r\n  const [projectStartDate, setProjectStartDate] = useState(null);\r\n  const [projectEndDate, setProjectEndDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (skillList?.length === 0) {\r\n      dispatch({\r\n        type: actions.GETSKILLS,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let SkillListComponent1 = null;\r\n    SkillListComponent1 = skillList.map(function (skill) {\r\n      return (\r\n        <Option value={skill}>\r\n          <div className='demo-option-label-item'>{skill}</div>\r\n        </Option>\r\n      );\r\n    });\r\n    setSkillListComponent(SkillListComponent1);\r\n  }, [skillList]);\r\n\r\n  const getStartDate = (date, dateString) => {\r\n    var newdate = new Date(dateString);\r\n    var epochDate = newdate.getTime();\r\n    setProjectStartDate(epochDate);\r\n  };\r\n\r\n  const getEndDate = (date, dateString) => {\r\n    var newdate = new Date(dateString);\r\n    var epochDate = newdate.getTime();\r\n    setProjectEndDate(epochDate);\r\n  };\r\n\r\n  const showConfirm = (values) => {\r\n    confirm({\r\n      title: 'Do you want to create the project?',\r\n      icon: <ExclamationCircleOutlined />,\r\n      onOk() {\r\n        form\r\n          .validateFields()\r\n          .then((values) => {\r\n            dispatch({\r\n              type: actions.CREATEUSERPROJECT,\r\n              payload: {\r\n                user_id: userId,\r\n                project_details: {\r\n                  project_title: values.title,\r\n                  project_desc: values.description,\r\n                  project_status: values.status,\r\n                  project_req: values.requirements,\r\n                  project_start_date: String(projectStartDate),\r\n                  project_end_date: String(projectEndDate),\r\n                  project_tags: values.required_skills,\r\n                  project_location: values.location,\r\n                },\r\n              },\r\n            });\r\n            dispatch({\r\n              type: actions.GETUSERPROJECTS,\r\n              payload: {\r\n                user_id: userId,\r\n              },\r\n            });\r\n            handleAddProjectModalCancel();\r\n          })\r\n          .catch((info) => {\r\n            console.log('Validate Failed:', info);\r\n          });\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title='Add Project Modal'\r\n      visible={isAddProjectModalVisible}\r\n      width='60%'\r\n      onCancel={handleAddProjectModalCancel}\r\n      footer={[\r\n        <Button\r\n          key='submit'\r\n          type='primary'\r\n          loading={false}\r\n          htmlType='submit'\r\n          onClick={() => {\r\n            form.validateFields().then((values) => showConfirm(values));\r\n          }}\r\n        >\r\n          Create Project\r\n        </Button>,\r\n        <Button\r\n          type='danger'\r\n          loading={false}\r\n          onClick={handleAddProjectModalCancel}\r\n        >\r\n          Close\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <Form\r\n        form={form}\r\n        labelCol={{\r\n          span: 4,\r\n        }}\r\n        wrapperCol={{\r\n          span: 14,\r\n        }}\r\n        layout='horizontal'\r\n      >\r\n        <Form.Item\r\n          name='title'\r\n          label='Title'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input project title!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='description'\r\n          label='Description'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input project description!',\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='status'\r\n          label='Status'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please select project status!',\r\n            },\r\n          ]}\r\n        >\r\n          <Select>\r\n            <Select.Option value='to start'>Start</Select.Option>\r\n            <Select.Option value='ongoing'>In Progress</Select.Option>\r\n            <Select.Option value='completed'>Complete</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='requirements'\r\n          label='Requirements'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input project requirements!',\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='start_date'\r\n          label='Start Date'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input project start date!',\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker onChange={getStartDate} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='end_date'\r\n          label='End Date'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input project end date!',\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker onChange={getEndDate} />\r\n        </Form.Item>\r\n        {skillList?.length > 0 && (\r\n          <Form.Item\r\n            name='required_skills'\r\n            label='Required Skills'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please add required skills!',\r\n              },\r\n            ]}\r\n          >\r\n            <Select\r\n              mode='multiple'\r\n              style={{ width: '80%' }}\r\n              placeholder='select skills'\r\n            >\r\n              {skillListComponent}\r\n            </Select>\r\n          </Form.Item>\r\n        )}\r\n        <Form.Item\r\n          name='location'\r\n          label='Location'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input project location!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddProjectModal;\r\n",{"ruleId":"413","replacedBy":"414"},{"ruleId":"415","replacedBy":"416"},{"ruleId":"417","severity":1,"message":"418","line":50,"column":6,"nodeType":"419","endLine":50,"endColumn":8,"suggestions":"420"},{"ruleId":"417","severity":1,"message":"421","line":59,"column":6,"nodeType":"419","endLine":59,"endColumn":36,"suggestions":"422"},{"ruleId":"417","severity":1,"message":"418","line":40,"column":6,"nodeType":"419","endLine":40,"endColumn":8,"suggestions":"423"},{"ruleId":"417","severity":1,"message":"421","line":48,"column":6,"nodeType":"419","endLine":48,"endColumn":44,"suggestions":"424"},{"ruleId":"417","severity":1,"message":"418","line":32,"column":6,"nodeType":"419","endLine":32,"endColumn":8,"suggestions":"425"},{"ruleId":"417","severity":1,"message":"426","line":60,"column":6,"nodeType":"419","endLine":60,"endColumn":8,"suggestions":"427"},{"ruleId":"428","severity":1,"message":"429","line":9,"column":3,"nodeType":"430","messageId":"431","endLine":9,"endColumn":7},{"ruleId":"428","severity":1,"message":"432","line":11,"column":3,"nodeType":"430","messageId":"431","endLine":11,"endColumn":7},{"ruleId":"428","severity":1,"message":"433","line":28,"column":11,"nodeType":"430","messageId":"431","endLine":28,"endColumn":16},{"ruleId":"417","severity":1,"message":"418","line":52,"column":6,"nodeType":"419","endLine":52,"endColumn":8,"suggestions":"434"},{"ruleId":"417","severity":1,"message":"421","line":60,"column":6,"nodeType":"419","endLine":60,"endColumn":44,"suggestions":"435"},{"ruleId":"417","severity":1,"message":"436","line":27,"column":6,"nodeType":"419","endLine":27,"endColumn":8,"suggestions":"437"},{"ruleId":"428","severity":1,"message":"438","line":1,"column":38,"nodeType":"430","messageId":"431","endLine":1,"endColumn":44},{"ruleId":"428","severity":1,"message":"439","line":5,"column":8,"nodeType":"430","messageId":"431","endLine":5,"endColumn":12},{"ruleId":"428","severity":1,"message":"440","line":7,"column":8,"nodeType":"430","messageId":"431","endLine":7,"endColumn":15},{"ruleId":"428","severity":1,"message":"441","line":51,"column":9,"nodeType":"430","messageId":"431","endLine":51,"endColumn":21},{"ruleId":"428","severity":1,"message":"442","line":6,"column":10,"nodeType":"430","messageId":"431","endLine":6,"endColumn":15},{"ruleId":"417","severity":1,"message":"443","line":42,"column":6,"nodeType":"419","endLine":42,"endColumn":36,"suggestions":"444"},{"ruleId":"428","severity":1,"message":"445","line":20,"column":10,"nodeType":"430","messageId":"431","endLine":20,"endColumn":28},{"ruleId":"417","severity":1,"message":"446","line":59,"column":6,"nodeType":"419","endLine":59,"endColumn":20,"suggestions":"447"},{"ruleId":"417","severity":1,"message":"448","line":69,"column":6,"nodeType":"419","endLine":69,"endColumn":36,"suggestions":"449"},{"ruleId":"417","severity":1,"message":"450","line":30,"column":6,"nodeType":"419","endLine":30,"endColumn":8,"suggestions":"451"},{"ruleId":"417","severity":1,"message":"436","line":38,"column":6,"nodeType":"419","endLine":38,"endColumn":15,"suggestions":"452"},{"ruleId":"428","severity":1,"message":"453","line":19,"column":7,"nodeType":"430","messageId":"431","endLine":19,"endColumn":18},{"ruleId":"428","severity":1,"message":"440","line":2,"column":8,"nodeType":"430","messageId":"431","endLine":2,"endColumn":15},{"ruleId":"428","severity":1,"message":"454","line":3,"column":10,"nodeType":"430","messageId":"431","endLine":3,"endColumn":24},{"ruleId":"428","severity":1,"message":"455","line":25,"column":9,"nodeType":"430","messageId":"431","endLine":25,"endColumn":22},{"ruleId":"428","severity":1,"message":"456","line":1,"column":17,"nodeType":"430","messageId":"431","endLine":1,"endColumn":25},{"ruleId":"428","severity":1,"message":"457","line":8,"column":9,"nodeType":"430","messageId":"431","endLine":8,"endColumn":15},{"ruleId":"428","severity":1,"message":"458","line":9,"column":5,"nodeType":"430","messageId":"431","endLine":9,"endColumn":18},{"ruleId":"428","severity":1,"message":"459","line":19,"column":30,"nodeType":"430","messageId":"431","endLine":19,"endColumn":40},{"ruleId":"428","severity":1,"message":"460","line":28,"column":12,"nodeType":"430","messageId":"431","endLine":28,"endColumn":20},{"ruleId":"428","severity":1,"message":"456","line":1,"column":17,"nodeType":"430","messageId":"431","endLine":1,"endColumn":25},{"ruleId":"428","severity":1,"message":"440","line":2,"column":8,"nodeType":"430","messageId":"431","endLine":2,"endColumn":15},{"ruleId":"428","severity":1,"message":"454","line":3,"column":10,"nodeType":"430","messageId":"431","endLine":3,"endColumn":24},{"ruleId":"428","severity":1,"message":"442","line":4,"column":15,"nodeType":"430","messageId":"431","endLine":4,"endColumn":20},{"ruleId":"428","severity":1,"message":"461","line":5,"column":8,"nodeType":"430","messageId":"431","endLine":5,"endColumn":23},{"ruleId":"428","severity":1,"message":"462","line":10,"column":7,"nodeType":"430","messageId":"431","endLine":10,"endColumn":14},{"ruleId":"428","severity":1,"message":"463","line":24,"column":7,"nodeType":"430","messageId":"431","endLine":24,"endColumn":11},{"ruleId":"428","severity":1,"message":"464","line":2,"column":24,"nodeType":"430","messageId":"431","endLine":2,"endColumn":49},{"ruleId":"417","severity":1,"message":"465","line":65,"column":6,"nodeType":"419","endLine":65,"endColumn":29,"suggestions":"466"},{"ruleId":"428","severity":1,"message":"467","line":5,"column":8,"nodeType":"430","messageId":"431","endLine":5,"endColumn":16},{"ruleId":"468","severity":1,"message":"469","line":45,"column":12,"nodeType":"430","messageId":"470","endLine":45,"endColumn":15},{"ruleId":"428","severity":1,"message":"471","line":2,"column":8,"nodeType":"430","messageId":"431","endLine":2,"endColumn":13},{"ruleId":"428","severity":1,"message":"456","line":2,"column":17,"nodeType":"430","messageId":"431","endLine":2,"endColumn":25},{"ruleId":"428","severity":1,"message":"472","line":16,"column":22,"nodeType":"430","messageId":"431","endLine":16,"endColumn":39},{"ruleId":"428","severity":1,"message":"473","line":16,"column":41,"nodeType":"430","messageId":"431","endLine":16,"endColumn":58},{"ruleId":"417","severity":1,"message":"474","line":30,"column":6,"nodeType":"419","endLine":30,"endColumn":8,"suggestions":"475"},"no-native-reassign",["476"],"no-negated-in-lhs",["477"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'userId', and 'user_id'. Either include them or remove the dependency array.","ArrayExpression",["478"],"React Hook useEffect has a missing dependency: 'user_id'. Either include it or remove the dependency array. If 'setData' needs the current value of 'user_id', you can also switch to useReducer instead of useState and read 'user_id' in the reducer.",["479"],["480"],["481"],["482"],"React Hook useEffect has a missing dependency: 'userSkillList'. Either include it or remove the dependency array.",["483"],"no-unused-vars","'Rate' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Panel' is assigned a value but never used.",["484"],["485"],"React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.",["486"],"'useRef' is defined but never used.","'Feed' is defined but never used.","'Buttons' is defined but never used.","'addMoreFeeds' is assigned a value but never used.","'Space' is defined but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["487"],"'isUserModalVisible' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'feedSortBy'. Either include it or remove the dependency array.",["488"],"React Hook useEffect has a missing dependency: 'contentFeeds'. Either include it or remove the dependency array.",["489"],"React Hook useEffect has missing dependencies: 'contact.user_id', 'dispatch', and 'userId'. Either include them or remove the dependency array.",["490"],["491"],"'defaultText' is assigned a value but never used.","'SearchOutlined' is defined but never used.","'toggleLoading' is assigned a value but never used.","'useState' is defined but never used.","'Option' is assigned a value but never used.","'selectOptions' is assigned a value but never used.","'feedSortBy' is assigned a value but never used.","'onChange' is defined but never used.","'MultipleSelects' is defined but never used.","'options' is assigned a value but never used.","'data' is assigned a value but never used.","'ExclamationCircleOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'projectId'. Either include it or remove the dependency array.",["492"],"'AppTexts' is defined but never used.","no-redeclare","'key' is already defined.","redeclared","'React' is defined but never used.","'skillErrorMessage' is assigned a value but never used.","'skillDisplayError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'skillList?.length'. Either include them or remove the dependency array.",["493"],"no-global-assign","no-unsafe-negation",{"desc":"494","fix":"495"},{"desc":"496","fix":"497"},{"desc":"494","fix":"498"},{"desc":"499","fix":"500"},{"desc":"494","fix":"501"},{"desc":"502","fix":"503"},{"desc":"494","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},"Update the dependencies array to be: [dispatch, userId, user_id]",{"range":"523","text":"524"},"Update the dependencies array to be: [profileDataTemp, profileData, user_id]",{"range":"525","text":"526"},{"range":"527","text":"524"},"Update the dependencies array to be: [userProjectListTemp, userProjectList, user_id]",{"range":"528","text":"529"},{"range":"530","text":"524"},"Update the dependencies array to be: [userSkillList]",{"range":"531","text":"532"},{"range":"533","text":"524"},"Update the dependencies array to be: [userReviewsList, userReviewsListTemp, user_id]",{"range":"534","text":"535"},"Update the dependencies array to be: [dispatch, userId]",{"range":"536","text":"537"},"Update the dependencies array to be: [recommselectedtype, dispatch, userId]",{"range":"538","text":"539"},"Update the dependencies array to be: [contentFeeds, feedSortBy]",{"range":"540","text":"541"},"Update the dependencies array to be: [feedSortBy, feedSearchString, contentFeeds]",{"range":"542","text":"543"},"Update the dependencies array to be: [contact.user_id, dispatch, userId]",{"range":"544","text":"545"},"Update the dependencies array to be: [contact, dispatch, userId]",{"range":"546","text":"547"},"Update the dependencies array to be: [isProjectModalVisible, projectId]",{"range":"548","text":"549"},"Update the dependencies array to be: [dispatch, skillList?.length]",{"range":"550","text":"551"},[1604,1606],"[dispatch, userId, user_id]",[1772,1802],"[profileDataTemp, profileData, user_id]",[1415,1417],[1589,1627],"[userProjectListTemp, userProjectList, user_id]",[1081,1083],[1792,1794],"[userSkillList]",[1339,1341],[1513,1551],"[userReviewsList, userReviewsListTemp, user_id]",[1189,1191],"[dispatch, userId]",[1605,1635],"[recommselectedtype, dispatch, userId]",[2011,2025],"[contentFeeds, feedSortBy]",[2292,2322],"[feedSortBy, feedSearchString, contentFeeds]",[1165,1167],"[contact.user_id, dispatch, userId]",[1350,1359],"[contact, dispatch, userId]",[1949,1972],"[isProjectModalVisible, projectId]",[1095,1097],"[dispatch, skillList?.length]"]